{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/stellar/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/plugins/copycode.js","path":"js/plugins/copycode.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/search/algolia-search.js","path":"js/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/fcircle.js","path":"js/services/fcircle.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/friends.js","path":"js/services/friends.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/ghinfo.js","path":"js/services/ghinfo.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/mdrender.js","path":"js/services/mdrender.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/memos.js","path":"js/services/memos.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/siteinfo.js","path":"js/services/siteinfo.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/sites.js","path":"js/services/sites.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/timeline.js","path":"js/services/timeline.js","modified":0,"renderable":1},{"_id":"themes/stellar/source/js/services/weibo.js","path":"js/services/weibo.js","modified":0,"renderable":1},{"_id":"source/images/footertime.png","path":"images/footertime.png","modified":0,"renderable":0},{"_id":"source/images/rightsides.png","path":"images/rightsides.png","modified":0,"renderable":0},{"_id":"source/images/hello.png","path":"images/hello.png","modified":0,"renderable":0},{"_id":"source/images/cpp.png","path":"images/cpp.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"afce417f165e322bb64dc7ff944d5cc3dc03f37a","modified":1716902984839},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1715074002405},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1715074002405},{"_id":"public/2024/05/07/hello-world/index.html","hash":"a22ae911699471e8a87d9bd3f22f236627b8bf2f","modified":1715096544838},{"_id":"public/archives/index.html","hash":"fbcf70ae0c1b6b183f707d760dd8d8cbe78d8a02","modified":1715096544838},{"_id":"public/archives/2024/index.html","hash":"86b75da6ff07f42af35d1fc295a73f9e825467bf","modified":1715096544838},{"_id":"public/archives/2024/05/index.html","hash":"378f6d064d66f985f0babcbe6dcfe55b4cdf13d4","modified":1715096544838},{"_id":"public/index.html","hash":"eff002b0b797b8f999fa41600f19890fe8f1030a","modified":1715096544838},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1715096544838},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1715096544838},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1715096544838},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1715096544838},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1715096544838},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1715096544838},{"_id":"themes/stellar/layout/_partial/widgets/search.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1715096705650},{"_id":"themes/stellar/source/css/_components/widgets/tree.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1715096705662},{"_id":"themes/stellar/.gitignore","hash":"cf4e2dcaa760ff6f7520fd032ce44574e2970e54","modified":1715096705645},{"_id":"themes/stellar/.npmignore","hash":"9f66a3a5bea36f32c51cbfff88f1a45b74c80592","modified":1715096705645},{"_id":"themes/stellar/README.md","hash":"d474d9b14cafda27ab291336cbdb4ac91bfec756","modified":1715096705646},{"_id":"themes/stellar/giscus.json","hash":"af57a96a9dc188079bdcd0ad4273f1765778f5ea","modified":1715096705646},{"_id":"themes/stellar/package.json","hash":"51a2607b053e4520577e055a773e4bccdd95539c","modified":1715096705652},{"_id":"themes/stellar/languages/zh-CN.yml","hash":"dd31bdce070076d9d87be36e5a0ca7bdf5c1e2cb","modified":1715096705646},{"_id":"themes/stellar/LICENSE","hash":"7fdfdb5dbc7d672fa28a2a3c9efa03ff8df5917d","modified":1715096705646},{"_id":"themes/stellar/_config.yml","hash":"4bbb17f0885f1ddfe9a9818cebd49c1aa0707b2e","modified":1715096705646},{"_id":"themes/stellar/languages/en.yml","hash":"7befcf94a88c79d495431dd7fcd4e9496b8e398c","modified":1715096705646},{"_id":"themes/stellar/languages/zh-TW.yml","hash":"653d54b0d5146e7bf146793a43557a95736e465e","modified":1715096705646},{"_id":"themes/stellar/layout/404.ejs","hash":"d84f01256feb3c0bc0b280031fb78ae9f0d86f26","modified":1715096705646},{"_id":"themes/stellar/npm-publish.sh","hash":"b137d2f0d48fccd065ba1750b886f33ad7a7236a","modified":1715096705652},{"_id":"themes/stellar/layout/archive.ejs","hash":"af072e9b75e8d5371771237e71a1f1381078526a","modified":1715096705651},{"_id":"themes/stellar/layout/categories.ejs","hash":"eaf71831abd6780690f26fa1a7cf83bc6f08d7e9","modified":1715096705651},{"_id":"themes/stellar/layout/index_topic.ejs","hash":"6bffb1488ce9c2c4b04386cb7fe61792ae5491f2","modified":1715096705652},{"_id":"themes/stellar/layout/index.ejs","hash":"ea5fa65b2049bc1c4c8c247972a79310468e3c68","modified":1715096705652},{"_id":"themes/stellar/layout/index_wiki.ejs","hash":"9e7dc6941c5205ed60fa7abfb1f36ae19e2f3834","modified":1715096705652},{"_id":"themes/stellar/layout/layout.ejs","hash":"879a2b082abe4c4de51a8f4bc2095f8f6105cc79","modified":1715096705652},{"_id":"themes/stellar/layout/page.ejs","hash":"995522b7ed87fc89b8d70f650703363601e36174","modified":1715096705652},{"_id":"themes/stellar/layout/tags.ejs","hash":"4ff8ccff9a9c8d373df788fbc0bebdc87302056e","modified":1715096705652},{"_id":"themes/stellar/.github/ISSUE_TEMPLATE/any-question.yaml","hash":"312caa37c7c3090b496167e6da5f82099ca4de4e","modified":1715096705645},{"_id":"themes/stellar/_data/widgets.yml","hash":"574136777d8e9c06ed9642afce9f68c21b46d20b","modified":1715096705646},{"_id":"themes/stellar/.github/ISSUE_TEMPLATE/article-share.md","hash":"f88a131062c94d8dadd0536e841966bf8547e1a7","modified":1715096705645},{"_id":"themes/stellar/.github/configs/label-commenter-config.yml","hash":"acae6f9e872bd6a462e711771aeedcb7cdca0a86","modified":1715096705645},{"_id":"themes/stellar/.github/workflows/npm-publish.yml","hash":"9e95a1f04628056117df5ab8615acd36f3d63283","modified":1715096705645},{"_id":"themes/stellar/.github/workflows/label-commenter.yml","hash":"f89d116ba78e3fd4a0695c2ac4176e46e3c92028","modified":1715096705645},{"_id":"themes/stellar/_data/icons.yml","hash":"59ff2162c2974fb64b6da769dda331bdf0da35da","modified":1715096705646},{"_id":"themes/stellar/layout/_partial/head.ejs","hash":"78287469a403a326295561d1b590fd1cd822452c","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/menubtn.ejs","hash":"36775d16431301a6ac02858f32a8ee470ef8332f","modified":1715096705649},{"_id":"themes/stellar/layout/_plugins/fancybox.ejs","hash":"dcb638d9320eea6c9a6b7b0212e6167341bec05b","modified":1715096705651},{"_id":"themes/stellar/layout/_plugins/heti.ejs","hash":"c3956c8fd5fabd4ec8cea05dc076bf7a03eb012a","modified":1715096705651},{"_id":"themes/stellar/layout/_plugins/index.ejs","hash":"29407e95f14d4d50c1f8a8b9a5af242927676432","modified":1715096705651},{"_id":"themes/stellar/layout/_plugins/lazyload.ejs","hash":"e2b07b0c97d531c82cc02a80610fe0c1a39bc837","modified":1715096705651},{"_id":"themes/stellar/layout/_plugins/mathjax.ejs","hash":"c1621e718747a6eb34734e7e4a8364f5a78dc714","modified":1715096705651},{"_id":"themes/stellar/layout/_plugins/mermaid.ejs","hash":"8ef22ac075890554521f464f6b92dc1fb7538b37","modified":1715096705651},{"_id":"themes/stellar/scripts/events/index.js","hash":"38e64f33a00ee328d22774890dc963c1196bd7f1","modified":1715096705652},{"_id":"themes/stellar/scripts/filters/index.js","hash":"5667f028990dd556133080090a5fcb00c64f05ac","modified":1715096705653},{"_id":"themes/stellar/layout/_plugins/preload.ejs","hash":"f25523da5633b249da8cebe7c866265bf7825697","modified":1715096705651},{"_id":"themes/stellar/layout/_partial/scripts.ejs","hash":"4cce2274152e4933bf2c3cb05c86d788f3b65eb4","modified":1715096705649},{"_id":"themes/stellar/scripts/generators/404.js","hash":"66b53d2b35b18d5f3835b47467c23f31eb322553","modified":1715096705653},{"_id":"themes/stellar/layout/_plugins/scrollreveal.ejs","hash":"1f3b98068a4db7ec709b47e134520af16f59fa71","modified":1715096705651},{"_id":"themes/stellar/layout/_plugins/copycode.ejs","hash":"7cedd8eced00f6813f7d772334ec92acbc8bd982","modified":1715096705651},{"_id":"themes/stellar/scripts/generators/author.js","hash":"0de0824fdbc4f67c84910267901095504b253751","modified":1715096705653},{"_id":"themes/stellar/scripts/generators/search.js","hash":"404f28ea5d77cee462a551d8f74c9f7c41f73ba0","modified":1715096705653},{"_id":"themes/stellar/scripts/generators/tags.js","hash":"ed29755154d8e7a9346019ba4ac8782a8649b177","modified":1715096705653},{"_id":"themes/stellar/layout/_plugins/swiper.ejs","hash":"b80d6185c0263375df82498705a98ad32238b12f","modified":1715096705651},{"_id":"themes/stellar/scripts/generators/topic.js","hash":"88c0f2990365fb0ce751682815e07f36cf333d3f","modified":1715096705653},{"_id":"themes/stellar/scripts/generators/wiki.js","hash":"61efe22787c3fea9d935df4b088a9dd2d1af0868","modified":1715096705653},{"_id":"themes/stellar/layout/_plugins/tianli_gpt.ejs","hash":"961b9131a2f0e30afa94c6a3c35dd7869b69f0cc","modified":1715096705651},{"_id":"themes/stellar/scripts/helpers/icon.js","hash":"b7c84be7f08abc1725f351ed8718791a861466c3","modified":1715096705654},{"_id":"themes/stellar/scripts/helpers/category_color.js","hash":"20b19d6b6307cdeb0b0832bf4931366abe972490","modified":1715096705653},{"_id":"themes/stellar/scripts/helpers/scrollreveal.js","hash":"57e3da4a3dd751b3ebd384a674e26f08f69da018","modified":1715096705654},{"_id":"themes/stellar/scripts/generators/categories.js","hash":"936d4d406fd401359bab1e5f74c6e1e097e8f092","modified":1715096705653},{"_id":"themes/stellar/scripts/helpers/stellar_info.js","hash":"5b7a10c8b09237a467767f5467749c7d9378c2c1","modified":1715096705654},{"_id":"themes/stellar/scripts/helpers/related_posts.js","hash":"6763a97fa25669fa1d1aa8e5291919deb5dc7f67","modified":1715096705654},{"_id":"themes/stellar/scripts/helpers/parse_config.js","hash":"1251d82318972f22283dc7a089b77a3f0135b1b6","modified":1715096705654},{"_id":"themes/stellar/scripts/tags/inline-labels.js","hash":"a9cb7520af8a95f467c048128c036cbb3167fb8d","modified":1715096705654},{"_id":"themes/stellar/layout/_partial/comments/layout.ejs","hash":"3dbdb141d295d25b4f67fd0e299c40baa38241a8","modified":1715096705647},{"_id":"themes/stellar/scripts/tags/index.js","hash":"9276f2e8f476699b682b3a4de6e1c6bddc971f99","modified":1715096705654},{"_id":"themes/stellar/layout/_partial/main/footer.ejs","hash":"31014fa3ad6c09931cae0c748d66677a285c1f17","modified":1715133267763},{"_id":"themes/stellar/layout/_partial/comments/script.ejs","hash":"62be59ef634ceee342c81ecc4e23cb664cdbf620","modified":1715096705647},{"_id":"themes/stellar/source/css/_custom.styl","hash":"58e0e4d48aa890a48604873e76cb8a44a04b6d3d","modified":1715096705662},{"_id":"themes/stellar/source/css/main.styl","hash":"44b5008a50682b442f38f1cc2ffd117e4dfc9ec5","modified":1715096705663},{"_id":"themes/stellar/scripts/helpers/utils.js","hash":"05c127baa250b192c9c673355bf90d7134e1ea11","modified":1715096705654},{"_id":"themes/stellar/layout/_partial/cover/index.ejs","hash":"4b317700640749b1e04e6d51a542a2bcd28c8b72","modified":1715096705647},{"_id":"themes/stellar/source/js/main.js","hash":"ab563d681848bbfee4456fe269f1c1008678861e","modified":1715096705664},{"_id":"themes/stellar/layout/_partial/cover/wiki_cover.ejs","hash":"8374cf58d5cc52799b8e1c8af95dd84c65372173","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/scripts/services.ejs","hash":"ebe96e8b8edef9f48c80cff0e97b588dc8a1c859","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/scripts/sidebar.ejs","hash":"403b6986bfc54177a7ee3ddba9e0a55e7b79e3a1","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/scripts/theme.ejs","hash":"87022a734dc2f4be8549463111696bbbf6f950b1","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/sidebar/logo.ejs","hash":"cd08385b0026953cd9adf5c22af528b9c3e924e7","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/sidebar/index_rightbar.ejs","hash":"2e32bd7776f8caffbfc11ccd3393611480690fbf","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/scripts/utils.ejs","hash":"a2a0d37c33b05c9020dbebe457e53283bff72a95","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/scripts/defines.ejs","hash":"93393f0fbd25f09363ada3adefd97ccb9ebd5893","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/sidebar/menu.ejs","hash":"59d579a0eaec7572485d8d4d22341de79a890d00","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/author.ejs","hash":"4c7eab461e45a7a5863333e9904dadbed6c8ca0c","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/ghissues.ejs","hash":"410f56e6da87e7a1476d033c6939a0241658a598","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/sidebar/index_leftbar.ejs","hash":"5a0b325540f2f8804c1843f3a4881cc4682c08f6","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/sidebar/search.ejs","hash":"058c19e09f2c702480ad543b194ae3fa187dc9da","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/cover/post_cover.ejs","hash":"59e6ae6726ded33e3d84208fd4a4872a6431fcc7","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/widgets/linklist.ejs","hash":"813336cbbe4505e9be42d5682fd7b720dba25194","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/ghrepo.ejs","hash":"e7d23ff8f8c96f77685e441c7f6040430d07a21a","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/markdown.ejs","hash":"7ce0ce941c55e42c545c1fffa77a3db07e1989b1","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/ghuser.ejs","hash":"5d8cf68b091f8bf4b88ac230495bc2dec561ad6a","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/recent.ejs","hash":"a5fcb3be545dbbc6a57f3e6dda47c30114c74148","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/timeline.ejs","hash":"745b384871291e0cf2f6ceb4a0c12989b4e8cd62","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/tagcloud.ejs","hash":"d95c26f84c7d9061ba3ef6188d58fa14f1c63bf3","modified":1715096705650},{"_id":"themes/stellar/scripts/events/lib/authors.js","hash":"eedefb5430fc4176bdc2814c8a88295f0e524d10","modified":1715096705652},{"_id":"themes/stellar/layout/_partial/widgets/toc.ejs","hash":"63c01fb3c03187e214a9d19fc0ab72fd74031e3b","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/related.ejs","hash":"ac6040f2067c799836d5dc4abacf0b879a156d88","modified":1715096705650},{"_id":"themes/stellar/layout/_plugins/search/algolia_search.ejs","hash":"654fa8e2d695e5aa16988dfcd7dfab1b9b27d6f9","modified":1715096705651},{"_id":"themes/stellar/layout/_partial/widgets/tree.ejs","hash":"2a7d37a843e32d073be4637bc17980e368a16003","modified":1715096705651},{"_id":"themes/stellar/scripts/events/lib/doc_tree.js","hash":"e217f244af98b1151e7f57e9e77812f3a1e2ad78","modified":1715096705652},{"_id":"themes/stellar/scripts/events/lib/links.js","hash":"881cac75e4071d219a18156738e18eb397d83c00","modified":1715096705653},{"_id":"themes/stellar/scripts/events/lib/utils.js","hash":"271ba6c8cc997e4f55b2e146a99bde8301818400","modified":1715096705653},{"_id":"themes/stellar/scripts/events/lib/config.js","hash":"ab74c3df31ad21b842d859af40c1131dbd8fd2d7","modified":1715096705652},{"_id":"themes/stellar/scripts/events/lib/merge_posts.js","hash":"4e45b8dc5317f7d66bc14879ae6b5f972123ce5d","modified":1715096705653},{"_id":"themes/stellar/scripts/filters/lib/img_lazyload.js","hash":"b3dedcc1fc4189589e63d4fa6f169a70e9d63cd1","modified":1715096705653},{"_id":"themes/stellar/scripts/filters/lib/img_onerror.js","hash":"d44a8e20d4d537c0cf85b980e1fc3bc84865a2d3","modified":1715096705653},{"_id":"themes/stellar/scripts/events/lib/topic_tree.js","hash":"7f735f2573c87d202e2d4b845307d0725d619e8e","modified":1715096705653},{"_id":"themes/stellar/scripts/tags/lib/albums.js","hash":"9fd16a8ceffd1806c25582062af7a72eca0e5c56","modified":1715096705654},{"_id":"themes/stellar/scripts/tags/lib/about.js","hash":"c9778c35c1ccd9f2018174bafbd37b23dd52cf62","modified":1715096705654},{"_id":"themes/stellar/scripts/tags/lib/box.js","hash":"753ae16a343ae82628f2057bd9cf09ea376fdbb5","modified":1715096705654},{"_id":"themes/stellar/scripts/tags/lib/button.js","hash":"e0890a759335b1c5ad09db084bcf62073b2557cb","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/banner.js","hash":"1fceb77a37ecaddf38c03aa655eec878701427c0","modified":1715096705654},{"_id":"themes/stellar/scripts/tags/lib/checkbox.js","hash":"69caf7488b6c92cb2524df81ece6f33a46a89fe0","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/audio.js","hash":"9b094b16dce131a5c09373661c88a1de9b5326f7","modified":1715096705654},{"_id":"themes/stellar/scripts/tags/lib/copy.js","hash":"d22a82b6fd9c96c7ac49677b427e6c629fa889d7","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/emoji.js","hash":"e10f68f69206fc6e9d0c478630be2b4514d328d7","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/folders.js","hash":"853a75c8b4f445f64a18420929c31865db30cd39","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/folding.js","hash":"b1efa6e86b1f8f25a58376349f21117902e5bb01","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/friends.js","hash":"da08a75ad3579464debe8da2dd57314bd641dbb2","modified":1715096705655},{"_id":"themes/stellar/layout/_plugins/search/local_search.ejs","hash":"38a3641bb532583b699fda42175cb14242f07575","modified":1715096705651},{"_id":"themes/stellar/scripts/tags/lib/frame.js","hash":"1251a8622260af8efc55c2f0aac8ee5cf79d9043","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/grid.js","hash":"dad59b638c2fd30538e3a69bf0c8d76d34cf3ece","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/icon.js","hash":"273898ae29a07c1baccb432efa0d33ccfabe7db9","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/gallery.js","hash":"56a9309b096cbe1876a1e8c2b7c3f692325135e1","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/image.js","hash":"aa10441f0ec79b2f33829e5b1b8b4b4c21d865e9","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/ghcard.js","hash":"039ee39d8dba7c0aa0e267de38f9064b30855a55","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/link.js","hash":"8a1297c324749f98e24036d3aa91ad374ad1d930","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/hashtag.js","hash":"f38ce98fff40ed35be9b1f1be3194bc4c5d44dc3","modified":1715096705655},{"_id":"themes/stellar/scripts/tags/lib/mark.js","hash":"cfd8198f349dba60fbdf53042b6ebd9a0ba521c7","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/note.js","hash":"a70d1fcb440ad029ddddb72b053a59b1ed3bfef8","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/md.js","hash":"6ed5db6d055dbfe01ecaeddbd0ead13a20ba7e74","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/okr.js","hash":"8e7a7d912e4f5e1fe1feb6125e4762c378b11ba3","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/posters.js","hash":"713e1367f3a60e5903954a8fab15b0d9d9cfd89a","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/poetry.js","hash":"c36321caeec845ed131bdd0922bff25eb59f086a","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/quot.js","hash":"e87c2d55973a688837072e3d0b7cfdffc58dde5b","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/sites.js","hash":"298f42f3097a19e5d229099964e15dac7d46e1b0","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/timeline.js","hash":"f1defeed67e56c055f37ee7fab8a597a9d14f89e","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/tabs.js","hash":"1b3d7b6b962293b44430e7b40560b8d1fa5c618d","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/toc.js","hash":"d7b51b66d7b83a77e501930e735092a9967d5d18","modified":1715096705657},{"_id":"themes/stellar/scripts/tags/lib/swiper.js","hash":"dc025c79b190d233383fec001ddbe478f2675cc8","modified":1715096705656},{"_id":"themes/stellar/scripts/tags/lib/video.js","hash":"9f580f1483e6c24eba6ff96aef8f52ee3bf85b71","modified":1715096705657},{"_id":"themes/stellar/scripts/tags/lib/navbar.js","hash":"e78ca3469c44362c7d8c3ad8899f49a119b326ff","modified":1715096705656},{"_id":"themes/stellar/source/css/_common/base.styl","hash":"2986c5771652c353a320f4404ceeb1c6b257a6ed","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/button.styl","hash":"9afb3e566294f95f404a608b666367081a691e6b","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/blur.styl","hash":"43441caaee7b7ab011a26016362b023263cd64a8","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/cap.styl","hash":"c99286644d4a44dc76e1fe9a3af1815112f65acc","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/control.styl","hash":"75081ca9d522a76ec4acffb8111c918b2297650a","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/device.styl","hash":"fa135f5d93f8a333cc77f7dd4f6b8bf88e0f43bd","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/blockquote.styl","hash":"f107e6f399382a6663722bc2e823986c257da9a3","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/highlight.styl","hash":"2e1191dbfa6e77a53ea9e95cecf66dc5b3d63b81","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/image.styl","hash":"cca1103a9185202b13be49e16d77d259e9ffb482","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/input.styl","hash":"953fc87072cd760d92dfef55310addbb17bb2b51","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/html.styl","hash":"e7f596ff7294517096f5cb27f5af53b1a797e047","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/loading.styl","hash":"6962fd568ad9779146742b8b8928cec107972e8e","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/media.styl","hash":"fa7dbcaa31089fe547acb01a767af97fb019bba6","modified":1715096705658},{"_id":"themes/stellar/source/css/_common/pre.styl","hash":"be7ecc0a1cdd2e6f1594c4cc238734b2dc3a2c4e","modified":1715096705658},{"_id":"themes/stellar/source/css/_common/layout.styl","hash":"c7d0d3c70087e14bd1f6d8d50d56762d8c5ad44d","modified":1715096705657},{"_id":"themes/stellar/source/css/_common/span.styl","hash":"86462ffaf1603b5d5ab6534c0f7fe0eb495aad2d","modified":1715096705658},{"_id":"themes/stellar/source/css/_common/svg.styl","hash":"aa2ae391db2ea028b9221740b24fca7f7e9ff16c","modified":1715096705658},{"_id":"themes/stellar/source/css/_common/title.styl","hash":"c9009b6c52a1ea4dfb6c2f56b1c3fc6de8a2c63a","modified":1715096705658},{"_id":"themes/stellar/source/css/_common/toast.styl","hash":"f2930874174763da2338fa95087c345bf5c41800","modified":1715096705658},{"_id":"themes/stellar/source/css/_defines/const.styl","hash":"c62a434f1eef895d343cb8255a19c6f1a6c73195","modified":1715096705662},{"_id":"themes/stellar/source/css/_defines/func.styl","hash":"7ca5d5e0f358038497649ca58402d03ac6ddb13f","modified":1715096705662},{"_id":"themes/stellar/source/css/_defines/theme.styl","hash":"152ab1b4d66175977a057563a3f66bf0cbc4fbd4","modified":1715096705662},{"_id":"themes/stellar/source/css/_plugins/aplayer.styl","hash":"00b6e9209638eef9f70e75a24a5a90b05f7b5347","modified":1715096705662},{"_id":"themes/stellar/source/css/_plugins/copycode.styl","hash":"a9f27136143eb779d1aeb903e863c94a98b82aac","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/fancybox.styl","hash":"f4a709dcac4e21ca0fbeca552a8dde2ac2bf8d97","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/index.styl","hash":"f96caf6f1d582973bc71199eee478cfc9fe88085","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/katex.styl","hash":"64a0208a475811c8a022536441188a161d9dd05d","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/lazyload.styl","hash":"6cd216067594d07c097a66e2403df36a1abbe6d6","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/mermaid.styl","hash":"b01f298bb006abfe00bf68566bcc53c3cad4a6e7","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/scrollreveal.styl","hash":"21b9125c1bae3e5348547e85500ceb992de21923","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/swiper.styl","hash":"46179e1e9ca273f4e095388d981acdc9fce5bdb8","modified":1715096705663},{"_id":"themes/stellar/source/css/_components/layout.styl","hash":"b7eb188db92bb9a32ae180969838f6eda2ec9640","modified":1715096705658},{"_id":"themes/stellar/source/css/_components/index.styl","hash":"7a7ab293e065116646102546c6bab01166836059","modified":1715096705658},{"_id":"themes/stellar/source/css/_components/list.styl","hash":"326015062dd68c7ee8272416cf4f7732d20482cb","modified":1715096705658},{"_id":"themes/stellar/source/css/_components/main.styl","hash":"41040b445d23ff4e56656ce3ca4e0fd7fd67d67b","modified":1715096705658},{"_id":"themes/stellar/source/js/plugins/copycode.js","hash":"af017eeaaf12e78b1700d78b199b4368d001a193","modified":1715096705664},{"_id":"themes/stellar/source/css/_components/md.styl","hash":"55c6f6f73468229159d895de08282e0d75b167b1","modified":1715096705658},{"_id":"themes/stellar/source/js/search/algolia-search.js","hash":"2b4cc743d66fbdbe37f2311963d54d957637ca3e","modified":1715096705664},{"_id":"themes/stellar/source/css/_plugins/tianli_gpt.styl","hash":"6cc2d27b8ec0296de09ce38d15abdd966702b79a","modified":1715096705663},{"_id":"themes/stellar/source/js/services/ghinfo.js","hash":"94b86ce42dd765e9a4c1befa72ee9648d7ec6f88","modified":1715096705664},{"_id":"themes/stellar/source/js/services/fcircle.js","hash":"add550bfb204a2057661d4d6630d78ebf485754d","modified":1715096705664},{"_id":"themes/stellar/source/js/services/friends.js","hash":"581a2baa085df422b752cbec098ca56aac691790","modified":1715096705664},{"_id":"themes/stellar/source/js/services/mdrender.js","hash":"947f476e6dd8ca6a75f87f6ac6f2fbb2b0861e82","modified":1715096705664},{"_id":"themes/stellar/source/js/services/memos.js","hash":"9d8e2976765ed15a739969752556b3ee28b1f283","modified":1715096705664},{"_id":"themes/stellar/source/js/services/siteinfo.js","hash":"74da788f29862604cd53f6b82b036ff56c715d21","modified":1715096705664},{"_id":"themes/stellar/source/js/services/sites.js","hash":"5626b70d13360933c581983dcda422e4fccdc810","modified":1715096705664},{"_id":"themes/stellar/source/js/search/local-search.js","hash":"cf710d711fcbc21122cdc01edd43d9b4087f1b9d","modified":1715096705664},{"_id":"themes/stellar/source/js/services/timeline.js","hash":"41cde82427726c3366b64b1f54f1aed9bc20fcf1","modified":1715096705664},{"_id":"themes/stellar/source/js/services/weibo.js","hash":"437e631539f3a50cf8b46ff17008404609c1c481","modified":1715096705664},{"_id":"themes/stellar/layout/_partial/comments/artalk/layout.ejs","hash":"14b26d696ba6644ef9d5854e1b4a8fda028bddb9","modified":1715096705646},{"_id":"themes/stellar/layout/_partial/comments/artalk/script.ejs","hash":"82aae1b1a5a5db2113935742f3fae5fc7d6f0177","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/beaudar/script.ejs","hash":"c2171249b79e549edbcdbbaf0d1f0c9deed2f033","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/beaudar/layout.ejs","hash":"431848ce38c18589ddb54d5e705bd7792872c199","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/giscus/layout.ejs","hash":"144e313ab45889c715ea1cfff3976b1f1322469e","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/giscus/script.ejs","hash":"35cc20ffa353c49ed8cdc0c27c7aea20cfe52b90","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/twikoo/layout.ejs","hash":"a3d429f4eafc582f739dd48865b39afd7c22ed56","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/twikoo/script.ejs","hash":"1b9d294c8be6d4ea58dfd5617f8561bad234e133","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/waline/layout.ejs","hash":"2abe764ffeab5603645b0e5148a17e9373de5eb4","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/utterances/script.ejs","hash":"c64d639c7cea2ce37973c786910b7964e6b41e6c","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/waline/script.ejs","hash":"d7d9a3959afff50e901532af211ec9805c84d67d","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/comments/utterances/layout.ejs","hash":"431848ce38c18589ddb54d5e705bd7792872c199","modified":1715096705647},{"_id":"themes/stellar/layout/_partial/main/article/related_posts.ejs","hash":"d771cdb24dd2a31cdadeed5c98c016675dc0c02a","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/article/article_footer.ejs","hash":"ea08a1daf4569f8a623ba0039d20bc150610c8c7","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/navbar/article_banner.ejs","hash":"877fca38602c76cc9ced6f739e3929091f0d2f74","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/article/read_next.ejs","hash":"30c9e20e6835fa92a528de61041742ff42cc2af0","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/navbar/dateinfo.ejs","hash":"8bec18d89f073fe5a7c669910fd2a8efc1fdb5e5","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/navbar/ghinfo.ejs","hash":"f5177430efd994b7c2d9d3104a58b0f1f60f4a00","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/navbar/nav_tabs_wiki.ejs","hash":"bb8644df466868a879fc97bc364f1aba6b1137cf","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/main/navbar/nav_tabs_blog.ejs","hash":"e66b369babf79bc84108bbc12d1ea7f7144cf33e","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/main/post_list/paginator.ejs","hash":"1a4b3bc64325ec7d5932ea78c36f2ec4978c09eb","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/main/post_list/post_card.ejs","hash":"dab8decf3ebf7a2d4d829a534af76e8500fbffbb","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/main/post_list/topic_card.ejs","hash":"9f100016e7cfa07c8728f9c3cf9543ed3ed43cfe","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/main/post_list/wiki_card.ejs","hash":"d2676c1817f09be21008fbf1c2a25e3c9dc1793f","modified":1715096705649},{"_id":"themes/stellar/layout/_partial/widgets/components/edit.ejs","hash":"9d976ca956c73128f72f39ca7641ceb5240b15a1","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/components/link.ejs","hash":"eee3e54cca066643d973f7bc1e2af6230121e634","modified":1715096705650},{"_id":"themes/stellar/layout/_partial/widgets/components/linklist.ejs","hash":"91f3a83ff54284200951637c0cfcd3e4e613942e","modified":1715096705650},{"_id":"themes/stellar/source/css/_plugins/comments/artalk.styl","hash":"279d7185e0ea65a8f5e1f783eaa3f83bc7bf3555","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/comments/beaudar.styl","hash":"e9800f67a650f1c022aee494768e05da76e6a6b7","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/comments/twikoo.styl","hash":"c30662f7635bbfd7b4ecde949fdec40aee4b6bce","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/comments/waline.styl","hash":"9efd82d46da9bb4adb09f7ad1eea31a599608163","modified":1715096705663},{"_id":"themes/stellar/source/css/_plugins/comments/utterances.styl","hash":"be43f728d9515acaf050fbb3eed83cfefa2fe702","modified":1715096705663},{"_id":"themes/stellar/source/css/_components/pages/error.styl","hash":"91f9df285a87bc7b7e9da19d547ea4b1dc392828","modified":1715096705658},{"_id":"themes/stellar/source/css/_components/pages/archives.styl","hash":"a99f09f4cc948588d071f8cd95362f2d70ec4c40","modified":1715096705658},{"_id":"themes/stellar/source/css/_components/partial/article-banner.styl","hash":"1a1f86d224c27c7be3f771652ac776dcb63fe62f","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/partial/article-footer.styl","hash":"762c38e63aebbd028b5aed264349fa1d2a14e8af","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/partial/bread-nav.styl","hash":"daf58b32af0b5dfea6cbfa1c3cab695976e57164","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/partial/cover.styl","hash":"ef44c47d0a70feb84d69cf8bb2bc6977f61b94f2","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/partial/navbar.styl","hash":"282291ee0f876ea14cff671555ab9defe8fc2318","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/partial/footer.styl","hash":"363fd4daf060fbf7de56fe5df787bc325565791b","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/partial/paginator.styl","hash":"d5a64f3820ffc0913086c9fa35b26391eb023e61","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/sidebar/footer.styl","hash":"ac3423d488259ea467e95325e12f57476a9bdc9c","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/partial/related.styl","hash":"b413ab434cfb778384fbac64d43da41437435aa0","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/sidebar/logo.styl","hash":"f81eb3d7a49c71f728d8bf42081bde30c6ff596e","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/sidebar/nav-area.styl","hash":"5302a72d15f7c35b391da723e84592f1129fca57","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/sidebar/search.styl","hash":"ea880602a99ed8cb9b87f410e1f340b4d23d38e8","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/sidebar/menu.styl","hash":"57f772066edaa2cbe560622de28035780ad9000b","modified":1715096705659},{"_id":"themes/stellar/source/css/_components/sidebar/sidebar.styl","hash":"aaac0bc311badd146a11d3276ce89a4361c52ad4","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/about.styl","hash":"cdaf1ccd782db961cecda0802c94dabe27656731","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/banner.styl","hash":"f49a123a61cb02c65eebb79adefae9a6f8b8e2fc","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/button.styl","hash":"19469c881d8798916ea45ec11ecd5348146e7927","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/checkbox.styl","hash":"1cd33e27fd539ed2a6cb41d4fc59294f1dd315b4","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/common.styl","hash":"a0a0e36d7672271147853bae34eb15b1ad2f0eef","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/emoji.styl","hash":"100d2e0c43496464dd97fa83fa3e603e68bf30e9","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/copy.styl","hash":"2e00b4923bf8a4cf1b742d19cf26165cc65fcffe","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/folders.styl","hash":"2eae18b521a613a19dd6399dcb5504f843dcbb88","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/folding.styl","hash":"84eb11a5a5808f3a4bd0985d97a7b108a36fd044","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/friends.styl","hash":"4d412ca8388ff65979b9a619a7ae2fe212a90bac","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/gallery.styl","hash":"52be8d049ce7533084aa3a6f361b4f365086af02","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/frame.styl","hash":"f8621b5a155ea78c5828e7ccbd1dfe6a72c9733c","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/ghcard.styl","hash":"98a50d3fab79ce03dd7f161fe3442d803712c284","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/hashtag.styl","hash":"0e2e74fcff5c30be9533e451a1c06ed1477dc9aa","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/grid.styl","hash":"606311fa8326152f99fc721284a09e06490d0cca","modified":1715096705660},{"_id":"themes/stellar/source/css/_components/tag-plugins/icon.styl","hash":"ea5372d1042db221f6c3ce5a31e18153c5e00d39","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/image.styl","hash":"beb0eb953d11489d4eaf16282784625062c81d9f","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/inline-labels.styl","hash":"96aad4c7710ed7097842fab77473b66a298b6e3f","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/link.styl","hash":"b91bb69a2f84567f87c2665c3dbaeb8831487185","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/media.styl","hash":"99cdaf447f8066738023a07163711c544fbed25a","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/mark.styl","hash":"1227da0705c294abab7030439d1e505c6b304ccf","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/navbar.styl","hash":"c2c3da16355f2dfd316edd11d9f2f2c50bc5299c","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/note.styl","hash":"5e59f5ab728c2ad5b5e4e06b0dd694407bb14096","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/override.styl","hash":"6a31ef8c4dc7caa655ed7d852100abb2711ab5ac","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/okr.styl","hash":"0c2d281e90c8cb1a0de5ff516dca0e08ae7db141","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/poetry.styl","hash":"6d15463121a741b69249318cadabf4bd06b4b3c6","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/quot.styl","hash":"06f7f98457e9c814621316f93b5f04686cdb6e2f","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/tabs.styl","hash":"b9bb4cf9442c0d4c09951c2fb886dbf8d0fe8de0","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/tag-plugins/toc.styl","hash":"18577b1c775f14da4b70cf3a8db56aa229f733c8","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/components.styl","hash":"34280561524a535342da3f246443b2a94fef074d","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/ghrepo.styl","hash":"73d5baa3dfcc9e73fc7470e1ebe244857ffd75c1","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/ghuser.styl","hash":"16c62c701f9cf6a253c6390d43eaa01cfd7600b1","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/markdown.styl","hash":"f5a431cd88fca7f328634e13eff50a55b34b734b","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/tag-plugins/timeline.styl","hash":"a5ef35db9c54905770c0ab68471ec054b0a83d9e","modified":1715096705661},{"_id":"themes/stellar/source/css/_components/widgets/list.styl","hash":"176281f5ccc64f87da4bbd4e34316e32017bc3b4","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/related.styl","hash":"8464b5adb8ffcd086d0e748849d907871d149223","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/tagcloud.styl","hash":"c452b18f1242c634c0e124a46414cbc7c65da494","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/timeline.styl","hash":"ab1901de4acfe89b642cd721d7d08b1b0009661b","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/toc.styl","hash":"f290d98a4d721b523b0c972b7de61a86b05b1086","modified":1715096705662},{"_id":"themes/stellar/source/css/_components/widgets/widgets.styl","hash":"7d383e58d54bf40806027fa22ab0ba70b5ab4fde","modified":1715096705662},{"_id":"themes/stellar/layout/_partial/main/navbar/breadcrumb/blog.ejs","hash":"0e3ff0a54e75acf562fd06d3d2c3ea03e0df7e81","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/navbar/breadcrumb/page.ejs","hash":"66fca0ad5ae3ceaa8fa1f698713c4882fc0341c3","modified":1715096705648},{"_id":"themes/stellar/layout/_partial/main/navbar/breadcrumb/wiki.ejs","hash":"c878619b0e8835e9a53a3b460ab5c707e9a3fb61","modified":1715096705648},{"_id":"themes/stellar/source/css/_components/tag-plugins/sites.styl","hash":"0b765b154695d544fa5dfab562e60a48c49f8547","modified":1715096705661},{"_id":"source/.DS_Store","hash":"95e5c27408f3fea1c6db0630d65e43c85dc0172e","modified":1716889620452},{"_id":"source/friends/friends.md","hash":"d688ef1b2e64fa9d617b8f1c860161397ec509d1","modified":1715098379014},{"_id":"source/about/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1715234039002},{"_id":"source/about/index.md","hash":"dc09e58c369fffe85b0c1e14e9997b228f134453","modified":1715606713912},{"_id":"source/friends/index.md","hash":"d0be64a4d0f97be7e549cac36b1acb4375fcb480","modified":1715233300236},{"_id":"source/friends/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1715172237612},{"_id":"source/images/footertime.png","hash":"2685c80c3d4adc78fb0cc62d7748790c1b44ac94","modified":1715134411927},{"_id":"source/images/rightsides.png","hash":"ef5a8a108dda04d2d0b36e3f8f54b018a9b01ec2","modified":1715135341077},{"_id":"source/images/.DS_Store","hash":"41f6eb90db919907ac1214ee818a6d9fd0f1795a","modified":1715136386740},{"_id":"source/images/hello.png","hash":"956e5356a7a52413c55528263ef3d36985f60053","modified":1715156580309},{"_id":"source/links/ios_developer.yml","hash":"a048928c37055015e6750affeb39d9810764b495","modified":1715171787603},{"_id":"source/links/index.md","hash":"1c375beaf60e92a8604e004d2ffa4e911b031012","modified":1715175354307},{"_id":"source/links/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1715172237612},{"_id":"source/_dates/links/ios_developer.yml","hash":"a048928c37055015e6750affeb39d9810764b495","modified":1715171787603},{"_id":"source/_dates/.DS_Store","hash":"66d57338a9533e854a2b21e7f92a2eb67801aea2","modified":1715171895812},{"_id":"source/_data/links/ios_developer.yml","hash":"a170100cd4a1aae8743fa4594e8738895613cdab","modified":1715176822274},{"_id":"source/_data/.DS_Store","hash":"8d2dd4080bc8b1a67ee6859552869c51cdd3d56e","modified":1715233388589},{"_id":"source/_posts/CppLearn.md","hash":"1cb546f0f5a4f01df1fc587f731ed534df39038f","modified":1715611463941},{"_id":"source/_posts/神印王座.md","hash":"0bb11dba1350060e0fa5faef9ac8b1456dd191cb","modified":1716902475892},{"_id":"source/_posts/.DS_Store","hash":"366a868db732ba34d2f6fb50b1e3ecae7662884f","modified":1715581830014},{"_id":"source/images/cpp.png","hash":"cac666de63d2b5859da0ff3cde93f58e958cd927","modified":1715240989948},{"_id":"source/_posts/CPP基础.md","hash":"91e845e0d9f98d30384a2f75ff0cf105c62bfecd","modified":1715580843812},{"_id":"source/_posts/代码随想录.md","hash":"bea21b99b43ce55d07b5808062ea2c4bd6f0b0e6","modified":1716890009634},{"_id":"source/_posts/数组part01.md","hash":"c78a01202a2d7e236385f565f6c3528efbb3221b","modified":1716890426766},{"_id":"source/_posts/数组part02.md","hash":"f4dbca0f64b8f72e862c130d3cee573743355467","modified":1716895864316}],"Category":[{"name":"Blog","_id":"clvwlele10001e73a0sx54w5w"},{"name":"动漫","_id":"clvxxf3ek0004y33a306eefes"},{"name":"cpp","_id":"clvyy1p2g0008y33a4q8m8nv1"},{"name":"题解","parent":"clvyy1p2g0008y33a4q8m8nv1","_id":"clwqglb0x0004xs3afmks99il"}],"Data":[{"_id":".DS_Store","data":"\u0000\u0000\u0000\u0001Bud1\u0000\u0000\u0010\u0000\u0000\u0000\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0002\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0001\u0000\u0000\u0010\u0000\u0000sIlocblob\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0005\u0000l\u0000i\u0000n\u0000k\u0000sIlocblob\u0000\u0000\u0000\u0010\u0000\u0000\u0000e\u0000\u0000\u0000�������\u0000\u0000\u0000\u0000\u0000\u0005\u0000l\u0000i\u0000n\u0000k\u0000sbwspblob\u0000\u0000\u0000�bplist00�\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\u0007\b\u000b\b]ShowStatusBar[ShowToolbar[ShowTabView_\u0010\u0014ContainerShowSidebar\\WindowBounds[ShowSidebar\b\t\b\t_\u0010\u0018{{450, 329}, {920, 436}}\t\b\u0015#/;R_klmno�\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0005\u0000l\u0000i\u0000n\u0000k\u0000slg1Scomp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000l\u0000i\u0000n\u0000k\u0000smoDDblob\u0000\u0000\u0000\b�>A����A\u0000\u0000\u0000\u0005\u0000l\u0000i\u0000n\u0000k\u0000smodDblob\u0000\u0000\u0000\b�>A����A\u0000\u0000\u0000\u0005\u0000l\u0000i\u0000n\u0000k\u0000sph1Scomp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000l\u0000i\u0000n\u0000k\u0000svSrnlong\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\b\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000�\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0001\u0000\u0000@\u0000\u0000\u0000\u0000\u0001\u0000\u0000�\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000\b\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000@\u0000\u0000\u0000\u0000\u0000\u0001\u0000�\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001 \u0000\u0000\u0000\u0000\u0000\u0000\u0001@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u000b\u0000\u0000\u0000E\u0000\u0000\u0002\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0004DSDB\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000�\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0001\u0000\u0000@\u0000\u0000\u0000\u0000\u0001\u0000\u0000�\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000\b\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000@\u0000\u0000\u0000\u0000\u0000\u0001\u0000�\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001 \u0000\u0000\u0000\u0000\u0000\u0000\u0001@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"},{"_id":"links/ios_developer","data":[{"title":"CAYZLH","url":"https://www.cayzlh.com","cover":null,"icon":"https://www.cayzlh.com/avatar.svg","description":"CODE IS POETRY"},{"title":"1dd's blog","url":"https://rail1dd.top","cover":null,"icon":"https://pics-1318128484.cos.ap-nanjing.myqcloud.com/1dd_square.jpg","description":"ESFJ｜复古未来｜跨界融合｜自我探索"},{"title":"又见苍岚","url":"https://www.zywvvd.com","cover":null,"icon":"https://www.zywvvd.com/image/avatar.png","description":"蓝天依旧，明眸如初"}]}],"Page":[{"menu_id":"about","title":"关于","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png","_content":"\n# 自我介绍\n\n来自 NJUPT 网络工程专业的大学生，然而网络相关的知识几乎为 0……~~（神经网络算网络吗？？？）~~\n\n\n\n# 获奖经历\n\n| **竞赛名称**      | **所获奖项** | **获奖时间**    |\n| :-----------------:        |    :------------:   |          :-------: |\n| 美国大学生数学建模竞赛       | Honorable Mention       | 2023.05   |\n| 中国高校计算机大赛——网络技术挑战赛   | 华东赛区一等奖        | 2023.08      |\n| 全国大学生物联网设计竞赛（华为杯）   | 全国二等奖      | 2023.08      |\n| 大学生物联网技术与应用“三创”大赛    | 全国一等奖        | 2023.08      |\n| 全国大学生数学建模竞赛   | 江苏省二等奖        | 2023.09      |\n| 中国高校计算机大赛——人工智能创意赛   | 区域赛三等奖         | 2023.10      |\n| 全国大学生市场调查与分析大赛   | 全国三等奖        | 2024.04      |\n\n\n# 公开成果\n\n**Efficient Prompt Tuning for Vision and Language Models**\n~~The 30th International Conference on Neural Information Processing （CCFC）~~\n* In this paper, we propose a more efficient CLIP prompt tuning method, achieving better performance and faster convergence in downstream tasks using large-scale pre-trained visual language models. Experimental results on 11 datasets demonstrate the superiority of our approach.\n* 论文中提出了一种更高效的CLIP prompt tuning方法，利用大规模预训练的视觉语言模型在下游任务中取得了更好的性能和更快的收敛。在11个数据集上的实验证明了该方法的优越性。\n\n\n\n\n# 技术栈\n\n本科阶段，遵循个人兴趣主要学习了计算机视觉相关的内容，受就业形势所迫及实习岗位影响，开始入坑客户端和C++。\n\n* **计算机视觉**\n  * **Python** | **Diffusion Model** | **PyTorch** ｜……\n* **客户端开发**\n  * **C++** ｜……\n\n\n# 碎碎念\n\n\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 13 日 -->\n\n面试通过，22号就要开始我的实习之旅了。\n\n* 主语言：C++\n* 岗位：软件开发，具体应该是SLAM点云数据相关\n\n<!-- node 2024 年 5 月 9 日 -->\n下午中海达面试，有点紧张……\n\n{% endtimeline %}","source":"about/index.md","raw":"---\nmenu_id: about\ntitle: 关于\nbanner : https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png\n---\n\n# 自我介绍\n\n来自 NJUPT 网络工程专业的大学生，然而网络相关的知识几乎为 0……~~（神经网络算网络吗？？？）~~\n\n\n\n# 获奖经历\n\n| **竞赛名称**      | **所获奖项** | **获奖时间**    |\n| :-----------------:        |    :------------:   |          :-------: |\n| 美国大学生数学建模竞赛       | Honorable Mention       | 2023.05   |\n| 中国高校计算机大赛——网络技术挑战赛   | 华东赛区一等奖        | 2023.08      |\n| 全国大学生物联网设计竞赛（华为杯）   | 全国二等奖      | 2023.08      |\n| 大学生物联网技术与应用“三创”大赛    | 全国一等奖        | 2023.08      |\n| 全国大学生数学建模竞赛   | 江苏省二等奖        | 2023.09      |\n| 中国高校计算机大赛——人工智能创意赛   | 区域赛三等奖         | 2023.10      |\n| 全国大学生市场调查与分析大赛   | 全国三等奖        | 2024.04      |\n\n\n# 公开成果\n\n**Efficient Prompt Tuning for Vision and Language Models**\n~~The 30th International Conference on Neural Information Processing （CCFC）~~\n* In this paper, we propose a more efficient CLIP prompt tuning method, achieving better performance and faster convergence in downstream tasks using large-scale pre-trained visual language models. Experimental results on 11 datasets demonstrate the superiority of our approach.\n* 论文中提出了一种更高效的CLIP prompt tuning方法，利用大规模预训练的视觉语言模型在下游任务中取得了更好的性能和更快的收敛。在11个数据集上的实验证明了该方法的优越性。\n\n\n\n\n# 技术栈\n\n本科阶段，遵循个人兴趣主要学习了计算机视觉相关的内容，受就业形势所迫及实习岗位影响，开始入坑客户端和C++。\n\n* **计算机视觉**\n  * **Python** | **Diffusion Model** | **PyTorch** ｜……\n* **客户端开发**\n  * **C++** ｜……\n\n\n# 碎碎念\n\n\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 13 日 -->\n\n面试通过，22号就要开始我的实习之旅了。\n\n* 主语言：C++\n* 岗位：软件开发，具体应该是SLAM点云数据相关\n\n<!-- node 2024 年 5 月 9 日 -->\n下午中海达面试，有点紧张……\n\n{% endtimeline %}","date":"2024-05-13T13:25:13.920Z","updated":"2024-05-13T13:25:13.912Z","path":"about/index.html","_id":"clvwl9v640001pc3aetatd7tu","comments":1,"layout":"page","content":"<h1 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h1><p>来自 NJUPT 网络工程专业的大学生，然而网络相关的知识几乎为 0……<del>（神经网络算网络吗？？？）</del></p>\n<h1 id=\"获奖经历\"><a href=\"#获奖经历\" class=\"headerlink\" title=\"获奖经历\"></a>获奖经历</h1><table>\n<thead>\n<tr>\n<th align=\"center\"><strong>竞赛名称</strong></th>\n<th align=\"center\"><strong>所获奖项</strong></th>\n<th align=\"center\"><strong>获奖时间</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">美国大学生数学建模竞赛</td>\n<td align=\"center\">Honorable Mention</td>\n<td align=\"center\">2023.05</td>\n</tr>\n<tr>\n<td align=\"center\">中国高校计算机大赛——网络技术挑战赛</td>\n<td align=\"center\">华东赛区一等奖</td>\n<td align=\"center\">2023.08</td>\n</tr>\n<tr>\n<td align=\"center\">全国大学生物联网设计竞赛（华为杯）</td>\n<td align=\"center\">全国二等奖</td>\n<td align=\"center\">2023.08</td>\n</tr>\n<tr>\n<td align=\"center\">大学生物联网技术与应用“三创”大赛</td>\n<td align=\"center\">全国一等奖</td>\n<td align=\"center\">2023.08</td>\n</tr>\n<tr>\n<td align=\"center\">全国大学生数学建模竞赛</td>\n<td align=\"center\">江苏省二等奖</td>\n<td align=\"center\">2023.09</td>\n</tr>\n<tr>\n<td align=\"center\">中国高校计算机大赛——人工智能创意赛</td>\n<td align=\"center\">区域赛三等奖</td>\n<td align=\"center\">2023.10</td>\n</tr>\n<tr>\n<td align=\"center\">全国大学生市场调查与分析大赛</td>\n<td align=\"center\">全国三等奖</td>\n<td align=\"center\">2024.04</td>\n</tr>\n</tbody></table>\n<h1 id=\"公开成果\"><a href=\"#公开成果\" class=\"headerlink\" title=\"公开成果\"></a>公开成果</h1><p><strong>Efficient Prompt Tuning for Vision and Language Models</strong><br><del>The 30th International Conference on Neural Information Processing （CCFC）</del></p>\n<ul>\n<li>In this paper, we propose a more efficient CLIP prompt tuning method, achieving better performance and faster convergence in downstream tasks using large-scale pre-trained visual language models. Experimental results on 11 datasets demonstrate the superiority of our approach.</li>\n<li>论文中提出了一种更高效的CLIP prompt tuning方法，利用大规模预训练的视觉语言模型在下游任务中取得了更好的性能和更快的收敛。在11个数据集上的实验证明了该方法的优越性。</li>\n</ul>\n<h1 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h1><p>本科阶段，遵循个人兴趣主要学习了计算机视觉相关的内容，受就业形势所迫及实习岗位影响，开始入坑客户端和C++。</p>\n<ul>\n<li><strong>计算机视觉</strong><ul>\n<li><strong>Python</strong> | <strong>Diffusion Model</strong> | <strong>PyTorch</strong> ｜……</li>\n</ul>\n</li>\n<li><strong>客户端开发</strong><ul>\n<li><strong>C++</strong> ｜……</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 13 日</div><div class=\"body fs14\"><p>面试通过，22号就要开始我的实习之旅了。</p><ul><li>主语言：C++</li><li>岗位：软件开发，具体应该是SLAM点云数据相关</li></ul></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 9 日</div><div class=\"body fs14\"><p>下午中海达面试，有点紧张……</p></div></div></div>","excerpt":"","more":"<h1 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h1><p>来自 NJUPT 网络工程专业的大学生，然而网络相关的知识几乎为 0……<del>（神经网络算网络吗？？？）</del></p>\n<h1 id=\"获奖经历\"><a href=\"#获奖经历\" class=\"headerlink\" title=\"获奖经历\"></a>获奖经历</h1><table>\n<thead>\n<tr>\n<th align=\"center\"><strong>竞赛名称</strong></th>\n<th align=\"center\"><strong>所获奖项</strong></th>\n<th align=\"center\"><strong>获奖时间</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">美国大学生数学建模竞赛</td>\n<td align=\"center\">Honorable Mention</td>\n<td align=\"center\">2023.05</td>\n</tr>\n<tr>\n<td align=\"center\">中国高校计算机大赛——网络技术挑战赛</td>\n<td align=\"center\">华东赛区一等奖</td>\n<td align=\"center\">2023.08</td>\n</tr>\n<tr>\n<td align=\"center\">全国大学生物联网设计竞赛（华为杯）</td>\n<td align=\"center\">全国二等奖</td>\n<td align=\"center\">2023.08</td>\n</tr>\n<tr>\n<td align=\"center\">大学生物联网技术与应用“三创”大赛</td>\n<td align=\"center\">全国一等奖</td>\n<td align=\"center\">2023.08</td>\n</tr>\n<tr>\n<td align=\"center\">全国大学生数学建模竞赛</td>\n<td align=\"center\">江苏省二等奖</td>\n<td align=\"center\">2023.09</td>\n</tr>\n<tr>\n<td align=\"center\">中国高校计算机大赛——人工智能创意赛</td>\n<td align=\"center\">区域赛三等奖</td>\n<td align=\"center\">2023.10</td>\n</tr>\n<tr>\n<td align=\"center\">全国大学生市场调查与分析大赛</td>\n<td align=\"center\">全国三等奖</td>\n<td align=\"center\">2024.04</td>\n</tr>\n</tbody></table>\n<h1 id=\"公开成果\"><a href=\"#公开成果\" class=\"headerlink\" title=\"公开成果\"></a>公开成果</h1><p><strong>Efficient Prompt Tuning for Vision and Language Models</strong><br><del>The 30th International Conference on Neural Information Processing （CCFC）</del></p>\n<ul>\n<li>In this paper, we propose a more efficient CLIP prompt tuning method, achieving better performance and faster convergence in downstream tasks using large-scale pre-trained visual language models. Experimental results on 11 datasets demonstrate the superiority of our approach.</li>\n<li>论文中提出了一种更高效的CLIP prompt tuning方法，利用大规模预训练的视觉语言模型在下游任务中取得了更好的性能和更快的收敛。在11个数据集上的实验证明了该方法的优越性。</li>\n</ul>\n<h1 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h1><p>本科阶段，遵循个人兴趣主要学习了计算机视觉相关的内容，受就业形势所迫及实习岗位影响，开始入坑客户端和C++。</p>\n<ul>\n<li><strong>计算机视觉</strong><ul>\n<li><strong>Python</strong> | <strong>Diffusion Model</strong> | <strong>PyTorch</strong> ｜……</li>\n</ul>\n</li>\n<li><strong>客户端开发</strong><ul>\n<li><strong>C++</strong> ｜……</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 13 日</div><div class=\"body fs14\"><p>面试通过，22号就要开始我的实习之旅了。</p><ul><li>主语言：C++</li><li>岗位：软件开发，具体应该是SLAM点云数据相关</li></ul></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 9 日</div><div class=\"body fs14\"><p>下午中海达面试，有点紧张……</p></div></div></div>"},{"menu_id":"links","title":"友链","date":"2024-05-09T05:41:40.246Z","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png","_content":"\n\n\n\n\n<br />\n\n# 网络的小伙伴\n\n\n<center>{% friends ios_developer %}</center>\n\n# 科协的老登们\n\n<br />\n\n# 本站信息\n{% poetry  author:  footer:你也会带我走吗？ %}\n名称：Monty Lee’s Blog \n**描述：温良慎独 ｜ 自由从容**\n网址：[https://montylee.cn/](https://montylee.cn/) \n图标：https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/monty_lee.png\n{% endpoetry %}\n\n\n\n","source":"friends/index.md","raw":"---\nmenu_id: links\ntitle: 友链\ndate: 2024/05/08/10/07\nbanner: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png\n---\n\n\n\n\n\n<br />\n\n# 网络的小伙伴\n\n\n<center>{% friends ios_developer %}</center>\n\n# 科协的老登们\n\n<br />\n\n# 本站信息\n{% poetry  author:  footer:你也会带我走吗？ %}\n名称：Monty Lee’s Blog \n**描述：温良慎独 ｜ 自由从容**\n网址：[https://montylee.cn/](https://montylee.cn/) \n图标：https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/monty_lee.png\n{% endpoetry %}\n\n\n\n","updated":"2024-05-09T05:41:40.236Z","path":"friends/index.html","_id":"clvxv6hvo00008d3a8dtg3mp4","comments":1,"layout":"page","content":"<br />\n\n<h1 id=\"网络的小伙伴\"><a href=\"#网络的小伙伴\" class=\"headerlink\" title=\"网络的小伙伴\"></a>网络的小伙伴</h1><center><div class=\"tag-plugin users-wrap\"><div class=\"grid-box\"><div class=\"grid-cell user-card\"><a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\" href=\"https://www.cayzlh.com\"><img src=\"https://www.cayzlh.com/avatar.svg\" onerror=\"javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/avatar/round/3442075.svg&quot;;\"/><div class=\"name\"><span>CAYZLH</span></div></a></div><div class=\"grid-cell user-card\"><a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\" href=\"https://rail1dd.top\"><img src=\"https://pics-1318128484.cos.ap-nanjing.myqcloud.com/1dd_square.jpg\" onerror=\"javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/avatar/round/3442075.svg&quot;;\"/><div class=\"name\"><span>1dd's blog</span></div></a></div><div class=\"grid-cell user-card\"><a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\" href=\"https://www.zywvvd.com\"><img src=\"https://www.zywvvd.com/image/avatar.png\" onerror=\"javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/avatar/round/3442075.svg&quot;;\"/><div class=\"name\"><span>又见苍岚</span></div></a></div></div></div></center>\n\n<h1 id=\"科协的老登们\"><a href=\"#科协的老登们\" class=\"headerlink\" title=\"科协的老登们\"></a>科协的老登们</h1><br />\n\n<h1 id=\"本站信息\"><a href=\"#本站信息\" class=\"headerlink\" title=\"本站信息\"></a>本站信息</h1><div class=\"tag-plugin poetry\"><div class=\"content\"><div class=\"body\"><p>名称：Monty Lee’s Blog<br><strong>描述：温良慎独 ｜ 自由从容</strong><br>网址：<a href=\"https://montylee.cn/\">https://montylee.cn/</a><br>图标：<a href=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/monty_lee.png\">https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/monty_lee.png</a></p></div><div class=\"footer\">你也会带我走吗？</div></div></div>\n\n\n\n","excerpt":"","more":"<br />\n\n<h1 id=\"网络的小伙伴\"><a href=\"#网络的小伙伴\" class=\"headerlink\" title=\"网络的小伙伴\"></a>网络的小伙伴</h1><center><div class=\"tag-plugin users-wrap\"><div class=\"grid-box\"><div class=\"grid-cell user-card\"><a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\" href=\"https://www.cayzlh.com\"><img src=\"https://www.cayzlh.com/avatar.svg\" onerror=\"javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/avatar/round/3442075.svg&quot;;\"/><div class=\"name\"><span>CAYZLH</span></div></a></div><div class=\"grid-cell user-card\"><a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\" href=\"https://rail1dd.top\"><img src=\"https://pics-1318128484.cos.ap-nanjing.myqcloud.com/1dd_square.jpg\" onerror=\"javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/avatar/round/3442075.svg&quot;;\"/><div class=\"name\"><span>1dd's blog</span></div></a></div><div class=\"grid-cell user-card\"><a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\" href=\"https://www.zywvvd.com\"><img src=\"https://www.zywvvd.com/image/avatar.png\" onerror=\"javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/avatar/round/3442075.svg&quot;;\"/><div class=\"name\"><span>又见苍岚</span></div></a></div></div></div></center>\n\n<h1 id=\"科协的老登们\"><a href=\"#科协的老登们\" class=\"headerlink\" title=\"科协的老登们\"></a>科协的老登们</h1><br />\n\n<h1 id=\"本站信息\"><a href=\"#本站信息\" class=\"headerlink\" title=\"本站信息\"></a>本站信息</h1><div class=\"tag-plugin poetry\"><div class=\"content\"><div class=\"body\"><p>名称：Monty Lee’s Blog<br><strong>描述：温良慎独 ｜ 自由从容</strong><br>网址：<a href=\"https://montylee.cn/\">https://montylee.cn/</a><br>图标：<a href=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/monty_lee.png\">https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/monty_lee.png</a></p></div><div class=\"footer\">你也会带我走吗？</div></div></div>\n\n\n\n"}],"Post":[{"title":"Blog 更新日志暨Hello World","date":"2024-05-07T15:40:53.548Z","description":"用于记录此博客的更新日志；同时，程序员不可越少的一集：问候世界","cover":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png","banner":null,"poster":{"topic":null,"headline":"Blog 更新日志暨Hello World","caption":"用于记录此博客的更新日志；同时，程序员不可越少的一集：问候世界","color":"black"},"sticky":null,"mermaid":null,"katex":null,"mathjax":null,"topic":"Blog","author":"Montee","references":null,"comments":1,"indexing":null,"breadcrumb":null,"leftbar":null,"rightbar":null,"h1":null,"type":"story","_content":"\n\n{% quot 1. 起航 %}\n\n\n偶然之下看到 [cayzlh](https://www.cayzlh.com) 的博客，非常简洁，脑子一热决定跟个风，经过一个晚上的折腾，终于成功部署。\n\n1. 本站由 [Monty Lee](https://www.montylee.cn) 基于 [Hexo](https://hexo.io/zh-cn/) 框架下的 [Stellar](https://github.com/xaoxuu/hexo-theme-stellar/tree/1.28.1) 主题创建\n2. 使用 [GitHub](https://github.com) 托管代码，[Vercel](https://vercel.com) 实现无服务器部署\n\n\n\n{% quot 2. 更新时间线 %}\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 8 日 -->\n完成图床、静态友链的配置\n\n<!-- node 2024 年 5 月 7 日 -->\n部署成功啦！\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png width:300px %}\n\n{% endtimeline %}\n\n* 主题版本更新时间线\n\n{% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1 %}\n{% endtimeline %}\n\n{% quot 3. 待完善 %}\n\n- [ ] **友链和关于页面**\n\n  - [x] ~~尝试动态友链失败，最终还是选择了静态的友链~~\n\n- [ ] **footer 部分的倒计时功能**\n\n  - [x] ~~初步实现功能~~\n\n  - [ ] 美化，参见 [cayzlh](https://www.cayzlh.com)  \n\n    ![](../images/footertime.png)\n\n\n- [ ] **右侧栏公告及索引**\n\n  {% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/undefinedrightsides.png width:200px padding:16px bg:white %}\n\n\n- [ ] **RSS 订阅**\n\n- [ ] 评论插件配置\n\n- [ ] 博客文章密码验证阅读\n\n- [ ]  [小组件配置](https://xaoxuu.com/wiki/stellar/widgets/)\n\n- [ ] 文章页面发布和更新时间有问题\n\n  {% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240508230949859.png  %}\n\n- [x] ~~**图床**~~\n\n\n  - [x] ~~暂时使用 [imgtp](https://imgtp.com) 这个在线的免费图床~~\n\n  - [x] ~~不过觉得安全性不高，后续考虑使用 GitHub 作为图床，本地使用 PigGo 上传，jsDelivr 实现 CDN 加速，参加 [如何使用jsDelivr+Github 实现免费CDN加速?](https://zhuanlan.zhihu.com/p/346643522)~~\n\n  - [x] ~~实现使用腾讯云 COS+PicGo 实现图床（新买了一个存储桶后，发现去年买的还没过期，伤心了）~~ \n\n  - [ ] PicGo 图床插件设置\n\n\n---\n{% quot 引用 %}\n  - [如何使用jsDelivr+Github 实现免费CDN加速?](https://zhuanlan.zhihu.com/p/346643522)\n  - [如何利用 Github 搭建自己的免费图床？](https://zhuanlan.zhihu.com/p/353775844)\n  - [Stellar - 每个人的独立博客](https://xaoxuu.com/wiki/stellar/#start)\n  - ...\n\n---\n","source":"_posts/hello-world.md","raw":"---\n# 基本信息\ntitle: Blog 更新日志暨Hello World\ndate: 2024/05/07/20/07\ntags: [Blog]\ncategories: [Blog]\ndescription: 用于记录此博客的更新日志；同时，程序员不可越少的一集：问候世界\n# 封面\ncover: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png\nbanner: \nposter: # 海报（可选，全图封面卡片）\n  topic:   # 可选\n  headline: Blog 更新日志暨Hello World # 必选\n  caption: 用于记录此博客的更新日志；同时，程序员不可越少的一集：问候世界 # 可选\n  color: black # 可选\n# 插件\nsticky: # 数字越大越靠前\nmermaid:\nkatex: \nmathjax: \n# 可选\ntopic: Blog # 专栏 id\nauthor: Montee\nreferences:\ncomments: # 设置 false 禁止评论\nindexing: # 设置 false 避免被搜索\nbreadcrumb: # 设置 false 隐藏面包屑导航\nleftbar: \nrightbar:\nh1: # 设置为 '' 隐藏标题\ntype: story # tech/story\n---\n\n\n{% quot 1. 起航 %}\n\n\n偶然之下看到 [cayzlh](https://www.cayzlh.com) 的博客，非常简洁，脑子一热决定跟个风，经过一个晚上的折腾，终于成功部署。\n\n1. 本站由 [Monty Lee](https://www.montylee.cn) 基于 [Hexo](https://hexo.io/zh-cn/) 框架下的 [Stellar](https://github.com/xaoxuu/hexo-theme-stellar/tree/1.28.1) 主题创建\n2. 使用 [GitHub](https://github.com) 托管代码，[Vercel](https://vercel.com) 实现无服务器部署\n\n\n\n{% quot 2. 更新时间线 %}\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 8 日 -->\n完成图床、静态友链的配置\n\n<!-- node 2024 年 5 月 7 日 -->\n部署成功啦！\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png width:300px %}\n\n{% endtimeline %}\n\n* 主题版本更新时间线\n\n{% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1 %}\n{% endtimeline %}\n\n{% quot 3. 待完善 %}\n\n- [ ] **友链和关于页面**\n\n  - [x] ~~尝试动态友链失败，最终还是选择了静态的友链~~\n\n- [ ] **footer 部分的倒计时功能**\n\n  - [x] ~~初步实现功能~~\n\n  - [ ] 美化，参见 [cayzlh](https://www.cayzlh.com)  \n\n    ![](../images/footertime.png)\n\n\n- [ ] **右侧栏公告及索引**\n\n  {% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/undefinedrightsides.png width:200px padding:16px bg:white %}\n\n\n- [ ] **RSS 订阅**\n\n- [ ] 评论插件配置\n\n- [ ] 博客文章密码验证阅读\n\n- [ ]  [小组件配置](https://xaoxuu.com/wiki/stellar/widgets/)\n\n- [ ] 文章页面发布和更新时间有问题\n\n  {% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240508230949859.png  %}\n\n- [x] ~~**图床**~~\n\n\n  - [x] ~~暂时使用 [imgtp](https://imgtp.com) 这个在线的免费图床~~\n\n  - [x] ~~不过觉得安全性不高，后续考虑使用 GitHub 作为图床，本地使用 PigGo 上传，jsDelivr 实现 CDN 加速，参加 [如何使用jsDelivr+Github 实现免费CDN加速?](https://zhuanlan.zhihu.com/p/346643522)~~\n\n  - [x] ~~实现使用腾讯云 COS+PicGo 实现图床（新买了一个存储桶后，发现去年买的还没过期，伤心了）~~ \n\n  - [ ] PicGo 图床插件设置\n\n\n---\n{% quot 引用 %}\n  - [如何使用jsDelivr+Github 实现免费CDN加速?](https://zhuanlan.zhihu.com/p/346643522)\n  - [如何利用 Github 搭建自己的免费图床？](https://zhuanlan.zhihu.com/p/353775844)\n  - [Stellar - 每个人的独立博客](https://xaoxuu.com/wiki/stellar/#start)\n  - ...\n\n---\n","slug":"hello-world","published":1,"updated":"2024-05-28T13:29:44.839Z","_id":"clvwk77pj0000083a3e9i5t0u","layout":"post","photos":[],"content":"<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">1. 起航</span><span class=\"empty\"></span></p></div>\n\n\n<p>偶然之下看到 <a href=\"https://www.cayzlh.com/\">cayzlh</a> 的博客，非常简洁，脑子一热决定跟个风，经过一个晚上的折腾，终于成功部署。</p>\n<ol>\n<li>本站由 <a href=\"https://www.montylee.cn/\">Monty Lee</a> 基于 <a href=\"https://hexo.io/zh-cn/\">Hexo</a> 框架下的 <a href=\"https://github.com/xaoxuu/hexo-theme-stellar/tree/1.28.1\">Stellar</a> 主题创建</li>\n<li>使用 <a href=\"https://github.com/\">GitHub</a> 托管代码，<a href=\"https://vercel.com/\">Vercel</a> 实现无服务器部署</li>\n</ol>\n<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">2. 更新时间线</span><span class=\"empty\"></span></p></div>\n\n<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 8 日</div><div class=\"body fs14\"><p>完成图床、静态友链的配置</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 7 日</div><div class=\"body fs14\"><p>部署成功啦！</p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png\" style=\"width:300px;\"/></div></div></div></div></div>\n\n<ul>\n<li>主题版本更新时间线</li>\n</ul>\n<div class=\"tag-plugin timeline ds-timeline\" api=\"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1\"></div>\n\n<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">3. 待完善</span><span class=\"empty\"></span></p></div>\n\n<ul>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>友链和关于页面</strong></p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <del>尝试动态友链失败，最终还是选择了静态的友链</del></li>\n</ul>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>footer 部分的倒计时功能</strong></p>\n<ul>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>初步实现功能</del></p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n美化，参见 <a href=\"https://www.cayzlh.com/\">cayzlh</a>  </p>\n<p><img src=\"/../images/footertime.png\"></p>\n</li>\n</ul>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>右侧栏公告及索引</strong></p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\" style=\"background:white;padding:16px;\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/undefinedrightsides.png\" style=\"width:200px;\"/></div></div>\n\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>RSS 订阅</strong></p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n评论插件配置</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n博客文章密码验证阅读</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<a href=\"https://xaoxuu.com/wiki/stellar/widgets/\">小组件配置</a></p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n文章页面发布和更新时间有问题</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240508230949859.png\"/></div></div>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del><strong>图床</strong></del></p>\n<ul>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>暂时使用 <a href=\"https://imgtp.com/\">imgtp</a> 这个在线的免费图床</del></p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>不过觉得安全性不高，后续考虑使用 GitHub 作为图床，本地使用 PigGo 上传，jsDelivr 实现 CDN 加速，参加 <a href=\"https://zhuanlan.zhihu.com/p/346643522\">如何使用jsDelivr+Github 实现免费CDN加速?</a></del></p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>实现使用腾讯云 COS+PicGo 实现图床（新买了一个存储桶后，发现去年买的还没过期，伤心了）</del> </p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \nPicGo 图床插件设置</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">引用</span><span class=\"empty\"></span></p></div>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/346643522\">如何使用jsDelivr+Github 实现免费CDN加速?</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/353775844\">如何利用 Github 搭建自己的免费图床？</a></li>\n<li><a href=\"https://xaoxuu.com/wiki/stellar/#start\">Stellar - 每个人的独立博客</a></li>\n<li>…</li>\n</ul>\n<hr>\n","excerpt":"","more":"<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">1. 起航</span><span class=\"empty\"></span></p></div>\n\n\n<p>偶然之下看到 <a href=\"https://www.cayzlh.com/\">cayzlh</a> 的博客，非常简洁，脑子一热决定跟个风，经过一个晚上的折腾，终于成功部署。</p>\n<ol>\n<li>本站由 <a href=\"https://www.montylee.cn/\">Monty Lee</a> 基于 <a href=\"https://hexo.io/zh-cn/\">Hexo</a> 框架下的 <a href=\"https://github.com/xaoxuu/hexo-theme-stellar/tree/1.28.1\">Stellar</a> 主题创建</li>\n<li>使用 <a href=\"https://github.com/\">GitHub</a> 托管代码，<a href=\"https://vercel.com/\">Vercel</a> 实现无服务器部署</li>\n</ol>\n<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">2. 更新时间线</span><span class=\"empty\"></span></p></div>\n\n<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 8 日</div><div class=\"body fs14\"><p>完成图床、静态友链的配置</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 7 日</div><div class=\"body fs14\"><p>部署成功啦！</p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/hello.png\" style=\"width:300px;\"/></div></div></div></div></div>\n\n<ul>\n<li>主题版本更新时间线</li>\n</ul>\n<div class=\"tag-plugin timeline ds-timeline\" api=\"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1\"></div>\n\n<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">3. 待完善</span><span class=\"empty\"></span></p></div>\n\n<ul>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>友链和关于页面</strong></p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <del>尝试动态友链失败，最终还是选择了静态的友链</del></li>\n</ul>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>footer 部分的倒计时功能</strong></p>\n<ul>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>初步实现功能</del></p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n美化，参见 <a href=\"https://www.cayzlh.com/\">cayzlh</a>  </p>\n<p><img src=\"/../images/footertime.png\"></p>\n</li>\n</ul>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>右侧栏公告及索引</strong></p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\" style=\"background:white;padding:16px;\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/undefinedrightsides.png\" style=\"width:200px;\"/></div></div>\n\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<strong>RSS 订阅</strong></p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n评论插件配置</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n博客文章密码验证阅读</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n<a href=\"https://xaoxuu.com/wiki/stellar/widgets/\">小组件配置</a></p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \n文章页面发布和更新时间有问题</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240508230949859.png\"/></div></div>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del><strong>图床</strong></del></p>\n<ul>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>暂时使用 <a href=\"https://imgtp.com/\">imgtp</a> 这个在线的免费图床</del></p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>不过觉得安全性不高，后续考虑使用 GitHub 作为图床，本地使用 PigGo 上传，jsDelivr 实现 CDN 加速，参加 <a href=\"https://zhuanlan.zhihu.com/p/346643522\">如何使用jsDelivr+Github 实现免费CDN加速?</a></del></p>\n</li>\n<li><p><input checked=\"\" disabled=\"\" type=\"checkbox\"> \n<del>实现使用腾讯云 COS+PicGo 实现图床（新买了一个存储桶后，发现去年买的还没过期，伤心了）</del> </p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\"> \nPicGo 图床插件设置</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<div class=\"tag-plugin quot\"><p class=\"content\" type=\"text\"><span class=\"empty\"></span><span class=\"text\">引用</span><span class=\"empty\"></span></p></div>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/346643522\">如何使用jsDelivr+Github 实现免费CDN加速?</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/353775844\">如何利用 Github 搭建自己的免费图床？</a></li>\n<li><a href=\"https://xaoxuu.com/wiki/stellar/#start\">Stellar - 每个人的独立博客</a></li>\n<li>…</li>\n</ul>\n<hr>\n"},{"title":"国漫：《神印王座》","date":"2024-05-08T14:36:08.196Z","description":"《神印王座》是在我小学时候看的小说了，那会《斗罗大陆》正火，受其影响，我去看了三少的其他书，其中《神印王座》给我留下的印象最深刻。","cover":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0005.jpg","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/3a8bfe84234b40349fc3e8968ba975bc.jpeg","poster":{"topic":null,"headline":"国漫：《神印王座》","caption":null,"color":null},"sticky":null,"mermaid":null,"katex":null,"mathjax":null,"topic":"二次元","author":"Montee","references":null,"comments":1,"indexing":null,"breadcrumb":null,"leftbar":null,"rightbar":null,"h1":null,"type":"story","_content":"\n# 前言\n周围二次元的浓度实在是太高了，从宿舍到科协，不过大家都是看日漫，似乎看国漫是一件很反常的事……\n\n# 神印王座\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 28 日 -->\n\nWOC，采儿这个眼神杀我！\n\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC108%E9%9B%86_0001.gif width:300px %}\n\n\n\n<!-- node 2024 年 5 月 13 日 -->\n\n谁能拒绝叫自己主人的月夜啊！！！\n\n\n\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC75%E9%9B%86_0003.jpg width:300px %}\n\n<!-- node 2024 年 5 月 10 日 -->\n\n采儿的六道循回试炼太凶残了。\n\n<!-- node 2024 年 5 月 10 日 -->\n龙皓晨实在是太帅了！！！ \n\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC30%E9%9B%86_0002.gif width:300px %}\n\n{% endtimeline %}\n\n# 我的动漫之路\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 8 日 -->\n\n《神印王座》第一季看完了！（纠正一下，已经更新的看完了）\n\n<!-- node 2024 年 5 月 8 日 -->\n寒假的时候就看过一段时间《神印王座》，后来不知道为啥就不看了，今天又开始看了。\n\n<!-- node 2024 年 5 月 6 日 -->\n使用 Vidhub 和 Emby 搭建了一个影视资源库，从咸鱼上买了 Emby 一个账号。\n首页给我推荐《亏成首富从游戏开始》，我是土狗我爱看，一天就看完了。\n\n<!-- node 2023 年 1 月 1 日 -->\n大二的时候无聊看了《鬼灭之刃》的前三季，炎柱死的时候给我难受了好一会二，不过我的心是恋柱的。\n\n<!-- node 2020 年 1 月 1 日 -->\n大概高中的时候看过《刀剑神域》，亚丝娜最后被玷污的时候，真的想把反派掐死。\n\n<!-- node 2017 年 1 月 1 日 -->\n《火影忍者》，具体时间记不清了，断断续续地看了很久，但是依然没看完，700多集实在是太难坚持了。\n\n{% endtimeline %}\n\n\n\n# 碎碎念\n\n下图是第一季26集中的部分截图，主要是龙皓晨和韩羽猎魔团考核对战的情节。之所以对这部分情节印象深刻，是因为在韩羽输了比赛后，他爷爷对他的质问，顺势重温骑士十大守则：谦卑、诚实、怜悯、英勇、公正、牺牲、荣誉、执着、仁爱、正义。\n\n每每听到一群人大喊这十大守则的时候，我都觉得自己的中二之魂又开始觉醒了，哈哈哈哈，很巧的是我的座右铭是，温良慎独，自由从容。\n\n## 温良慎独\n\n慎独，语出《礼记·中庸》：“莫见乎隐，莫显乎微，故君子慎其独也”。第一次见到这个词就莫名地有一种亲切感，觉得这是自己立身立命的根本所在，也是人对自己要求的一种极高的境界。\n\n## 自由从容\n\n这四个字更像是自己对未来的憧憬，以及新时代青年的一种追求。\n\n今天，2024年的5月9日下午一点三十五分，我即将接受中海达的面试，曾经遥不可及的工作，现如今竟已恍然如入局，仓促至极，我真的可以“自由从容”吗？更多的时候，觉得自己是在被时代，被周边的一切推着向前挪步。\n\n{% gallery %}\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/3a8bfe84234b40349fc3e8968ba975bc.jpeg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0005.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC25%E9%9B%86_0001.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0020.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0047.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0022.jpg)\n{% endgallery %}\n\n\n\n\n# 待看\n\n* 星域四万年\n* 凡人修仙转\n\n","source":"_posts/神印王座.md","raw":"---\n# 基本信息\ntitle: 国漫：《神印王座》\ndate: 2024/05/08/22/38\ntags: [Blog]\ncategories: [动漫]\ndescription: 《神印王座》是在我小学时候看的小说了，那会《斗罗大陆》正火，受其影响，我去看了三少的其他书，其中《神印王座》给我留下的印象最深刻。\n# 封面\ncover: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0005.jpg\nbanner: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/3a8bfe84234b40349fc3e8968ba975bc.jpeg\nposter: # 海报（可选，全图封面卡片）\n  topic:  # 可选\n  headline:  国漫：《神印王座》 # 必选\n  caption:  # 可选\n  color:  # 可选\n# 插件\nsticky: # 数字越大越靠前\nmermaid:\nkatex: \nmathjax: \n# 可选\ntopic: 二次元 # 专栏 id\nauthor: Montee\nreferences:\ncomments: # 设置 false 禁止评论\nindexing: # 设置 false 避免被搜索\nbreadcrumb: # 设置 false 隐藏面包屑导航\nleftbar: \nrightbar:\nh1: # 设置为 '' 隐藏标题\ntype: story # tech/story\n---\n\n# 前言\n周围二次元的浓度实在是太高了，从宿舍到科协，不过大家都是看日漫，似乎看国漫是一件很反常的事……\n\n# 神印王座\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 28 日 -->\n\nWOC，采儿这个眼神杀我！\n\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC108%E9%9B%86_0001.gif width:300px %}\n\n\n\n<!-- node 2024 年 5 月 13 日 -->\n\n谁能拒绝叫自己主人的月夜啊！！！\n\n\n\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC75%E9%9B%86_0003.jpg width:300px %}\n\n<!-- node 2024 年 5 月 10 日 -->\n\n采儿的六道循回试炼太凶残了。\n\n<!-- node 2024 年 5 月 10 日 -->\n龙皓晨实在是太帅了！！！ \n\n{% image https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC30%E9%9B%86_0002.gif width:300px %}\n\n{% endtimeline %}\n\n# 我的动漫之路\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 8 日 -->\n\n《神印王座》第一季看完了！（纠正一下，已经更新的看完了）\n\n<!-- node 2024 年 5 月 8 日 -->\n寒假的时候就看过一段时间《神印王座》，后来不知道为啥就不看了，今天又开始看了。\n\n<!-- node 2024 年 5 月 6 日 -->\n使用 Vidhub 和 Emby 搭建了一个影视资源库，从咸鱼上买了 Emby 一个账号。\n首页给我推荐《亏成首富从游戏开始》，我是土狗我爱看，一天就看完了。\n\n<!-- node 2023 年 1 月 1 日 -->\n大二的时候无聊看了《鬼灭之刃》的前三季，炎柱死的时候给我难受了好一会二，不过我的心是恋柱的。\n\n<!-- node 2020 年 1 月 1 日 -->\n大概高中的时候看过《刀剑神域》，亚丝娜最后被玷污的时候，真的想把反派掐死。\n\n<!-- node 2017 年 1 月 1 日 -->\n《火影忍者》，具体时间记不清了，断断续续地看了很久，但是依然没看完，700多集实在是太难坚持了。\n\n{% endtimeline %}\n\n\n\n# 碎碎念\n\n下图是第一季26集中的部分截图，主要是龙皓晨和韩羽猎魔团考核对战的情节。之所以对这部分情节印象深刻，是因为在韩羽输了比赛后，他爷爷对他的质问，顺势重温骑士十大守则：谦卑、诚实、怜悯、英勇、公正、牺牲、荣誉、执着、仁爱、正义。\n\n每每听到一群人大喊这十大守则的时候，我都觉得自己的中二之魂又开始觉醒了，哈哈哈哈，很巧的是我的座右铭是，温良慎独，自由从容。\n\n## 温良慎独\n\n慎独，语出《礼记·中庸》：“莫见乎隐，莫显乎微，故君子慎其独也”。第一次见到这个词就莫名地有一种亲切感，觉得这是自己立身立命的根本所在，也是人对自己要求的一种极高的境界。\n\n## 自由从容\n\n这四个字更像是自己对未来的憧憬，以及新时代青年的一种追求。\n\n今天，2024年的5月9日下午一点三十五分，我即将接受中海达的面试，曾经遥不可及的工作，现如今竟已恍然如入局，仓促至极，我真的可以“自由从容”吗？更多的时候，觉得自己是在被时代，被周边的一切推着向前挪步。\n\n{% gallery %}\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/3a8bfe84234b40349fc3e8968ba975bc.jpeg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0005.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC25%E9%9B%86_0001.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0020.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0047.jpg)\n![](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0022.jpg)\n{% endgallery %}\n\n\n\n\n# 待看\n\n* 星域四万年\n* 凡人修仙转\n\n","slug":"神印王座","published":1,"updated":"2024-05-28T13:21:15.892Z","_id":"clvxxa3ik0001y33a7vc9grf1","layout":"post","photos":[],"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>周围二次元的浓度实在是太高了，从宿舍到科协，不过大家都是看日漫，似乎看国漫是一件很反常的事……</p>\n<h1 id=\"神印王座\"><a href=\"#神印王座\" class=\"headerlink\" title=\"神印王座\"></a>神印王座</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 28 日</div><div class=\"body fs14\"><p>WOC，采儿这个眼神杀我！</p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC108%E9%9B%86_0001.gif\" style=\"width:300px;\"/></div></div></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 13 日</div><div class=\"body fs14\"><p>谁能拒绝叫自己主人的月夜啊！！！</p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC75%E9%9B%86_0003.jpg\" style=\"width:300px;\"/></div></div></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\">2024 年 5 月 10 日</div><div class=\"body fs14\"><p>采儿的六道循回试炼太凶残了。</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\">2024 年 5 月 10 日</div><div class=\"body fs14\"><p>龙皓晨实在是太帅了！！！ </p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC30%E9%9B%86_0002.gif\" style=\"width:300px;\"/></div></div></div></div></div>\n\n<h1 id=\"我的动漫之路\"><a href=\"#我的动漫之路\" class=\"headerlink\" title=\"我的动漫之路\"></a>我的动漫之路</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 8 日</div><div class=\"body fs14\"><p>《神印王座》第一季看完了！（纠正一下，已经更新的看完了）</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 8 日</div><div class=\"body fs14\"><p>寒假的时候就看过一段时间《神印王座》，后来不知道为啥就不看了，今天又开始看了。</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\">2024 年 5 月 6 日</div><div class=\"body fs14\"><p>使用 Vidhub 和 Emby 搭建了一个影视资源库，从咸鱼上买了 Emby 一个账号。<br>首页给我推荐《亏成首富从游戏开始》，我是土狗我爱看，一天就看完了。</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\">2023 年 1 月 1 日</div><div class=\"body fs14\"><p>大二的时候无聊看了《鬼灭之刃》的前三季，炎柱死的时候给我难受了好一会二，不过我的心是恋柱的。</p></div></div><div class=\"timenode\" index=\"4\"><div class=\"header\">2020 年 1 月 1 日</div><div class=\"body fs14\"><p>大概高中的时候看过《刀剑神域》，亚丝娜最后被玷污的时候，真的想把反派掐死。</p></div></div><div class=\"timenode\" index=\"5\"><div class=\"header\">2017 年 1 月 1 日</div><div class=\"body fs14\"><p>《火影忍者》，具体时间记不清了，断断续续地看了很久，但是依然没看完，700多集实在是太难坚持了。</p></div></div></div>\n\n\n\n<h1 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h1><p>下图是第一季26集中的部分截图，主要是龙皓晨和韩羽猎魔团考核对战的情节。之所以对这部分情节印象深刻，是因为在韩羽输了比赛后，他爷爷对他的质问，顺势重温骑士十大守则：谦卑、诚实、怜悯、英勇、公正、牺牲、荣誉、执着、仁爱、正义。</p>\n<p>每每听到一群人大喊这十大守则的时候，我都觉得自己的中二之魂又开始觉醒了，哈哈哈哈，很巧的是我的座右铭是，温良慎独，自由从容。</p>\n<h2 id=\"温良慎独\"><a href=\"#温良慎独\" class=\"headerlink\" title=\"温良慎独\"></a>温良慎独</h2><p>慎独，语出《礼记·中庸》：“莫见乎隐，莫显乎微，故君子慎其独也”。第一次见到这个词就莫名地有一种亲切感，觉得这是自己立身立命的根本所在，也是人对自己要求的一种极高的境界。</p>\n<h2 id=\"自由从容\"><a href=\"#自由从容\" class=\"headerlink\" title=\"自由从容\"></a>自由从容</h2><p>这四个字更像是自己对未来的憧憬，以及新时代青年的一种追求。</p>\n<p>今天，2024年的5月9日下午一点三十五分，我即将接受中海达的面试，曾经遥不可及的工作，现如今竟已恍然如入局，仓促至极，我真的可以“自由从容”吗？更多的时候，觉得自己是在被时代，被周边的一切推着向前挪步。</p>\n<div class=\"tag-plugin gallery grid-box\" size=\"mix\" ratio=\"square\"><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/3a8bfe84234b40349fc3e8968ba975bc.jpeg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0005.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC25%E9%9B%86_0001.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0020.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0047.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0022.jpg\"/><div class=\"image-meta\"></div></div></div>\n\n\n\n\n<h1 id=\"待看\"><a href=\"#待看\" class=\"headerlink\" title=\"待看\"></a>待看</h1><ul>\n<li>星域四万年</li>\n<li>凡人修仙转</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>周围二次元的浓度实在是太高了，从宿舍到科协，不过大家都是看日漫，似乎看国漫是一件很反常的事……</p>\n<h1 id=\"神印王座\"><a href=\"#神印王座\" class=\"headerlink\" title=\"神印王座\"></a>神印王座</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 28 日</div><div class=\"body fs14\"><p>WOC，采儿这个眼神杀我！</p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC108%E9%9B%86_0001.gif\" style=\"width:300px;\"/></div></div></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 13 日</div><div class=\"body fs14\"><p>谁能拒绝叫自己主人的月夜啊！！！</p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC75%E9%9B%86_0003.jpg\" style=\"width:300px;\"/></div></div></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\">2024 年 5 月 10 日</div><div class=\"body fs14\"><p>采儿的六道循回试炼太凶残了。</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\">2024 年 5 月 10 日</div><div class=\"body fs14\"><p>龙皓晨实在是太帅了！！！ </p><div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC30%E9%9B%86_0002.gif\" style=\"width:300px;\"/></div></div></div></div></div>\n\n<h1 id=\"我的动漫之路\"><a href=\"#我的动漫之路\" class=\"headerlink\" title=\"我的动漫之路\"></a>我的动漫之路</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 8 日</div><div class=\"body fs14\"><p>《神印王座》第一季看完了！（纠正一下，已经更新的看完了）</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 8 日</div><div class=\"body fs14\"><p>寒假的时候就看过一段时间《神印王座》，后来不知道为啥就不看了，今天又开始看了。</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\">2024 年 5 月 6 日</div><div class=\"body fs14\"><p>使用 Vidhub 和 Emby 搭建了一个影视资源库，从咸鱼上买了 Emby 一个账号。<br>首页给我推荐《亏成首富从游戏开始》，我是土狗我爱看，一天就看完了。</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\">2023 年 1 月 1 日</div><div class=\"body fs14\"><p>大二的时候无聊看了《鬼灭之刃》的前三季，炎柱死的时候给我难受了好一会二，不过我的心是恋柱的。</p></div></div><div class=\"timenode\" index=\"4\"><div class=\"header\">2020 年 1 月 1 日</div><div class=\"body fs14\"><p>大概高中的时候看过《刀剑神域》，亚丝娜最后被玷污的时候，真的想把反派掐死。</p></div></div><div class=\"timenode\" index=\"5\"><div class=\"header\">2017 年 1 月 1 日</div><div class=\"body fs14\"><p>《火影忍者》，具体时间记不清了，断断续续地看了很久，但是依然没看完，700多集实在是太难坚持了。</p></div></div></div>\n\n\n\n<h1 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h1><p>下图是第一季26集中的部分截图，主要是龙皓晨和韩羽猎魔团考核对战的情节。之所以对这部分情节印象深刻，是因为在韩羽输了比赛后，他爷爷对他的质问，顺势重温骑士十大守则：谦卑、诚实、怜悯、英勇、公正、牺牲、荣誉、执着、仁爱、正义。</p>\n<p>每每听到一群人大喊这十大守则的时候，我都觉得自己的中二之魂又开始觉醒了，哈哈哈哈，很巧的是我的座右铭是，温良慎独，自由从容。</p>\n<h2 id=\"温良慎独\"><a href=\"#温良慎独\" class=\"headerlink\" title=\"温良慎独\"></a>温良慎独</h2><p>慎独，语出《礼记·中庸》：“莫见乎隐，莫显乎微，故君子慎其独也”。第一次见到这个词就莫名地有一种亲切感，觉得这是自己立身立命的根本所在，也是人对自己要求的一种极高的境界。</p>\n<h2 id=\"自由从容\"><a href=\"#自由从容\" class=\"headerlink\" title=\"自由从容\"></a>自由从容</h2><p>这四个字更像是自己对未来的憧憬，以及新时代青年的一种追求。</p>\n<p>今天，2024年的5月9日下午一点三十五分，我即将接受中海达的面试，曾经遥不可及的工作，现如今竟已恍然如入局，仓促至极，我真的可以“自由从容”吗？更多的时候，觉得自己是在被时代，被周边的一切推着向前挪步。</p>\n<div class=\"tag-plugin gallery grid-box\" size=\"mix\" ratio=\"square\"><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/3a8bfe84234b40349fc3e8968ba975bc.jpeg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0005.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC25%E9%9B%86_0001.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0020.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0047.jpg\"/><div class=\"image-meta\"></div></div><div class=\"grid-cell\"><img data-fancybox=\"gallery-1\" src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/%E7%A5%9E%E5%8D%B0%E7%8E%8B%E5%BA%A7%20%E7%AC%AC1%E5%AD%A3%20%E7%AC%AC26%E9%9B%86_0022.jpg\"/><div class=\"image-meta\"></div></div></div>\n\n\n\n\n<h1 id=\"待看\"><a href=\"#待看\" class=\"headerlink\" title=\"待看\"></a>待看</h1><ul>\n<li>星域四万年</li>\n<li>凡人修仙转</li>\n</ul>\n"},{"title":"C++ 学习","date":"2024-05-09T07:44:05.194Z","description":"C++ 学习记录","cover":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png","poster":{"topic":null,"headline":"C++ 学习","caption":null,"color":null},"sticky":null,"mermaid":null,"katex":null,"mathjax":null,"topic":"计算机","author":"Montee","references":null,"comments":1,"indexing":null,"breadcrumb":null,"leftbar":null,"rightbar":null,"h1":null,"type":"tech","_content":"\n\n~~（注：本内容仅供个人学习使用，请点击链接阅读原文）~~\n\n# 时间线\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 13 日 -->\n\n完成第一阶段的案例：通讯录管理系统，\n\n\n\n主要学习应用 C++ 的基础语法、指针、结构体等知识。\n\n<!-- node 2024 年 5 月 12 日 -->\n\n面试通过，小声吐槽：实习待遇极差……\n\n这几天将 C++ 基础语法过了一遍。\n\n<!-- node 2024 年 5 月 9 日 -->\n\n中海达面试结束，面试官说实习过程中主要是用 CPP 进行开发，于是决定利用这几天补习相关知识。\n\n{% endtimeline %}\n\n# 学习记录\n* [黑马程序员匠心之作|C++教程从0到1入门编程,学习编程不再难](https://www.bilibili.com/video/av41559729/?p=1&vd_source=f30eba35d0a8915376778596dfd73224)\n* [黑马视频配套资料](https://github.com/Blitzer207/C-Resource)\n\n![image-20240509175137661](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cppheima.png)\n\n## 基础语法入门\n* 学习笔记：[C++基础入门](https://www.montylee.cn/2024/05/13/CPP基础/)\n### CMake\n\n学习文章：[CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置](https://juejin.cn/post/6844904015587704839) \n\n## 核心编程\n\n* [内存分区模型](https://juejin.cn/post/7112082561752383496)\n\n## 提高编程\n\n\n\n\n# 引用\n\n* [这才是你最想要的 C++ 学习路线](https://www.zhihu.com/tardis/zm/art/435927070?source_id=1003)\n* [C++那些事](https://github.com/Light-City/CPlusPlusThings?tab=readme-ov-file#c-那些事)\n* [CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置](https://juejin.cn/post/6844904015587704839)","source":"_posts/CppLearn.md","raw":"---\n# 基本信息\ntitle: C++ 学习\ndate: 2024/05/09/15/44\ntags: [cpp, 计算机]\ncategories: [cpp]\ndescription: C++ 学习记录\n# 封面\ncover: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png\nbanner: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png\nposter:  # 海报（可选，全图封面卡片）\n  topic: # 可选\n  headline:  C++ 学习 # 必选\n  caption:  # 可选\n  color:  # 可选\n# 插件\nsticky: # 数字越大越靠前\nmermaid:\nkatex: \nmathjax: \n# 可选\ntopic: 计算机 # 专栏 id\nauthor: Montee\nreferences:\ncomments: # 设置 false 禁止评论\nindexing: # 设置 false 避免被搜索\nbreadcrumb: # 设置 false 隐藏面包屑导航\nleftbar: \nrightbar:\nh1: # 设置为 '' 隐藏标题\ntype: tech # tech/story\n---\n\n\n~~（注：本内容仅供个人学习使用，请点击链接阅读原文）~~\n\n# 时间线\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 13 日 -->\n\n完成第一阶段的案例：通讯录管理系统，\n\n\n\n主要学习应用 C++ 的基础语法、指针、结构体等知识。\n\n<!-- node 2024 年 5 月 12 日 -->\n\n面试通过，小声吐槽：实习待遇极差……\n\n这几天将 C++ 基础语法过了一遍。\n\n<!-- node 2024 年 5 月 9 日 -->\n\n中海达面试结束，面试官说实习过程中主要是用 CPP 进行开发，于是决定利用这几天补习相关知识。\n\n{% endtimeline %}\n\n# 学习记录\n* [黑马程序员匠心之作|C++教程从0到1入门编程,学习编程不再难](https://www.bilibili.com/video/av41559729/?p=1&vd_source=f30eba35d0a8915376778596dfd73224)\n* [黑马视频配套资料](https://github.com/Blitzer207/C-Resource)\n\n![image-20240509175137661](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cppheima.png)\n\n## 基础语法入门\n* 学习笔记：[C++基础入门](https://www.montylee.cn/2024/05/13/CPP基础/)\n### CMake\n\n学习文章：[CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置](https://juejin.cn/post/6844904015587704839) \n\n## 核心编程\n\n* [内存分区模型](https://juejin.cn/post/7112082561752383496)\n\n## 提高编程\n\n\n\n\n# 引用\n\n* [这才是你最想要的 C++ 学习路线](https://www.zhihu.com/tardis/zm/art/435927070?source_id=1003)\n* [C++那些事](https://github.com/Light-City/CPlusPlusThings?tab=readme-ov-file#c-那些事)\n* [CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置](https://juejin.cn/post/6844904015587704839)","slug":"CppLearn","published":1,"updated":"2024-05-13T14:44:23.941Z","_id":"clvyy06x50007y33a4rdk2p2l","layout":"post","photos":[],"content":"<p><del>（注：本内容仅供个人学习使用，请点击链接阅读原文）</del></p>\n<h1 id=\"时间线\"><a href=\"#时间线\" class=\"headerlink\" title=\"时间线\"></a>时间线</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 13 日</div><div class=\"body fs14\"><p>完成第一阶段的案例：通讯录管理系统，</p><p>主要学习应用 C++ 的基础语法、指针、结构体等知识。</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 12 日</div><div class=\"body fs14\"><p>面试通过，小声吐槽：实习待遇极差……</p><p>这几天将 C++ 基础语法过了一遍。</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\">2024 年 5 月 9 日</div><div class=\"body fs14\"><p>中海达面试结束，面试官说实习过程中主要是用 CPP 进行开发，于是决定利用这几天补习相关知识。</p></div></div></div>\n\n<h1 id=\"学习记录\"><a href=\"#学习记录\" class=\"headerlink\" title=\"学习记录\"></a>学习记录</h1><ul>\n<li><a href=\"https://www.bilibili.com/video/av41559729/?p=1&vd_source=f30eba35d0a8915376778596dfd73224\">黑马程序员匠心之作|C++教程从0到1入门编程,学习编程不再难</a></li>\n<li><a href=\"https://github.com/Blitzer207/C-Resource\">黑马视频配套资料</a></li>\n</ul>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cppheima.png\" alt=\"image-20240509175137661\"></p>\n<h2 id=\"基础语法入门\"><a href=\"#基础语法入门\" class=\"headerlink\" title=\"基础语法入门\"></a>基础语法入门</h2><ul>\n<li>学习笔记：<a href=\"https://www.montylee.cn/2024/05/13/CPP%E5%9F%BA%E7%A1%80/\">C++基础入门</a></li>\n</ul>\n<h3 id=\"CMake\"><a href=\"#CMake\" class=\"headerlink\" title=\"CMake\"></a>CMake</h3><p>学习文章：<a href=\"https://juejin.cn/post/6844904015587704839\">CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置</a> </p>\n<h2 id=\"核心编程\"><a href=\"#核心编程\" class=\"headerlink\" title=\"核心编程\"></a>核心编程</h2><ul>\n<li><a href=\"https://juejin.cn/post/7112082561752383496\">内存分区模型</a></li>\n</ul>\n<h2 id=\"提高编程\"><a href=\"#提高编程\" class=\"headerlink\" title=\"提高编程\"></a>提高编程</h2><h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ul>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/435927070?source_id=1003\">这才是你最想要的 C++ 学习路线</a></li>\n<li><a href=\"https://github.com/Light-City/CPlusPlusThings?tab=readme-ov-file#c-%E9%82%A3%E4%BA%9B%E4%BA%8B\">C++那些事</a></li>\n<li><a href=\"https://juejin.cn/post/6844904015587704839\">CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置</a></li>\n</ul>\n","excerpt":"","more":"<p><del>（注：本内容仅供个人学习使用，请点击链接阅读原文）</del></p>\n<h1 id=\"时间线\"><a href=\"#时间线\" class=\"headerlink\" title=\"时间线\"></a>时间线</h1><div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 13 日</div><div class=\"body fs14\"><p>完成第一阶段的案例：通讯录管理系统，</p><p>主要学习应用 C++ 的基础语法、指针、结构体等知识。</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 12 日</div><div class=\"body fs14\"><p>面试通过，小声吐槽：实习待遇极差……</p><p>这几天将 C++ 基础语法过了一遍。</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\">2024 年 5 月 9 日</div><div class=\"body fs14\"><p>中海达面试结束，面试官说实习过程中主要是用 CPP 进行开发，于是决定利用这几天补习相关知识。</p></div></div></div>\n\n<h1 id=\"学习记录\"><a href=\"#学习记录\" class=\"headerlink\" title=\"学习记录\"></a>学习记录</h1><ul>\n<li><a href=\"https://www.bilibili.com/video/av41559729/?p=1&vd_source=f30eba35d0a8915376778596dfd73224\">黑马程序员匠心之作|C++教程从0到1入门编程,学习编程不再难</a></li>\n<li><a href=\"https://github.com/Blitzer207/C-Resource\">黑马视频配套资料</a></li>\n</ul>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cppheima.png\" alt=\"image-20240509175137661\"></p>\n<h2 id=\"基础语法入门\"><a href=\"#基础语法入门\" class=\"headerlink\" title=\"基础语法入门\"></a>基础语法入门</h2><ul>\n<li>学习笔记：<a href=\"https://www.montylee.cn/2024/05/13/CPP%E5%9F%BA%E7%A1%80/\">C++基础入门</a></li>\n</ul>\n<h3 id=\"CMake\"><a href=\"#CMake\" class=\"headerlink\" title=\"CMake\"></a>CMake</h3><p>学习文章：<a href=\"https://juejin.cn/post/6844904015587704839\">CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置</a> </p>\n<h2 id=\"核心编程\"><a href=\"#核心编程\" class=\"headerlink\" title=\"核心编程\"></a>核心编程</h2><ul>\n<li><a href=\"https://juejin.cn/post/7112082561752383496\">内存分区模型</a></li>\n</ul>\n<h2 id=\"提高编程\"><a href=\"#提高编程\" class=\"headerlink\" title=\"提高编程\"></a>提高编程</h2><h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ul>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/435927070?source_id=1003\">这才是你最想要的 C++ 学习路线</a></li>\n<li><a href=\"https://github.com/Light-City/CPlusPlusThings?tab=readme-ov-file#c-%E9%82%A3%E4%BA%9B%E4%BA%8B\">C++那些事</a></li>\n<li><a href=\"https://juejin.cn/post/6844904015587704839\">CMake学习笔记（一）基本概念介绍、入门教程及CLion安装配置</a></li>\n</ul>\n"},{"title":"C++ 基础","date":"2024-05-13T06:01:40.945Z","description":"C++ 学习记录，基础语法学习，较为详细介绍指针和结构体的基础语法。","cover":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/CPPBASE.jpeg","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/CPPBASE.jpeg","poster":{"topic":null,"headline":"C++ 基础","caption":null,"color":null},"sticky":null,"mermaid":null,"katex":null,"mathjax":null,"topic":"计算机","author":"Montee","references":null,"comments":1,"indexing":null,"breadcrumb":null,"leftbar":null,"rightbar":null,"h1":null,"type":"tech","_content":"\n# C++ 基础入门\n~~注：本文章仅供个人学习使用，如需系统学习，请阅读[C++基础入门](https://github.com/Blitzer207/C-Resource/blob/master/第1阶段C%2B%2B%20匠心之作%20从0到1入门/C%2B%2B基础入门讲义/C%2B%2B基础入门.md)~~\n# 零散知识\n1. 科学计数法： \n    ```C++\n       float f1 = 3e2; // 3 * 10 ^ 2\n       float f2 = 3e-2; // 3 * 0.1 ^ 2\n    ```\n\n\n2. 使用 ASCII 码给字符型变量赋值\n\n    ```C++\n        char ch = 'a';\n        cout << ch << endl;\n        cout << sizeof (ch) << endl;\n    \n        ch = 98; // 使用 ASCII 码给字符型变量赋值\n        cout << ch << endl;\n    ```\n    输出：![img.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img.png)\n\n\n3. 输入 bool 型变量\n    ```C++\n       bool flag = true;\n       cout << \"输入布尔型变量：\" << endl;\n       cin >> flag;\n       cout << !flag << endl;\n    ```\n   输出：![img_1.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_1.png)\n\n\n4. 前++和后++\n   \n    前置递增：先让变量+1，然后进行表达式运算赋值\n    后置递增：先进行表达式计算赋值，再让变量+1\n   ![img_2.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_2.png)\n\n\n5. ![img_3.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_3.png)\n\n\n6. 三目运算符\n   * 语法：表达式1 ? 表达式2 : 表达式3\n   * 解释：\n     * 如果表达式1的值为真，执行表达式2，并返回表达式2的结果；\n     * 如果表达式1的值为假，执行表达式3，并返回表达式3的结果。\n\n# 指针\n~~相关内容源自黑马课程~~\n作用：可以通过指针间接访问内存\n![img_4.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_4.png)\n\n指针变量可以通过\" * \"操作符，操作指针变量指向的内存空间，这个过程称为解引用\n具体定义如下：\n```C++\nint a = 10;\nint *p;\n// &a = p;\n// *p = a;\n```\n\n* 所有指针类型在32位操作系统下是4个字节 \n## 空指针\n* 指针变量指向内存中编号为0的空间\n* 用途：初始化指针\n* 注意：空指针指向的内存是不可以访问的\n* 0-255之间的内存编号是系统占用的，不可以访问 \n## 野指针\n* 类比开房，并不是走到哪个门口想进就能进的，\n必须实现开好房间（申请好内存）\n## const 修饰指针 \n* const 修饰指针 --- 常量指针 \n  * 特点：指针的指向可以修改，但是指向的指不能修改\n* const 修饰常量 --- 指针常量 \n  * 特点：常量指针相反\n* const 即修饰指针，又修饰常量\n      \n```C++\n  int main() {\n    \n      int a = 10;\n      int b = 10;\n    \n      //const 修饰的是指针，指针指向可以改，指针指向的值不可以更改\n      const int * p1 = &a; \n      p1 = &b; //正确\n      //*p1 = 100;  报错\n        \n    \n      //const 修饰的是常量，指针指向不可以改，指针指向的值可以更改\n      int * const p2 = &a;\n      //p2 = &b; //错误\n      *p2 = 100; //正确\n    \n      //const 既修饰指针又修饰常量\n      const int * const p3 = &a;\n      //p3 = &b; //错误\n      //*p3 = 100; //错误\n    \n      return 0;\n  }\n```\n\n## 指针和数组\n作用：利用指针访问数组中的元素\n\n## 指针和函数\n利用指针作函数参数，可以修改实参的值\n\n# 结构体\n结构体是属于用户自定义的数据类型，允许用户存储不同的数据类型。\n\n\n```C++\n//结构体定义\nstruct student\n{\n//成员列表\nstring name;  //姓名\nint age;      //年龄\nint score;    //分数\n}stu3; //结构体变量创建方式3\n\n\nint main() {\n\n    //结构体变量创建方式1\n    struct student stu1; //struct 关键字可以省略\n\n    stu1.name = \"张三\";\n    stu1.age = 18;\n    stu1.score = 100;\n    \n    cout << \"姓名：\" << stu1.name << \" 年龄：\" << stu1.age  << \" 分数：\" << stu1.score << endl;\n\n    //结构体变量创建方式2\n    struct student stu2 = { \"李四\",19,60 };\n\n    cout << \"姓名：\" << stu2.name << \" 年龄：\" << stu2.age  << \" 分数：\" << stu2.score << endl;\n\n\n    stu3.name = \"王五\";\n    stu3.age = 18;\n    stu3.score = 80;\n    \n\n    cout << \"姓名：\" << stu3.name << \" 年龄：\" << stu3.age  << \" 分数：\" << stu3.score << endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n```\n\n* 总结1：定义结构体时的关键字是struct，不可省略\n* 总结2：创建结构体变量时，关键字struct可以省略\n* 总结3：结构体变量利用操作符 ''.'' 访问成员\n\n## 结构体数组\n```C++\nstruct  结构体名 数组名[元素个数] = {  {} , {} , ... {} }\n```\n\n## 结构体指针\n通过指针访问结构体中的成员\n\n```C++\n//结构体定义\nstruct student\n{\n//成员列表\nstring name;  //姓名\nint age;      //年龄\nint score;    //分数\n};\n\n\nint main() {\n\n    struct student stu = { \"张三\",18,100, };\n    \n    struct student * p = &stu;\n    \n    p->score = 80; //指针通过 -> 操作符可以访问成员\n\n    cout << \"姓名：\" << p->name << \" 年龄：\" << p->age << \" 分数：\" << p->score << endl;\n    \n    system(\"pause\");\n\n    return 0;\n}\n```\n\n## 结构体嵌套结构体\n\n## 结构体做函数参数\n将结构体作为参数向函数中传递\n\n## 结构体中 const 使用场景\n\n","source":"_posts/CPP基础.md","raw":"---\n# 基本信息\ntitle: C++ 基础\ndate: 2024/05/13/14/07\ntags: [cpp, 计算机]\ncategories: [cpp]\ndescription: C++ 学习记录，基础语法学习，较为详细介绍指针和结构体的基础语法。\n# 封面\ncover: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/CPPBASE.jpeg\nbanner: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/CPPBASE.jpeg\nposter:  # 海报（可选，全图封面卡片）\n  topic: # 可选\n  headline:  C++ 基础 # 必选\n  caption:  # 可选\n  color:  # 可选\n# 插件\nsticky: # 数字越大越靠前\nmermaid:\nkatex: \nmathjax: \n# 可选\ntopic: 计算机 # 专栏 id\nauthor: Montee\nreferences:\ncomments: # 设置 false 禁止评论\nindexing: # 设置 false 避免被搜索\nbreadcrumb: # 设置 false 隐藏面包屑导航\nleftbar: \nrightbar:\nh1: # 设置为 '' 隐藏标题\ntype: tech # tech/story\n---\n\n# C++ 基础入门\n~~注：本文章仅供个人学习使用，如需系统学习，请阅读[C++基础入门](https://github.com/Blitzer207/C-Resource/blob/master/第1阶段C%2B%2B%20匠心之作%20从0到1入门/C%2B%2B基础入门讲义/C%2B%2B基础入门.md)~~\n# 零散知识\n1. 科学计数法： \n    ```C++\n       float f1 = 3e2; // 3 * 10 ^ 2\n       float f2 = 3e-2; // 3 * 0.1 ^ 2\n    ```\n\n\n2. 使用 ASCII 码给字符型变量赋值\n\n    ```C++\n        char ch = 'a';\n        cout << ch << endl;\n        cout << sizeof (ch) << endl;\n    \n        ch = 98; // 使用 ASCII 码给字符型变量赋值\n        cout << ch << endl;\n    ```\n    输出：![img.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img.png)\n\n\n3. 输入 bool 型变量\n    ```C++\n       bool flag = true;\n       cout << \"输入布尔型变量：\" << endl;\n       cin >> flag;\n       cout << !flag << endl;\n    ```\n   输出：![img_1.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_1.png)\n\n\n4. 前++和后++\n   \n    前置递增：先让变量+1，然后进行表达式运算赋值\n    后置递增：先进行表达式计算赋值，再让变量+1\n   ![img_2.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_2.png)\n\n\n5. ![img_3.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_3.png)\n\n\n6. 三目运算符\n   * 语法：表达式1 ? 表达式2 : 表达式3\n   * 解释：\n     * 如果表达式1的值为真，执行表达式2，并返回表达式2的结果；\n     * 如果表达式1的值为假，执行表达式3，并返回表达式3的结果。\n\n# 指针\n~~相关内容源自黑马课程~~\n作用：可以通过指针间接访问内存\n![img_4.png](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_4.png)\n\n指针变量可以通过\" * \"操作符，操作指针变量指向的内存空间，这个过程称为解引用\n具体定义如下：\n```C++\nint a = 10;\nint *p;\n// &a = p;\n// *p = a;\n```\n\n* 所有指针类型在32位操作系统下是4个字节 \n## 空指针\n* 指针变量指向内存中编号为0的空间\n* 用途：初始化指针\n* 注意：空指针指向的内存是不可以访问的\n* 0-255之间的内存编号是系统占用的，不可以访问 \n## 野指针\n* 类比开房，并不是走到哪个门口想进就能进的，\n必须实现开好房间（申请好内存）\n## const 修饰指针 \n* const 修饰指针 --- 常量指针 \n  * 特点：指针的指向可以修改，但是指向的指不能修改\n* const 修饰常量 --- 指针常量 \n  * 特点：常量指针相反\n* const 即修饰指针，又修饰常量\n      \n```C++\n  int main() {\n    \n      int a = 10;\n      int b = 10;\n    \n      //const 修饰的是指针，指针指向可以改，指针指向的值不可以更改\n      const int * p1 = &a; \n      p1 = &b; //正确\n      //*p1 = 100;  报错\n        \n    \n      //const 修饰的是常量，指针指向不可以改，指针指向的值可以更改\n      int * const p2 = &a;\n      //p2 = &b; //错误\n      *p2 = 100; //正确\n    \n      //const 既修饰指针又修饰常量\n      const int * const p3 = &a;\n      //p3 = &b; //错误\n      //*p3 = 100; //错误\n    \n      return 0;\n  }\n```\n\n## 指针和数组\n作用：利用指针访问数组中的元素\n\n## 指针和函数\n利用指针作函数参数，可以修改实参的值\n\n# 结构体\n结构体是属于用户自定义的数据类型，允许用户存储不同的数据类型。\n\n\n```C++\n//结构体定义\nstruct student\n{\n//成员列表\nstring name;  //姓名\nint age;      //年龄\nint score;    //分数\n}stu3; //结构体变量创建方式3\n\n\nint main() {\n\n    //结构体变量创建方式1\n    struct student stu1; //struct 关键字可以省略\n\n    stu1.name = \"张三\";\n    stu1.age = 18;\n    stu1.score = 100;\n    \n    cout << \"姓名：\" << stu1.name << \" 年龄：\" << stu1.age  << \" 分数：\" << stu1.score << endl;\n\n    //结构体变量创建方式2\n    struct student stu2 = { \"李四\",19,60 };\n\n    cout << \"姓名：\" << stu2.name << \" 年龄：\" << stu2.age  << \" 分数：\" << stu2.score << endl;\n\n\n    stu3.name = \"王五\";\n    stu3.age = 18;\n    stu3.score = 80;\n    \n\n    cout << \"姓名：\" << stu3.name << \" 年龄：\" << stu3.age  << \" 分数：\" << stu3.score << endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n```\n\n* 总结1：定义结构体时的关键字是struct，不可省略\n* 总结2：创建结构体变量时，关键字struct可以省略\n* 总结3：结构体变量利用操作符 ''.'' 访问成员\n\n## 结构体数组\n```C++\nstruct  结构体名 数组名[元素个数] = {  {} , {} , ... {} }\n```\n\n## 结构体指针\n通过指针访问结构体中的成员\n\n```C++\n//结构体定义\nstruct student\n{\n//成员列表\nstring name;  //姓名\nint age;      //年龄\nint score;    //分数\n};\n\n\nint main() {\n\n    struct student stu = { \"张三\",18,100, };\n    \n    struct student * p = &stu;\n    \n    p->score = 80; //指针通过 -> 操作符可以访问成员\n\n    cout << \"姓名：\" << p->name << \" 年龄：\" << p->age << \" 分数：\" << p->score << endl;\n    \n    system(\"pause\");\n\n    return 0;\n}\n```\n\n## 结构体嵌套结构体\n\n## 结构体做函数参数\n将结构体作为参数向函数中传递\n\n## 结构体中 const 使用场景\n\n","slug":"CPP基础","published":1,"updated":"2024-05-13T06:14:03.812Z","layout":"post","photos":[],"_id":"clw4qzoga00003q3agx46417l","content":"<h1 id=\"C-基础入门\"><a href=\"#C-基础入门\" class=\"headerlink\" title=\"C++ 基础入门\"></a>C++ 基础入门</h1><p><del>注：本文章仅供个人学习使用，如需系统学习，请阅读<a href=\"https://github.com/Blitzer207/C-Resource/blob/master/%E7%AC%AC1%E9%98%B6%E6%AE%B5C%2B%2B%20%E5%8C%A0%E5%BF%83%E4%B9%8B%E4%BD%9C%20%E4%BB%8E0%E5%88%B01%E5%85%A5%E9%97%A8/C%2B%2B%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E8%AE%B2%E4%B9%89/C%2B%2B%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.md\">C++基础入门</a></del></p>\n<h1 id=\"零散知识\"><a href=\"#零散知识\" class=\"headerlink\" title=\"零散知识\"></a>零散知识</h1><ol>\n<li><p>科学计数法： </p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> f1 = <span class=\"number\">3e2</span>; <span class=\"comment\">// 3 * 10 ^ 2</span></span><br><span class=\"line\"><span class=\"type\">float</span> f2 = <span class=\"number\">3e-2</span>; <span class=\"comment\">// 3 * 0.1 ^ 2</span></span><br></pre></td></tr></table></figure>\n\n</li>\n<li><p>使用 ASCII 码给字符型变量赋值</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> ch = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">sizeof</span> (ch) &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">ch = <span class=\"number\">98</span>; <span class=\"comment\">// 使用 ASCII 码给字符型变量赋值</span></span><br><span class=\"line\">cout &lt;&lt; ch &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n<p> 输出：<img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img.png\" alt=\"img.png\"></p>\n</li>\n<li><p>输入 bool 型变量</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;输入布尔型变量：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">cin &gt;&gt; flag;</span><br><span class=\"line\">cout &lt;&lt; !flag &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n<p>输出：<img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_1.png\" alt=\"img_1.png\"></p>\n</li>\n<li><p>前++和后++</p>\n<p> 前置递增：先让变量+1，然后进行表达式运算赋值<br> 后置递增：先进行表达式计算赋值，再让变量+1<br><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_2.png\" alt=\"img_2.png\"></p>\n</li>\n<li><p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_3.png\" alt=\"img_3.png\"></p>\n</li>\n<li><p>三目运算符</p>\n<ul>\n<li>语法：表达式1 ? 表达式2 : 表达式3</li>\n<li>解释：<ul>\n<li>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</li>\n<li>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h1><p><del>相关内容源自黑马课程</del><br>作用：可以通过指针间接访问内存<br><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_4.png\" alt=\"img_4.png\"></p>\n<p>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用<br>具体定义如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *p;</span><br><span class=\"line\"><span class=\"comment\">// &amp;a = p;</span></span><br><span class=\"line\"><span class=\"comment\">// *p = a;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>所有指针类型在32位操作系统下是4个字节</li>\n</ul>\n<h2 id=\"空指针\"><a href=\"#空指针\" class=\"headerlink\" title=\"空指针\"></a>空指针</h2><ul>\n<li>指针变量指向内存中编号为0的空间</li>\n<li>用途：初始化指针</li>\n<li>注意：空指针指向的内存是不可以访问的</li>\n<li>0-255之间的内存编号是系统占用的，不可以访问</li>\n</ul>\n<h2 id=\"野指针\"><a href=\"#野指针\" class=\"headerlink\" title=\"野指针\"></a>野指针</h2><ul>\n<li>类比开房，并不是走到哪个门口想进就能进的，<br>必须实现开好房间（申请好内存）</li>\n</ul>\n<h2 id=\"const-修饰指针\"><a href=\"#const-修饰指针\" class=\"headerlink\" title=\"const 修饰指针\"></a>const 修饰指针</h2><ul>\n<li>const 修饰指针 — 常量指针 <ul>\n<li>特点：指针的指向可以修改，但是指向的指不能修改</li>\n</ul>\n</li>\n<li>const 修饰常量 — 指针常量 <ul>\n<li>特点：常量指针相反</li>\n</ul>\n</li>\n<li>const 即修饰指针，又修饰常量</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//const 修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> * p1 = &amp;a; </span><br><span class=\"line\">    p1 = &amp;b; <span class=\"comment\">//正确</span></span><br><span class=\"line\">    <span class=\"comment\">//*p1 = 100;  报错</span></span><br><span class=\"line\">      </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//const 修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class=\"line\">    <span class=\"type\">int</span> * <span class=\"type\">const</span> p2 = &amp;a;</span><br><span class=\"line\">    <span class=\"comment\">//p2 = &amp;b; //错误</span></span><br><span class=\"line\">    *p2 = <span class=\"number\">100</span>; <span class=\"comment\">//正确</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//const 既修饰指针又修饰常量</span></span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> * <span class=\"type\">const</span> p3 = &amp;a;</span><br><span class=\"line\">    <span class=\"comment\">//p3 = &amp;b; //错误</span></span><br><span class=\"line\">    <span class=\"comment\">//*p3 = 100; //错误</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指针和数组\"><a href=\"#指针和数组\" class=\"headerlink\" title=\"指针和数组\"></a>指针和数组</h2><p>作用：利用指针访问数组中的元素</p>\n<h2 id=\"指针和函数\"><a href=\"#指针和函数\" class=\"headerlink\" title=\"指针和函数\"></a>指针和函数</h2><p>利用指针作函数参数，可以修改实参的值</p>\n<h1 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h1><p>结构体是属于用户自定义的数据类型，允许用户存储不同的数据类型。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构体定义</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">//成员列表</span></span><br><span class=\"line\">string name;  <span class=\"comment\">//姓名</span></span><br><span class=\"line\"><span class=\"type\">int</span> age;      <span class=\"comment\">//年龄</span></span><br><span class=\"line\"><span class=\"type\">int</span> score;    <span class=\"comment\">//分数</span></span><br><span class=\"line\">&#125;stu3; <span class=\"comment\">//结构体变量创建方式3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//结构体变量创建方式1</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> stu1; <span class=\"comment\">//struct 关键字可以省略</span></span><br><span class=\"line\"></span><br><span class=\"line\">    stu1.name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">    stu1.age = <span class=\"number\">18</span>;</span><br><span class=\"line\">    stu1.score = <span class=\"number\">100</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu1.name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; stu1.age  &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; stu1.score &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//结构体变量创建方式2</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> stu2 = &#123; <span class=\"string\">&quot;李四&quot;</span>,<span class=\"number\">19</span>,<span class=\"number\">60</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu2.name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; stu2.age  &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; stu2.score &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    stu3.name = <span class=\"string\">&quot;王五&quot;</span>;</span><br><span class=\"line\">    stu3.age = <span class=\"number\">18</span>;</span><br><span class=\"line\">    stu3.score = <span class=\"number\">80</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu3.name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; stu3.age  &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; stu3.score &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>总结1：定义结构体时的关键字是struct，不可省略</li>\n<li>总结2：创建结构体变量时，关键字struct可以省略</li>\n<li>总结3：结构体变量利用操作符 ‘’.’’ 访问成员</li>\n</ul>\n<h2 id=\"结构体数组\"><a href=\"#结构体数组\" class=\"headerlink\" title=\"结构体数组\"></a>结构体数组</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span>  结构体名 数组名[元素个数] = &#123;  &#123;&#125; , &#123;&#125; , ... &#123;&#125; &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结构体指针\"><a href=\"#结构体指针\" class=\"headerlink\" title=\"结构体指针\"></a>结构体指针</h2><p>通过指针访问结构体中的成员</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构体定义</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">//成员列表</span></span><br><span class=\"line\">string name;  <span class=\"comment\">//姓名</span></span><br><span class=\"line\"><span class=\"type\">int</span> age;      <span class=\"comment\">//年龄</span></span><br><span class=\"line\"><span class=\"type\">int</span> score;    <span class=\"comment\">//分数</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> stu = &#123; <span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">18</span>,<span class=\"number\">100</span>, &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> * p = &amp;stu;</span><br><span class=\"line\">    </span><br><span class=\"line\">    p-&gt;score = <span class=\"number\">80</span>; <span class=\"comment\">//指针通过 -&gt; 操作符可以访问成员</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结构体嵌套结构体\"><a href=\"#结构体嵌套结构体\" class=\"headerlink\" title=\"结构体嵌套结构体\"></a>结构体嵌套结构体</h2><h2 id=\"结构体做函数参数\"><a href=\"#结构体做函数参数\" class=\"headerlink\" title=\"结构体做函数参数\"></a>结构体做函数参数</h2><p>将结构体作为参数向函数中传递</p>\n<h2 id=\"结构体中-const-使用场景\"><a href=\"#结构体中-const-使用场景\" class=\"headerlink\" title=\"结构体中 const 使用场景\"></a>结构体中 const 使用场景</h2>","excerpt":"","more":"<h1 id=\"C-基础入门\"><a href=\"#C-基础入门\" class=\"headerlink\" title=\"C++ 基础入门\"></a>C++ 基础入门</h1><p><del>注：本文章仅供个人学习使用，如需系统学习，请阅读<a href=\"https://github.com/Blitzer207/C-Resource/blob/master/%E7%AC%AC1%E9%98%B6%E6%AE%B5C%2B%2B%20%E5%8C%A0%E5%BF%83%E4%B9%8B%E4%BD%9C%20%E4%BB%8E0%E5%88%B01%E5%85%A5%E9%97%A8/C%2B%2B%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E8%AE%B2%E4%B9%89/C%2B%2B%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.md\">C++基础入门</a></del></p>\n<h1 id=\"零散知识\"><a href=\"#零散知识\" class=\"headerlink\" title=\"零散知识\"></a>零散知识</h1><ol>\n<li><p>科学计数法： </p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> f1 = <span class=\"number\">3e2</span>; <span class=\"comment\">// 3 * 10 ^ 2</span></span><br><span class=\"line\"><span class=\"type\">float</span> f2 = <span class=\"number\">3e-2</span>; <span class=\"comment\">// 3 * 0.1 ^ 2</span></span><br></pre></td></tr></table></figure>\n\n</li>\n<li><p>使用 ASCII 码给字符型变量赋值</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> ch = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">sizeof</span> (ch) &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">ch = <span class=\"number\">98</span>; <span class=\"comment\">// 使用 ASCII 码给字符型变量赋值</span></span><br><span class=\"line\">cout &lt;&lt; ch &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n<p> 输出：<img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img.png\" alt=\"img.png\"></p>\n</li>\n<li><p>输入 bool 型变量</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;输入布尔型变量：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">cin &gt;&gt; flag;</span><br><span class=\"line\">cout &lt;&lt; !flag &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n<p>输出：<img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_1.png\" alt=\"img_1.png\"></p>\n</li>\n<li><p>前++和后++</p>\n<p> 前置递增：先让变量+1，然后进行表达式运算赋值<br> 后置递增：先进行表达式计算赋值，再让变量+1<br><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_2.png\" alt=\"img_2.png\"></p>\n</li>\n<li><p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_3.png\" alt=\"img_3.png\"></p>\n</li>\n<li><p>三目运算符</p>\n<ul>\n<li>语法：表达式1 ? 表达式2 : 表达式3</li>\n<li>解释：<ul>\n<li>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</li>\n<li>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h1><p><del>相关内容源自黑马课程</del><br>作用：可以通过指针间接访问内存<br><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/img_4.png\" alt=\"img_4.png\"></p>\n<p>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用<br>具体定义如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *p;</span><br><span class=\"line\"><span class=\"comment\">// &amp;a = p;</span></span><br><span class=\"line\"><span class=\"comment\">// *p = a;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>所有指针类型在32位操作系统下是4个字节</li>\n</ul>\n<h2 id=\"空指针\"><a href=\"#空指针\" class=\"headerlink\" title=\"空指针\"></a>空指针</h2><ul>\n<li>指针变量指向内存中编号为0的空间</li>\n<li>用途：初始化指针</li>\n<li>注意：空指针指向的内存是不可以访问的</li>\n<li>0-255之间的内存编号是系统占用的，不可以访问</li>\n</ul>\n<h2 id=\"野指针\"><a href=\"#野指针\" class=\"headerlink\" title=\"野指针\"></a>野指针</h2><ul>\n<li>类比开房，并不是走到哪个门口想进就能进的，<br>必须实现开好房间（申请好内存）</li>\n</ul>\n<h2 id=\"const-修饰指针\"><a href=\"#const-修饰指针\" class=\"headerlink\" title=\"const 修饰指针\"></a>const 修饰指针</h2><ul>\n<li>const 修饰指针 — 常量指针 <ul>\n<li>特点：指针的指向可以修改，但是指向的指不能修改</li>\n</ul>\n</li>\n<li>const 修饰常量 — 指针常量 <ul>\n<li>特点：常量指针相反</li>\n</ul>\n</li>\n<li>const 即修饰指针，又修饰常量</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//const 修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> * p1 = &amp;a; </span><br><span class=\"line\">    p1 = &amp;b; <span class=\"comment\">//正确</span></span><br><span class=\"line\">    <span class=\"comment\">//*p1 = 100;  报错</span></span><br><span class=\"line\">      </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//const 修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class=\"line\">    <span class=\"type\">int</span> * <span class=\"type\">const</span> p2 = &amp;a;</span><br><span class=\"line\">    <span class=\"comment\">//p2 = &amp;b; //错误</span></span><br><span class=\"line\">    *p2 = <span class=\"number\">100</span>; <span class=\"comment\">//正确</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//const 既修饰指针又修饰常量</span></span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> * <span class=\"type\">const</span> p3 = &amp;a;</span><br><span class=\"line\">    <span class=\"comment\">//p3 = &amp;b; //错误</span></span><br><span class=\"line\">    <span class=\"comment\">//*p3 = 100; //错误</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指针和数组\"><a href=\"#指针和数组\" class=\"headerlink\" title=\"指针和数组\"></a>指针和数组</h2><p>作用：利用指针访问数组中的元素</p>\n<h2 id=\"指针和函数\"><a href=\"#指针和函数\" class=\"headerlink\" title=\"指针和函数\"></a>指针和函数</h2><p>利用指针作函数参数，可以修改实参的值</p>\n<h1 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h1><p>结构体是属于用户自定义的数据类型，允许用户存储不同的数据类型。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构体定义</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">//成员列表</span></span><br><span class=\"line\">string name;  <span class=\"comment\">//姓名</span></span><br><span class=\"line\"><span class=\"type\">int</span> age;      <span class=\"comment\">//年龄</span></span><br><span class=\"line\"><span class=\"type\">int</span> score;    <span class=\"comment\">//分数</span></span><br><span class=\"line\">&#125;stu3; <span class=\"comment\">//结构体变量创建方式3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//结构体变量创建方式1</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> stu1; <span class=\"comment\">//struct 关键字可以省略</span></span><br><span class=\"line\"></span><br><span class=\"line\">    stu1.name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">    stu1.age = <span class=\"number\">18</span>;</span><br><span class=\"line\">    stu1.score = <span class=\"number\">100</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu1.name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; stu1.age  &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; stu1.score &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//结构体变量创建方式2</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> stu2 = &#123; <span class=\"string\">&quot;李四&quot;</span>,<span class=\"number\">19</span>,<span class=\"number\">60</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu2.name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; stu2.age  &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; stu2.score &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    stu3.name = <span class=\"string\">&quot;王五&quot;</span>;</span><br><span class=\"line\">    stu3.age = <span class=\"number\">18</span>;</span><br><span class=\"line\">    stu3.score = <span class=\"number\">80</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; stu3.name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; stu3.age  &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; stu3.score &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>总结1：定义结构体时的关键字是struct，不可省略</li>\n<li>总结2：创建结构体变量时，关键字struct可以省略</li>\n<li>总结3：结构体变量利用操作符 ‘’.’’ 访问成员</li>\n</ul>\n<h2 id=\"结构体数组\"><a href=\"#结构体数组\" class=\"headerlink\" title=\"结构体数组\"></a>结构体数组</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span>  结构体名 数组名[元素个数] = &#123;  &#123;&#125; , &#123;&#125; , ... &#123;&#125; &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结构体指针\"><a href=\"#结构体指针\" class=\"headerlink\" title=\"结构体指针\"></a>结构体指针</h2><p>通过指针访问结构体中的成员</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构体定义</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">//成员列表</span></span><br><span class=\"line\">string name;  <span class=\"comment\">//姓名</span></span><br><span class=\"line\"><span class=\"type\">int</span> age;      <span class=\"comment\">//年龄</span></span><br><span class=\"line\"><span class=\"type\">int</span> score;    <span class=\"comment\">//分数</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> stu = &#123; <span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">18</span>,<span class=\"number\">100</span>, &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">student</span> * p = &amp;stu;</span><br><span class=\"line\">    </span><br><span class=\"line\">    p-&gt;score = <span class=\"number\">80</span>; <span class=\"comment\">//指针通过 -&gt; 操作符可以访问成员</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class=\"string\">&quot; 年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class=\"string\">&quot; 分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结构体嵌套结构体\"><a href=\"#结构体嵌套结构体\" class=\"headerlink\" title=\"结构体嵌套结构体\"></a>结构体嵌套结构体</h2><h2 id=\"结构体做函数参数\"><a href=\"#结构体做函数参数\" class=\"headerlink\" title=\"结构体做函数参数\"></a>结构体做函数参数</h2><p>将结构体作为参数向函数中传递</p>\n<h2 id=\"结构体中-const-使用场景\"><a href=\"#结构体中-const-使用场景\" class=\"headerlink\" title=\"结构体中 const 使用场景\"></a>结构体中 const 使用场景</h2>"},{"title":"代码随想录","date":"2024-05-28T09:47:40.940Z","description":"代码随想录刷题记录","cover":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png","poster":{"topic":null,"headline":"代码随想录刷题记录","caption":null,"color":null},"sticky":null,"mermaid":null,"katex":null,"mathjax":null,"topic":"计算机","author":"Montee","references":null,"comments":1,"indexing":null,"breadcrumb":null,"leftbar":null,"rightbar":null,"h1":null,"type":"tech","_content":"\n{% timeline %}\n\n<!-- node 2024 年 5 月 28 日 -->\n\n数组部分结束！\n\n<!-- node 2024 年 5 月 22 日 -->\n\n实习开始，刷题开始！\n\n{% endtimeline %}","source":"_posts/代码随想录.md","raw":"---\n# 基本信息\ntitle: 代码随想录\ndate: 2024/05/28/17/48\ntags: [cpp, 计算机, leetcode, 秋招, 算法]\ncategories: [cpp, 题解]\ndescription: 代码随想录刷题记录\n# 封面\ncover: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png\nbanner: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/cpp.png\nposter:  # 海报（可选，全图封面卡片）\n  topic: # 可选\n  headline:  代码随想录刷题记录 # 必选\n  caption:  # 可选\n  color:  # 可选\n# 插件\nsticky: # 数字越大越靠前\nmermaid:\nkatex: \nmathjax: \n# 可选\ntopic: 计算机 # 专栏 id\nauthor: Montee\nreferences:\ncomments: # 设置 false 禁止评论\nindexing: # 设置 false 避免被搜索\nbreadcrumb: # 设置 false 隐藏面包屑导航\nleftbar: \nrightbar:\nh1: # 设置为 '' 隐藏标题\ntype: tech # tech/story\n---\n\n{% timeline %}\n\n<!-- node 2024 年 5 月 28 日 -->\n\n数组部分结束！\n\n<!-- node 2024 年 5 月 22 日 -->\n\n实习开始，刷题开始！\n\n{% endtimeline %}","slug":"代码随想录","published":1,"updated":"2024-05-28T09:53:29.634Z","layout":"post","photos":[],"_id":"clwqglb0u0000xs3aexs1ayue","content":"<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 28 日</div><div class=\"body fs14\"><p>数组部分结束！</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 22 日</div><div class=\"body fs14\"><p>实习开始，刷题开始！</p></div></div></div>","excerpt":"","more":"<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\">2024 年 5 月 28 日</div><div class=\"body fs14\"><p>数组部分结束！</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\">2024 年 5 月 22 日</div><div class=\"body fs14\"><p>实习开始，刷题开始！</p></div></div></div>"},{"title":"数组part01","date":"2024-05-28T09:51:11.829Z","description":"代数组part01","cover":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif","poster":{"topic":null,"headline":"数组part01","caption":null,"color":null},"sticky":null,"mermaid":null,"katex":null,"mathjax":null,"topic":"计算机","author":"Montee","references":null,"comments":1,"indexing":null,"breadcrumb":null,"leftbar":null,"rightbar":null,"h1":null,"type":"tech","_content":"\n\n\n# 数组理论基础\n\n1. 数组是存放在连续内存空间上的相同类型数据的集合。\n\n   ![image-20240522193029336](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193029336.png)\n\n* 数组下标都是从0开始的\n\n* 数组内存空间的地址是连续的（**因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址**）\n\n2. 二维数组\n\n   ![image-20240522193547234](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193547234.png)\n\n   不同语言内存管理不同，C++中二维数组是连续分布的，Java 不是。\n\n# 704. 二分查找\n\n[代码随想录](https://programmercarl.com/0704.二分查找.html#思路)\n\n> 大家写二分法经常写乱，主要是因为**对区间的定义没有想清楚，区间的定义就是不变量**。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是**循环不变量**规则。~~*(不是很理解)*~~\n\n## 第一种写法\n\n定义 target 是在一个在左闭右闭的区间里，**也就是[left, right] （这个很重要非常重要）**。\n\n* while (left <= right) 要使用 <= ，因为left == right是有意义的，所以使用 <=\n* if (nums[middle] > target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1\n\n![image-20240524103229994](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240524103229994.png)\n\n## 第二种写法\n\ntarget 是在一个在左闭右开的区间里，也就是**[left, right)**\n\n```cpp\n// 版本二\nclass Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int left = 0;\n        int right = nums.size(); // 定义target在左闭右开的区间里，即：[left, right)\n        while (left < right) { // 因为left == right的时候，在[left, right)是无效的空间，所以使用 <\n            int middle = left + ((right - left) >> 1);\n            if (nums[middle] > target) {\n                right = middle; // target 在左区间，在[left, middle)中\n            } else if (nums[middle] < target) {\n                left = middle + 1; // target 在右区间，在[middle + 1, right)中\n            } else { // nums[middle] == target\n                return middle; // 数组中找到目标值，直接返回下标\n            }\n        }\n        // 未找到目标值\n        return -1;\n    }\n};\n```\n\n# 27. 移除元素\n\n## 暴力解（两层循环）\n\n* 自己写的错误解\n  * 第二层循环的遍历范围有误\n  * 手欠把多打了一个 = ，把赋值写成了判断\n\n```cpp\nclass Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int size = nums.size();\n        for(int i = 0; i < size; i++) {\n            if(nums[i] == val) {\n                for(int j = i; j < size; j++) { // 错误1:j只需要遍历到size-1的位置，修改为： j < size-1\n                    nums[j] == nums[j+1]; // 错误2:此处应该是=，进行赋值操作\n                }\n                size--;\n                i--;\n            }\n        }\n        return size;\n\n    }\n};\n```\n\n* 正确解\n\n```cpp\n// 时间复杂度：O(n^2)\n// 空间复杂度：O(1)\nclass Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int size = nums.size();\n        for (int i = 0; i < size; i++) {\n            if (nums[i] == val) { // 发现需要移除的元素，就将数组集体向前移动一位\n                for (int j = i + 1; j < size; j++) {\n                    nums[j - 1] = nums[j];\n                }\n                i--; // 因为下标i以后的数值都向前移动了一位，所以i也向前移动一位\n                size--; // 此时数组的大小-1\n            }\n        }\n        return size;\n\n    }\n};\n```\n\n## 双指针法\n\n双指针法（快慢指针法）： **通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。**\n\n### [力扣官方题解](https://leetcode.cn/problems/remove-element/solutions/730203/yi-chu-yuan-su-by-leetcode-solution-svxi/)\n\n由于题目要求删除数组中等于$val$ 的元素，因此输出数组的长度一定小于等于输入数组的长度，我们可以把输出的数组直接写在输入数组上。可以使用双指针：右指针 $right$ 指向当前将要处理的元素，左指针 $left$ 指向下一个将要赋值的位置。\n\n如果右指针指向的元素不等于 $val$，它一定是输出数组的一个元素，我们就将右指针指向的元素复制到左指针位置，然后将左右指针同时右移；\n\n如果右指针指向的元素等于 $val$，它不能在输出数组里，此时左指针不动，右指针右移一位。\n\n整个过程保持不变的性质是：区间  $[0,left)$ 中的元素都不等于 $val$。当左右指针遍历完输入数组以后，left 的值就是输出数组的长度。\n\n这样的算法在最坏情况下（输入数组中没有元素等 于$val$），左右指针各遍历了数组一次。\n\n![27.移除元素-双指针法](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif)\n\n\n* 自己写的错误解\n\n  * 按照我的这种写法，慢指针就起不到对数组进行移动的效果，最后只是得到了数组里有几个目标值，得不到删除目标值后的数组\n  * 正确解更新在下面的代码中\n\n```cpp\nclass Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int n = nums.size();\n        int slow = 0;\n        for (int fast = 0; fast < n; fast++) {\n            if(nums[fast] != val) {\n              // 添加 nums[slow] = nums[fast];\n                slow++;\n            }\n        }\n        return slow;\n\n    }\n};\n```\n\n","source":"_posts/数组part01.md","raw":"---\n# 基本信息\ntitle: 数组part01\ndate: 2024/05/28/17/52\ntags: [cpp, 计算机, leetcode, 秋招, 算法]\ncategories: [cpp, 题解]\ndescription: 代数组part01\n# 封面\ncover: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif\nbanner: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif\nposter:  # 海报（可选，全图封面卡片）\n  topic: # 可选\n  headline:  数组part01 # 必选\n  caption:  # 可选\n  color:  # 可选\n# 插件\nsticky: # 数字越大越靠前\nmermaid:\nkatex: \nmathjax: \n# 可选\ntopic: 计算机 # 专栏 id\nauthor: Montee\nreferences:\ncomments: # 设置 false 禁止评论\nindexing: # 设置 false 避免被搜索\nbreadcrumb: # 设置 false 隐藏面包屑导航\nleftbar: \nrightbar:\nh1: # 设置为 '' 隐藏标题\ntype: tech # tech/story\n---\n\n\n\n# 数组理论基础\n\n1. 数组是存放在连续内存空间上的相同类型数据的集合。\n\n   ![image-20240522193029336](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193029336.png)\n\n* 数组下标都是从0开始的\n\n* 数组内存空间的地址是连续的（**因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址**）\n\n2. 二维数组\n\n   ![image-20240522193547234](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193547234.png)\n\n   不同语言内存管理不同，C++中二维数组是连续分布的，Java 不是。\n\n# 704. 二分查找\n\n[代码随想录](https://programmercarl.com/0704.二分查找.html#思路)\n\n> 大家写二分法经常写乱，主要是因为**对区间的定义没有想清楚，区间的定义就是不变量**。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是**循环不变量**规则。~~*(不是很理解)*~~\n\n## 第一种写法\n\n定义 target 是在一个在左闭右闭的区间里，**也就是[left, right] （这个很重要非常重要）**。\n\n* while (left <= right) 要使用 <= ，因为left == right是有意义的，所以使用 <=\n* if (nums[middle] > target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1\n\n![image-20240524103229994](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240524103229994.png)\n\n## 第二种写法\n\ntarget 是在一个在左闭右开的区间里，也就是**[left, right)**\n\n```cpp\n// 版本二\nclass Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int left = 0;\n        int right = nums.size(); // 定义target在左闭右开的区间里，即：[left, right)\n        while (left < right) { // 因为left == right的时候，在[left, right)是无效的空间，所以使用 <\n            int middle = left + ((right - left) >> 1);\n            if (nums[middle] > target) {\n                right = middle; // target 在左区间，在[left, middle)中\n            } else if (nums[middle] < target) {\n                left = middle + 1; // target 在右区间，在[middle + 1, right)中\n            } else { // nums[middle] == target\n                return middle; // 数组中找到目标值，直接返回下标\n            }\n        }\n        // 未找到目标值\n        return -1;\n    }\n};\n```\n\n# 27. 移除元素\n\n## 暴力解（两层循环）\n\n* 自己写的错误解\n  * 第二层循环的遍历范围有误\n  * 手欠把多打了一个 = ，把赋值写成了判断\n\n```cpp\nclass Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int size = nums.size();\n        for(int i = 0; i < size; i++) {\n            if(nums[i] == val) {\n                for(int j = i; j < size; j++) { // 错误1:j只需要遍历到size-1的位置，修改为： j < size-1\n                    nums[j] == nums[j+1]; // 错误2:此处应该是=，进行赋值操作\n                }\n                size--;\n                i--;\n            }\n        }\n        return size;\n\n    }\n};\n```\n\n* 正确解\n\n```cpp\n// 时间复杂度：O(n^2)\n// 空间复杂度：O(1)\nclass Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int size = nums.size();\n        for (int i = 0; i < size; i++) {\n            if (nums[i] == val) { // 发现需要移除的元素，就将数组集体向前移动一位\n                for (int j = i + 1; j < size; j++) {\n                    nums[j - 1] = nums[j];\n                }\n                i--; // 因为下标i以后的数值都向前移动了一位，所以i也向前移动一位\n                size--; // 此时数组的大小-1\n            }\n        }\n        return size;\n\n    }\n};\n```\n\n## 双指针法\n\n双指针法（快慢指针法）： **通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。**\n\n### [力扣官方题解](https://leetcode.cn/problems/remove-element/solutions/730203/yi-chu-yuan-su-by-leetcode-solution-svxi/)\n\n由于题目要求删除数组中等于$val$ 的元素，因此输出数组的长度一定小于等于输入数组的长度，我们可以把输出的数组直接写在输入数组上。可以使用双指针：右指针 $right$ 指向当前将要处理的元素，左指针 $left$ 指向下一个将要赋值的位置。\n\n如果右指针指向的元素不等于 $val$，它一定是输出数组的一个元素，我们就将右指针指向的元素复制到左指针位置，然后将左右指针同时右移；\n\n如果右指针指向的元素等于 $val$，它不能在输出数组里，此时左指针不动，右指针右移一位。\n\n整个过程保持不变的性质是：区间  $[0,left)$ 中的元素都不等于 $val$。当左右指针遍历完输入数组以后，left 的值就是输出数组的长度。\n\n这样的算法在最坏情况下（输入数组中没有元素等 于$val$），左右指针各遍历了数组一次。\n\n![27.移除元素-双指针法](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif)\n\n\n* 自己写的错误解\n\n  * 按照我的这种写法，慢指针就起不到对数组进行移动的效果，最后只是得到了数组里有几个目标值，得不到删除目标值后的数组\n  * 正确解更新在下面的代码中\n\n```cpp\nclass Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int n = nums.size();\n        int slow = 0;\n        for (int fast = 0; fast < n; fast++) {\n            if(nums[fast] != val) {\n              // 添加 nums[slow] = nums[fast];\n                slow++;\n            }\n        }\n        return slow;\n\n    }\n};\n```\n\n","slug":"数组part01","published":1,"updated":"2024-05-28T10:00:26.766Z","layout":"post","photos":[],"_id":"clwqglb0w0001xs3a4rtvebko","content":"<h1 id=\"数组理论基础\"><a href=\"#数组理论基础\" class=\"headerlink\" title=\"数组理论基础\"></a>数组理论基础</h1><ol>\n<li><p>数组是存放在连续内存空间上的相同类型数据的集合。</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193029336.png\" alt=\"image-20240522193029336\"></p>\n</li>\n</ol>\n<ul>\n<li><p>数组下标都是从0开始的</p>\n</li>\n<li><p>数组内存空间的地址是连续的（<strong>因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址</strong>）</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li><p>二维数组</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193547234.png\" alt=\"image-20240522193547234\"></p>\n<p>不同语言内存管理不同，C++中二维数组是连续分布的，Java 不是。</p>\n</li>\n</ol>\n<h1 id=\"704-二分查找\"><a href=\"#704-二分查找\" class=\"headerlink\" title=\"704. 二分查找\"></a>704. 二分查找</h1><p><a href=\"https://programmercarl.com/0704.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html#%E6%80%9D%E8%B7%AF\">代码随想录</a></p>\n<blockquote>\n<p>大家写二分法经常写乱，主要是因为<strong>对区间的定义没有想清楚，区间的定义就是不变量</strong>。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是<strong>循环不变量</strong>规则。<del><em>(不是很理解)</em></del></p>\n</blockquote>\n<h2 id=\"第一种写法\"><a href=\"#第一种写法\" class=\"headerlink\" title=\"第一种写法\"></a>第一种写法</h2><p>定义 target 是在一个在左闭右闭的区间里，<strong>也就是[left, right] （这个很重要非常重要）</strong>。</p>\n<ul>\n<li>while (left &lt;&#x3D; right) 要使用 &lt;&#x3D; ，因为left &#x3D;&#x3D; right是有意义的，所以使用 &lt;&#x3D;</li>\n<li>if (nums[middle] &gt; target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1</li>\n</ul>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240524103229994.png\" alt=\"image-20240524103229994\"></p>\n<h2 id=\"第二种写法\"><a href=\"#第二种写法\" class=\"headerlink\" title=\"第二种写法\"></a>第二种写法</h2><p>target 是在一个在左闭右开的区间里，也就是**[left, right)**</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 版本二</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">search</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> right = nums.<span class=\"built_in\">size</span>(); <span class=\"comment\">// 定义target在左闭右开的区间里，即：[left, right)</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt; right) &#123; <span class=\"comment\">// 因为left == right的时候，在[left, right)是无效的空间，所以使用 &lt;</span></span><br><span class=\"line\">            <span class=\"type\">int</span> middle = left + ((right - left) &gt;&gt; <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[middle] &gt; target) &#123;</span><br><span class=\"line\">                right = middle; <span class=\"comment\">// target 在左区间，在[left, middle)中</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[middle] &lt; target) &#123;</span><br><span class=\"line\">                left = middle + <span class=\"number\">1</span>; <span class=\"comment\">// target 在右区间，在[middle + 1, right)中</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// nums[middle] == target</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> middle; <span class=\"comment\">// 数组中找到目标值，直接返回下标</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 未找到目标值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"27-移除元素\"><a href=\"#27-移除元素\" class=\"headerlink\" title=\"27. 移除元素\"></a>27. 移除元素</h1><h2 id=\"暴力解（两层循环）\"><a href=\"#暴力解（两层循环）\" class=\"headerlink\" title=\"暴力解（两层循环）\"></a>暴力解（两层循环）</h2><ul>\n<li>自己写的错误解<ul>\n<li>第二层循环的遍历范围有误</li>\n<li>手欠把多打了一个 &#x3D; ，把赋值写成了判断</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">removeElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> size = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] == val) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = i; j &lt; size; j++) &#123; <span class=\"comment\">// 错误1:j只需要遍历到size-1的位置，修改为： j &lt; size-1</span></span><br><span class=\"line\">                    nums[j] == nums[j+<span class=\"number\">1</span>]; <span class=\"comment\">// 错误2:此处应该是=，进行赋值操作</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                size--;</span><br><span class=\"line\">                i--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>正确解</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 时间复杂度：O(n^2)</span></span><br><span class=\"line\"><span class=\"comment\">// 空间复杂度：O(1)</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">removeElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> size = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] == val) &#123; <span class=\"comment\">// 发现需要移除的元素，就将数组集体向前移动一位</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; size; j++) &#123;</span><br><span class=\"line\">                    nums[j - <span class=\"number\">1</span>] = nums[j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                i--; <span class=\"comment\">// 因为下标i以后的数值都向前移动了一位，所以i也向前移动一位</span></span><br><span class=\"line\">                size--; <span class=\"comment\">// 此时数组的大小-1</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><p>双指针法（快慢指针法）： <strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p>\n<h3 id=\"力扣官方题解\"><a href=\"#力扣官方题解\" class=\"headerlink\" title=\"力扣官方题解\"></a><a href=\"https://leetcode.cn/problems/remove-element/solutions/730203/yi-chu-yuan-su-by-leetcode-solution-svxi/\">力扣官方题解</a></h3><p>由于题目要求删除数组中等于$val$ 的元素，因此输出数组的长度一定小于等于输入数组的长度，我们可以把输出的数组直接写在输入数组上。可以使用双指针：右指针 $right$ 指向当前将要处理的元素，左指针 $left$ 指向下一个将要赋值的位置。</p>\n<p>如果右指针指向的元素不等于 $val$，它一定是输出数组的一个元素，我们就将右指针指向的元素复制到左指针位置，然后将左右指针同时右移；</p>\n<p>如果右指针指向的元素等于 $val$，它不能在输出数组里，此时左指针不动，右指针右移一位。</p>\n<p>整个过程保持不变的性质是：区间  $[0,left)$ 中的元素都不等于 $val$。当左右指针遍历完输入数组以后，left 的值就是输出数组的长度。</p>\n<p>这样的算法在最坏情况下（输入数组中没有元素等 于$val$），左右指针各遍历了数组一次。</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif\" alt=\"27.移除元素-双指针法\"></p>\n<ul>\n<li><p>自己写的错误解</p>\n<ul>\n<li>按照我的这种写法，慢指针就起不到对数组进行移动的效果，最后只是得到了数组里有几个目标值，得不到删除目标值后的数组</li>\n<li>正确解更新在下面的代码中</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">removeElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"type\">int</span> slow = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> fast = <span class=\"number\">0</span>; fast &lt; n; fast++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[fast] != val) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 添加 nums[slow] = nums[fast];</span></span><br><span class=\"line\">                slow++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> slow;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h1 id=\"数组理论基础\"><a href=\"#数组理论基础\" class=\"headerlink\" title=\"数组理论基础\"></a>数组理论基础</h1><ol>\n<li><p>数组是存放在连续内存空间上的相同类型数据的集合。</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193029336.png\" alt=\"image-20240522193029336\"></p>\n</li>\n</ol>\n<ul>\n<li><p>数组下标都是从0开始的</p>\n</li>\n<li><p>数组内存空间的地址是连续的（<strong>因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址</strong>）</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li><p>二维数组</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240522193547234.png\" alt=\"image-20240522193547234\"></p>\n<p>不同语言内存管理不同，C++中二维数组是连续分布的，Java 不是。</p>\n</li>\n</ol>\n<h1 id=\"704-二分查找\"><a href=\"#704-二分查找\" class=\"headerlink\" title=\"704. 二分查找\"></a>704. 二分查找</h1><p><a href=\"https://programmercarl.com/0704.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html#%E6%80%9D%E8%B7%AF\">代码随想录</a></p>\n<blockquote>\n<p>大家写二分法经常写乱，主要是因为<strong>对区间的定义没有想清楚，区间的定义就是不变量</strong>。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是<strong>循环不变量</strong>规则。<del><em>(不是很理解)</em></del></p>\n</blockquote>\n<h2 id=\"第一种写法\"><a href=\"#第一种写法\" class=\"headerlink\" title=\"第一种写法\"></a>第一种写法</h2><p>定义 target 是在一个在左闭右闭的区间里，<strong>也就是[left, right] （这个很重要非常重要）</strong>。</p>\n<ul>\n<li>while (left &lt;&#x3D; right) 要使用 &lt;&#x3D; ，因为left &#x3D;&#x3D; right是有意义的，所以使用 &lt;&#x3D;</li>\n<li>if (nums[middle] &gt; target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1</li>\n</ul>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/image-20240524103229994.png\" alt=\"image-20240524103229994\"></p>\n<h2 id=\"第二种写法\"><a href=\"#第二种写法\" class=\"headerlink\" title=\"第二种写法\"></a>第二种写法</h2><p>target 是在一个在左闭右开的区间里，也就是**[left, right)**</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 版本二</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">search</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> right = nums.<span class=\"built_in\">size</span>(); <span class=\"comment\">// 定义target在左闭右开的区间里，即：[left, right)</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt; right) &#123; <span class=\"comment\">// 因为left == right的时候，在[left, right)是无效的空间，所以使用 &lt;</span></span><br><span class=\"line\">            <span class=\"type\">int</span> middle = left + ((right - left) &gt;&gt; <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[middle] &gt; target) &#123;</span><br><span class=\"line\">                right = middle; <span class=\"comment\">// target 在左区间，在[left, middle)中</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[middle] &lt; target) &#123;</span><br><span class=\"line\">                left = middle + <span class=\"number\">1</span>; <span class=\"comment\">// target 在右区间，在[middle + 1, right)中</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// nums[middle] == target</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> middle; <span class=\"comment\">// 数组中找到目标值，直接返回下标</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 未找到目标值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"27-移除元素\"><a href=\"#27-移除元素\" class=\"headerlink\" title=\"27. 移除元素\"></a>27. 移除元素</h1><h2 id=\"暴力解（两层循环）\"><a href=\"#暴力解（两层循环）\" class=\"headerlink\" title=\"暴力解（两层循环）\"></a>暴力解（两层循环）</h2><ul>\n<li>自己写的错误解<ul>\n<li>第二层循环的遍历范围有误</li>\n<li>手欠把多打了一个 &#x3D; ，把赋值写成了判断</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">removeElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> size = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] == val) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = i; j &lt; size; j++) &#123; <span class=\"comment\">// 错误1:j只需要遍历到size-1的位置，修改为： j &lt; size-1</span></span><br><span class=\"line\">                    nums[j] == nums[j+<span class=\"number\">1</span>]; <span class=\"comment\">// 错误2:此处应该是=，进行赋值操作</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                size--;</span><br><span class=\"line\">                i--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>正确解</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 时间复杂度：O(n^2)</span></span><br><span class=\"line\"><span class=\"comment\">// 空间复杂度：O(1)</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">removeElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> size = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] == val) &#123; <span class=\"comment\">// 发现需要移除的元素，就将数组集体向前移动一位</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; size; j++) &#123;</span><br><span class=\"line\">                    nums[j - <span class=\"number\">1</span>] = nums[j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                i--; <span class=\"comment\">// 因为下标i以后的数值都向前移动了一位，所以i也向前移动一位</span></span><br><span class=\"line\">                size--; <span class=\"comment\">// 此时数组的大小-1</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><p>双指针法（快慢指针法）： <strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p>\n<h3 id=\"力扣官方题解\"><a href=\"#力扣官方题解\" class=\"headerlink\" title=\"力扣官方题解\"></a><a href=\"https://leetcode.cn/problems/remove-element/solutions/730203/yi-chu-yuan-su-by-leetcode-solution-svxi/\">力扣官方题解</a></h3><p>由于题目要求删除数组中等于$val$ 的元素，因此输出数组的长度一定小于等于输入数组的长度，我们可以把输出的数组直接写在输入数组上。可以使用双指针：右指针 $right$ 指向当前将要处理的元素，左指针 $left$ 指向下一个将要赋值的位置。</p>\n<p>如果右指针指向的元素不等于 $val$，它一定是输出数组的一个元素，我们就将右指针指向的元素复制到左指针位置，然后将左右指针同时右移；</p>\n<p>如果右指针指向的元素等于 $val$，它不能在输出数组里，此时左指针不动，右指针右移一位。</p>\n<p>整个过程保持不变的性质是：区间  $[0,left)$ 中的元素都不等于 $val$。当左右指针遍历完输入数组以后，left 的值就是输出数组的长度。</p>\n<p>这样的算法在最坏情况下（输入数组中没有元素等 于$val$），左右指针各遍历了数组一次。</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0-%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.gif\" alt=\"27.移除元素-双指针法\"></p>\n<ul>\n<li><p>自己写的错误解</p>\n<ul>\n<li>按照我的这种写法，慢指针就起不到对数组进行移动的效果，最后只是得到了数组里有几个目标值，得不到删除目标值后的数组</li>\n<li>正确解更新在下面的代码中</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">removeElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"type\">int</span> slow = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> fast = <span class=\"number\">0</span>; fast &lt; n; fast++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[fast] != val) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 添加 nums[slow] = nums[fast];</span></span><br><span class=\"line\">                slow++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> slow;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"数组part02","date":"2024-05-28T11:29:45.467Z","description":"代数组part02","cover":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif","banner":"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif","poster":{"topic":null,"headline":"数组part02","caption":null,"color":null},"sticky":null,"mermaid":null,"katex":null,"mathjax":null,"topic":"计算机","author":"Montee","references":null,"comments":1,"indexing":null,"breadcrumb":null,"leftbar":null,"rightbar":null,"h1":null,"type":"tech","_content":"\n\n\n# 977. 有序数组平方【简单】\n\n[LeetCode 官方题解](https://leetcode.cn/problems/squares-of-a-sorted-array/solutions/447736/you-xu-shu-zu-de-ping-fang-by-leetcode-solution/)\n\n## 暴力排序\n\n思路：先平方，再排序\n\n```cpp\nclass Solution {\npublic:\n    vector<int> sortedSquares(vector<int>& nums) {\n        for(int i = 0; i < nums.size(); i++) {\n            nums[i] *= nums[i];\n        }\n        sort(nums.begin(), nums.end());\n        return nums;\n    }\n};\n```\n\n\n\n[【C++】sort函数使用方法](https://zhuanlan.zhihu.com/p/309291783) : sort 函数是快排的改良版，结合了堆排序等排序方法。\n\n## 双指针\n\n* 思路\n  * 个人理解：\n    * 定义两个指针：**队首指针、队尾指针**\n    * 定义一个与原数组**相同大小**的空数组\n    * 队首指针遍历，同时与队尾指针比较平方后大小，大的那一个放到空数组的队尾\n      * 放到队尾这里也需要定义一个指针用于记录位置信息，如下面代码的 right_result ~~（所以为啥不叫三指针法）~~\n    * 指针重合即停止 (这个判断条件有误，应该是 left <= right，否则会进入死循环)\n\n```cpp\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> sortedSquares(vector<int>& nums) {\n        int left = 0;\n        int right = nums.size() - 1;\n        int right_result = right;\n        vector<int> result(nums.size(), 0);\n        \n        while (left <= right) {\n            int left_square = nums[left] * nums[left];\n            int right_square = nums[right] * nums[right];\n            \n            if (left_square > right_square) {\n                result[right_result] = left_square;\n                left++;\n            } else {\n                result[right_result] = right_square;\n                right--;\n            }\n            right_result--;\n        }\n        return result;\n    }\n};\n\n```\n\n### [C++ vector容器简析](https://www.runoob.com/w3cnote/cpp-vector-container-analysis.html)\n\n```cpp\nvector<int> result(nums.size(), 0);\n```\n\n上述代码：创建并初始化了一个名为 result 的 vector<int> 类型的对象，vector<int> 是一个构造函数，可以接受两个参数：\n\n* size：表示vector的大小\n* value：表示vector中每个元素的初始大小\n\n下面详细解释上述代码的含义：\n\n* vector<int>：`vector<int>` 是 C++ 标准库中的一个模板类，用于表示一个动态数组。`vector` 是一个模板类，`<int>` 表示这个 `vector` 将存储 `int` 类型的元素。\n* result：`result` 是这个 `vector<int>` 对象的名称。它是一个变量名，表示我们将使用这个名称来引用这个 `vector` 对象\n* nums.size()：`nums` 是一个 `vector<int>` 类型的对象。`nums.size()` 返回 `nums` 中元素的个数，即 `nums` 的大小。这个大小是一个无符号整数类型（通常是 `size_t`）。\n\n\n\n# 209. 长度最小的子数组【中等】\n\n[代码随想录](https://programmercarl.com/0209.长度最小的子数组.html#算法公开课)\n\n## 个人思路（暴力解）\n\n我的思路应该就是暴力解……\n\n1. 定义外循环用于遍历整个数组\n2. 内循环用于把 i 与后面的元素想加，直到出现 >= target的情况，或者遍历完\n3. 定义一个 int 类型变量 result = 0，用于记录最小连续子数组的长度\n\n```cpp\nclass Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int result = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n            for (int j = i; j < nums.size(); j++) {\n                sum += nums[j];\n                if (sum == target) { // 判断条件有误\n                    result = j - i + 1;\n                    continue; // 这里应该修改为 break\n                }\n            }\n        }\n        return result;\n    }\n};\n```\n\n\n\n很遗憾，我的代码错了，GPT给出的问题如下：\n\n1. **条件判断错误**：你在内部循环中检查 `sum == target`，但题目要求的是总和大于等于 `target`。\n2. **结果更新错误**：你没有正确更新 `result`。你需要在找到满足条件的子数组时更新 `result`，并且应该保留最小的长度。\n3. **效率问题**：你的算法是一个 O(n2)*O*(*n*2) 的暴力解法，对于较大的输入数组会导致超时。\n\n修改后的代码如下，\n\n```cpp\nclass Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int result = INT_MAX; // 用于存储最小长度，初始值设为一个很大的数\n        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n            for (int j = i; j < nums.size(); j++) {\n                sum += nums[j];\n                if (sum >= target) {\n                    result = min(result, j - i + 1);\n                    break; // 找到一个符合条件的子数组，跳出内层循环\n                }\n            }\n        }\n        return result == INT_MAX ? 0 : result; // 如果result没有被更新过，返回0\n    }\n};\n\n```\n\n**修改说明：**\n\n1. **条件判断修正**：\n   - 将 `if (sum == target)` 修改为 `if (sum >= target)`，以满足题目要求。\n2. **更新结果**：\n   - 在找到符合条件的子数组时，使用 `result = min(result, j - i + 1)` 来更新最小长度。\n3. **跳出内层循环**：\n   - 一旦找到一个符合条件的子数组，立即跳出内层循环，因为在当前起点 `i` 继续寻找更长的子数组是没有意义的。\n4. **返回结果**：\n   - 如果 `result` 没有被更新，说明没有找到符合条件的子数组，返回 0。\n   - 否则返回 `result`。\n\n> 思路应该是没什么问题了，很不幸，超时了，leetcode给了一个超级离谱的测试样例。\n\n### 三元运算符\n\n```cpp\ncondition ? value_if_true : value_if_false\n```\n\n- **condition**：这是一个布尔表达式，计算结果要么是 `true`，要么是 `false`。\n- **value_if_true**：如果 `condition` 为 `true`，则返回这个值。\n- **value_if_false**：如果 `condition` 为 `false`，则返回这个值。\n\n\n\n## 滑动窗口\n\n![209.长度最小的子数组](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif)\n\n所谓滑动窗口，**就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果**。\n\n在本题中实现滑动窗口，主要确定如下三点：\n\n- 窗口内是什么？\n\n  - 窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。\n\n- 如何移动窗口的起始位置？\n\n  - 窗口的起始位置如何移动：如果当前窗口的值大于等于s了，窗口就要向前移动了（也就是该缩小了）。\n\n    ![leetcode_209](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/20210312160441942.png)\n\n- 如何移动窗口的结束位置？\n\n  - 窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。\n\n```cpp\nclass Solution {\npublic:\n    int minSubArrayLen(int s, vector<int>& nums) {\n        int result = INT32_MAX;\n        int sum = 0; // 滑动窗口数值之和\n        int i = 0; // 滑动窗口起始位置\n        int subLength = 0; // 滑动窗口的长度\n        for (int j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n            // 注意这里使用while，每次更新 i（起始位置），并不断比较子序列是否符合条件\n            while (sum >= s) {\n                subLength = (j - i + 1); // 取子序列的长度\n                result = result < subLength ? result : subLength;\n                sum -= nums[i++]; // 这里体现出滑动窗口的精髓之处，不断变更i（子序列的起始位置）\n            }\n        }\n        // 如果result没有被赋值的话，就返回0，说明没有符合条件的子序列\n        return result == INT32_MAX ? 0 : result;\n    }\n};\n```\n\n\n\n# 59. 螺旋矩阵II【中等】\n\n[视频讲解](https://www.bilibili.com/video/BV1SL4y1N7mV/?vd_source=f30eba35d0a8915376778596dfd73224)\n\n这题……毫无思路，可见我对多维矩阵的理解极弱。\n\n题解也看不懂，感觉就是硬套啊，这就是**模拟**的精髓吗？\n\n据说这还是**高频考题**？看来得背下来了。\n\n```cpp\nclass Solution {\npublic:\n    vector<vector<int>> generateMatrix(int n) {\n        vector<vector<int>> res(n, vector<int>(n, 0)); // 使用vector定义一个二维数组\n        int startx = 0, starty = 0; // 定义每循环一个圈的起始位置\n        int loop = n / 2; // 每个圈循环几次，例如n为奇数3，那么loop = 1 只是循环一圈，矩阵中间的值需要单独处理\n        int mid = n / 2; // 矩阵中间的位置，例如：n为3， 中间的位置就是(1，1)，n为5，中间位置为(2, 2)\n        int count = 1; // 用来给矩阵中每一个空格赋值\n        int offset = 1; // 需要控制每一条边遍历的长度，每次循环右边界收缩一位\n        int i,j;\n        while (loop --) {\n            i = startx;\n            j = starty;\n\n            // 下面开始的四个for就是模拟转了一圈\n            // 模拟填充上行从左到右(左闭右开)\n            for (j; j < n - offset; j++) {\n                res[i][j] = count++;\n            }\n            // 模拟填充右列从上到下(左闭右开)\n            for (i; i < n - offset; i++) {\n                res[i][j] = count++;\n            }\n            // 模拟填充下行从右到左(左闭右开)\n            for (; j > starty; j--) {\n                res[i][j] = count++;\n            }\n            // 模拟填充左列从下到上(左闭右开)\n            for (; i > startx; i--) {\n                res[i][j] = count++;\n            }\n\n            // 第二圈开始的时候，起始位置要各自加1， 例如：第一圈起始位置是(0, 0)，第二圈起始位置是(1, 1)\n            startx++;\n            starty++;\n\n            // offset 控制每一圈里每一条边遍历的长度\n            offset += 1;\n        }\n\n        // 如果n为奇数的话，需要单独给矩阵最中间的位置赋值\n        if (n % 2) {\n            res[mid][mid] = count;\n        }\n        return res;\n    }\n};\n```\n\n","source":"_posts/数组part02.md","raw":"---\n# 基本信息\ntitle: 数组part02\ndate: 2024/05/28/19/30\ntags: [cpp, 计算机, leetcode, 秋招, 算法]\ncategories: [cpp, 题解]\ndescription: 代数组part02\n# 封面\ncover: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif\nbanner: https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif\nposter:  # 海报（可选，全图封面卡片）\n  topic: # 可选\n  headline:  数组part02 # 必选\n  caption:  # 可选\n  color:  # 可选\n# 插件\nsticky: # 数字越大越靠前\nmermaid:\nkatex: \nmathjax: \n# 可选\ntopic: 计算机 # 专栏 id\nauthor: Montee\nreferences:\ncomments: # 设置 false 禁止评论\nindexing: # 设置 false 避免被搜索\nbreadcrumb: # 设置 false 隐藏面包屑导航\nleftbar: \nrightbar:\nh1: # 设置为 '' 隐藏标题\ntype: tech # tech/story\n---\n\n\n\n# 977. 有序数组平方【简单】\n\n[LeetCode 官方题解](https://leetcode.cn/problems/squares-of-a-sorted-array/solutions/447736/you-xu-shu-zu-de-ping-fang-by-leetcode-solution/)\n\n## 暴力排序\n\n思路：先平方，再排序\n\n```cpp\nclass Solution {\npublic:\n    vector<int> sortedSquares(vector<int>& nums) {\n        for(int i = 0; i < nums.size(); i++) {\n            nums[i] *= nums[i];\n        }\n        sort(nums.begin(), nums.end());\n        return nums;\n    }\n};\n```\n\n\n\n[【C++】sort函数使用方法](https://zhuanlan.zhihu.com/p/309291783) : sort 函数是快排的改良版，结合了堆排序等排序方法。\n\n## 双指针\n\n* 思路\n  * 个人理解：\n    * 定义两个指针：**队首指针、队尾指针**\n    * 定义一个与原数组**相同大小**的空数组\n    * 队首指针遍历，同时与队尾指针比较平方后大小，大的那一个放到空数组的队尾\n      * 放到队尾这里也需要定义一个指针用于记录位置信息，如下面代码的 right_result ~~（所以为啥不叫三指针法）~~\n    * 指针重合即停止 (这个判断条件有误，应该是 left <= right，否则会进入死循环)\n\n```cpp\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> sortedSquares(vector<int>& nums) {\n        int left = 0;\n        int right = nums.size() - 1;\n        int right_result = right;\n        vector<int> result(nums.size(), 0);\n        \n        while (left <= right) {\n            int left_square = nums[left] * nums[left];\n            int right_square = nums[right] * nums[right];\n            \n            if (left_square > right_square) {\n                result[right_result] = left_square;\n                left++;\n            } else {\n                result[right_result] = right_square;\n                right--;\n            }\n            right_result--;\n        }\n        return result;\n    }\n};\n\n```\n\n### [C++ vector容器简析](https://www.runoob.com/w3cnote/cpp-vector-container-analysis.html)\n\n```cpp\nvector<int> result(nums.size(), 0);\n```\n\n上述代码：创建并初始化了一个名为 result 的 vector<int> 类型的对象，vector<int> 是一个构造函数，可以接受两个参数：\n\n* size：表示vector的大小\n* value：表示vector中每个元素的初始大小\n\n下面详细解释上述代码的含义：\n\n* vector<int>：`vector<int>` 是 C++ 标准库中的一个模板类，用于表示一个动态数组。`vector` 是一个模板类，`<int>` 表示这个 `vector` 将存储 `int` 类型的元素。\n* result：`result` 是这个 `vector<int>` 对象的名称。它是一个变量名，表示我们将使用这个名称来引用这个 `vector` 对象\n* nums.size()：`nums` 是一个 `vector<int>` 类型的对象。`nums.size()` 返回 `nums` 中元素的个数，即 `nums` 的大小。这个大小是一个无符号整数类型（通常是 `size_t`）。\n\n\n\n# 209. 长度最小的子数组【中等】\n\n[代码随想录](https://programmercarl.com/0209.长度最小的子数组.html#算法公开课)\n\n## 个人思路（暴力解）\n\n我的思路应该就是暴力解……\n\n1. 定义外循环用于遍历整个数组\n2. 内循环用于把 i 与后面的元素想加，直到出现 >= target的情况，或者遍历完\n3. 定义一个 int 类型变量 result = 0，用于记录最小连续子数组的长度\n\n```cpp\nclass Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int result = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n            for (int j = i; j < nums.size(); j++) {\n                sum += nums[j];\n                if (sum == target) { // 判断条件有误\n                    result = j - i + 1;\n                    continue; // 这里应该修改为 break\n                }\n            }\n        }\n        return result;\n    }\n};\n```\n\n\n\n很遗憾，我的代码错了，GPT给出的问题如下：\n\n1. **条件判断错误**：你在内部循环中检查 `sum == target`，但题目要求的是总和大于等于 `target`。\n2. **结果更新错误**：你没有正确更新 `result`。你需要在找到满足条件的子数组时更新 `result`，并且应该保留最小的长度。\n3. **效率问题**：你的算法是一个 O(n2)*O*(*n*2) 的暴力解法，对于较大的输入数组会导致超时。\n\n修改后的代码如下，\n\n```cpp\nclass Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int result = INT_MAX; // 用于存储最小长度，初始值设为一个很大的数\n        for (int i = 0; i < nums.size(); i++) {\n            int sum = 0;\n            for (int j = i; j < nums.size(); j++) {\n                sum += nums[j];\n                if (sum >= target) {\n                    result = min(result, j - i + 1);\n                    break; // 找到一个符合条件的子数组，跳出内层循环\n                }\n            }\n        }\n        return result == INT_MAX ? 0 : result; // 如果result没有被更新过，返回0\n    }\n};\n\n```\n\n**修改说明：**\n\n1. **条件判断修正**：\n   - 将 `if (sum == target)` 修改为 `if (sum >= target)`，以满足题目要求。\n2. **更新结果**：\n   - 在找到符合条件的子数组时，使用 `result = min(result, j - i + 1)` 来更新最小长度。\n3. **跳出内层循环**：\n   - 一旦找到一个符合条件的子数组，立即跳出内层循环，因为在当前起点 `i` 继续寻找更长的子数组是没有意义的。\n4. **返回结果**：\n   - 如果 `result` 没有被更新，说明没有找到符合条件的子数组，返回 0。\n   - 否则返回 `result`。\n\n> 思路应该是没什么问题了，很不幸，超时了，leetcode给了一个超级离谱的测试样例。\n\n### 三元运算符\n\n```cpp\ncondition ? value_if_true : value_if_false\n```\n\n- **condition**：这是一个布尔表达式，计算结果要么是 `true`，要么是 `false`。\n- **value_if_true**：如果 `condition` 为 `true`，则返回这个值。\n- **value_if_false**：如果 `condition` 为 `false`，则返回这个值。\n\n\n\n## 滑动窗口\n\n![209.长度最小的子数组](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif)\n\n所谓滑动窗口，**就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果**。\n\n在本题中实现滑动窗口，主要确定如下三点：\n\n- 窗口内是什么？\n\n  - 窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。\n\n- 如何移动窗口的起始位置？\n\n  - 窗口的起始位置如何移动：如果当前窗口的值大于等于s了，窗口就要向前移动了（也就是该缩小了）。\n\n    ![leetcode_209](https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/20210312160441942.png)\n\n- 如何移动窗口的结束位置？\n\n  - 窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。\n\n```cpp\nclass Solution {\npublic:\n    int minSubArrayLen(int s, vector<int>& nums) {\n        int result = INT32_MAX;\n        int sum = 0; // 滑动窗口数值之和\n        int i = 0; // 滑动窗口起始位置\n        int subLength = 0; // 滑动窗口的长度\n        for (int j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n            // 注意这里使用while，每次更新 i（起始位置），并不断比较子序列是否符合条件\n            while (sum >= s) {\n                subLength = (j - i + 1); // 取子序列的长度\n                result = result < subLength ? result : subLength;\n                sum -= nums[i++]; // 这里体现出滑动窗口的精髓之处，不断变更i（子序列的起始位置）\n            }\n        }\n        // 如果result没有被赋值的话，就返回0，说明没有符合条件的子序列\n        return result == INT32_MAX ? 0 : result;\n    }\n};\n```\n\n\n\n# 59. 螺旋矩阵II【中等】\n\n[视频讲解](https://www.bilibili.com/video/BV1SL4y1N7mV/?vd_source=f30eba35d0a8915376778596dfd73224)\n\n这题……毫无思路，可见我对多维矩阵的理解极弱。\n\n题解也看不懂，感觉就是硬套啊，这就是**模拟**的精髓吗？\n\n据说这还是**高频考题**？看来得背下来了。\n\n```cpp\nclass Solution {\npublic:\n    vector<vector<int>> generateMatrix(int n) {\n        vector<vector<int>> res(n, vector<int>(n, 0)); // 使用vector定义一个二维数组\n        int startx = 0, starty = 0; // 定义每循环一个圈的起始位置\n        int loop = n / 2; // 每个圈循环几次，例如n为奇数3，那么loop = 1 只是循环一圈，矩阵中间的值需要单独处理\n        int mid = n / 2; // 矩阵中间的位置，例如：n为3， 中间的位置就是(1，1)，n为5，中间位置为(2, 2)\n        int count = 1; // 用来给矩阵中每一个空格赋值\n        int offset = 1; // 需要控制每一条边遍历的长度，每次循环右边界收缩一位\n        int i,j;\n        while (loop --) {\n            i = startx;\n            j = starty;\n\n            // 下面开始的四个for就是模拟转了一圈\n            // 模拟填充上行从左到右(左闭右开)\n            for (j; j < n - offset; j++) {\n                res[i][j] = count++;\n            }\n            // 模拟填充右列从上到下(左闭右开)\n            for (i; i < n - offset; i++) {\n                res[i][j] = count++;\n            }\n            // 模拟填充下行从右到左(左闭右开)\n            for (; j > starty; j--) {\n                res[i][j] = count++;\n            }\n            // 模拟填充左列从下到上(左闭右开)\n            for (; i > startx; i--) {\n                res[i][j] = count++;\n            }\n\n            // 第二圈开始的时候，起始位置要各自加1， 例如：第一圈起始位置是(0, 0)，第二圈起始位置是(1, 1)\n            startx++;\n            starty++;\n\n            // offset 控制每一圈里每一条边遍历的长度\n            offset += 1;\n        }\n\n        // 如果n为奇数的话，需要单独给矩阵最中间的位置赋值\n        if (n % 2) {\n            res[mid][mid] = count;\n        }\n        return res;\n    }\n};\n```\n\n","slug":"数组part02","published":1,"updated":"2024-05-28T11:31:04.316Z","layout":"post","photos":[],"_id":"clwqglb0x0003xs3a7vi0dijo","content":"<h1 id=\"977-有序数组平方【简单】\"><a href=\"#977-有序数组平方【简单】\" class=\"headerlink\" title=\"977. 有序数组平方【简单】\"></a>977. 有序数组平方【简单】</h1><p><a href=\"https://leetcode.cn/problems/squares-of-a-sorted-array/solutions/447736/you-xu-shu-zu-de-ping-fang-by-leetcode-solution/\">LeetCode 官方题解</a></p>\n<h2 id=\"暴力排序\"><a href=\"#暴力排序\" class=\"headerlink\" title=\"暴力排序\"></a>暴力排序</h2><p>思路：先平方，再排序</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">sortedSquares</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            nums[i] *= nums[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><a href=\"https://zhuanlan.zhihu.com/p/309291783\">【C++】sort函数使用方法</a> : sort 函数是快排的改良版，结合了堆排序等排序方法。</p>\n<h2 id=\"双指针\"><a href=\"#双指针\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><ul>\n<li>思路<ul>\n<li>个人理解：<ul>\n<li>定义两个指针：<strong>队首指针、队尾指针</strong></li>\n<li>定义一个与原数组<strong>相同大小</strong>的空数组</li>\n<li>队首指针遍历，同时与队尾指针比较平方后大小，大的那一个放到空数组的队尾<ul>\n<li>放到队尾这里也需要定义一个指针用于记录位置信息，如下面代码的 right_result <del>（所以为啥不叫三指针法）</del></li>\n</ul>\n</li>\n<li>指针重合即停止 (这个判断条件有误，应该是 left &lt;&#x3D; right，否则会进入死循环)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">sortedSquares</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> right = nums.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> right_result = right;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">result</span><span class=\"params\">(nums.size(), <span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt;= right) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> left_square = nums[left] * nums[left];</span><br><span class=\"line\">            <span class=\"type\">int</span> right_square = nums[right] * nums[right];</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left_square &gt; right_square) &#123;</span><br><span class=\"line\">                result[right_result] = left_square;</span><br><span class=\"line\">                left++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                result[right_result] = right_square;</span><br><span class=\"line\">                right--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            right_result--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"C-vector容器简析\"><a href=\"#C-vector容器简析\" class=\"headerlink\" title=\"C++ vector容器简析\"></a><a href=\"https://www.runoob.com/w3cnote/cpp-vector-container-analysis.html\">C++ vector容器简析</a></h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">result</span><span class=\"params\">(nums.size(), <span class=\"number\">0</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码：创建并初始化了一个名为 result 的 vector<int> 类型的对象，vector<int> 是一个构造函数，可以接受两个参数：</p>\n<ul>\n<li>size：表示vector的大小</li>\n<li>value：表示vector中每个元素的初始大小</li>\n</ul>\n<p>下面详细解释上述代码的含义：</p>\n<ul>\n<li>vector<int>：<code>vector&lt;int&gt;</code> 是 C++ 标准库中的一个模板类，用于表示一个动态数组。<code>vector</code> 是一个模板类，<code>&lt;int&gt;</code> 表示这个 <code>vector</code> 将存储 <code>int</code> 类型的元素。</li>\n<li>result：<code>result</code> 是这个 <code>vector&lt;int&gt;</code> 对象的名称。它是一个变量名，表示我们将使用这个名称来引用这个 <code>vector</code> 对象</li>\n<li>nums.size()：<code>nums</code> 是一个 <code>vector&lt;int&gt;</code> 类型的对象。<code>nums.size()</code> 返回 <code>nums</code> 中元素的个数，即 <code>nums</code> 的大小。这个大小是一个无符号整数类型（通常是 <code>size_t</code>）。</li>\n</ul>\n<h1 id=\"209-长度最小的子数组【中等】\"><a href=\"#209-长度最小的子数组【中等】\" class=\"headerlink\" title=\"209. 长度最小的子数组【中等】\"></a>209. 长度最小的子数组【中等】</h1><p><a href=\"https://programmercarl.com/0209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE\">代码随想录</a></p>\n<h2 id=\"个人思路（暴力解）\"><a href=\"#个人思路（暴力解）\" class=\"headerlink\" title=\"个人思路（暴力解）\"></a>个人思路（暴力解）</h2><p>我的思路应该就是暴力解……</p>\n<ol>\n<li>定义外循环用于遍历整个数组</li>\n<li>内循环用于把 i 与后面的元素想加，直到出现 &gt;&#x3D; target的情况，或者遍历完</li>\n<li>定义一个 int 类型变量 result &#x3D; 0，用于记录最小连续子数组的长度</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minSubArrayLen</span><span class=\"params\">(<span class=\"type\">int</span> target, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt; nums.<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">                sum += nums[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sum == target) &#123; <span class=\"comment\">// 判断条件有误</span></span><br><span class=\"line\">                    result = j - i + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>; <span class=\"comment\">// 这里应该修改为 break</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>很遗憾，我的代码错了，GPT给出的问题如下：</p>\n<ol>\n<li><strong>条件判断错误</strong>：你在内部循环中检查 <code>sum == target</code>，但题目要求的是总和大于等于 <code>target</code>。</li>\n<li><strong>结果更新错误</strong>：你没有正确更新 <code>result</code>。你需要在找到满足条件的子数组时更新 <code>result</code>，并且应该保留最小的长度。</li>\n<li><strong>效率问题</strong>：你的算法是一个 O(n2)<em>O</em>(<em>n</em>2) 的暴力解法，对于较大的输入数组会导致超时。</li>\n</ol>\n<p>修改后的代码如下，</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minSubArrayLen</span><span class=\"params\">(<span class=\"type\">int</span> target, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> result = INT_MAX; <span class=\"comment\">// 用于存储最小长度，初始值设为一个很大的数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt; nums.<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">                sum += nums[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sum &gt;= target) &#123;</span><br><span class=\"line\">                    result = <span class=\"built_in\">min</span>(result, j - i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>; <span class=\"comment\">// 找到一个符合条件的子数组，跳出内层循环</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result == INT_MAX ? <span class=\"number\">0</span> : result; <span class=\"comment\">// 如果result没有被更新过，返回0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>修改说明：</strong></p>\n<ol>\n<li><strong>条件判断修正</strong>：<ul>\n<li>将 <code>if (sum == target)</code> 修改为 <code>if (sum &gt;= target)</code>，以满足题目要求。</li>\n</ul>\n</li>\n<li><strong>更新结果</strong>：<ul>\n<li>在找到符合条件的子数组时，使用 <code>result = min(result, j - i + 1)</code> 来更新最小长度。</li>\n</ul>\n</li>\n<li><strong>跳出内层循环</strong>：<ul>\n<li>一旦找到一个符合条件的子数组，立即跳出内层循环，因为在当前起点 <code>i</code> 继续寻找更长的子数组是没有意义的。</li>\n</ul>\n</li>\n<li><strong>返回结果</strong>：<ul>\n<li>如果 <code>result</code> 没有被更新，说明没有找到符合条件的子数组，返回 0。</li>\n<li>否则返回 <code>result</code>。</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>思路应该是没什么问题了，很不幸，超时了，leetcode给了一个超级离谱的测试样例。</p>\n</blockquote>\n<h3 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">condition ? value_if_true : value_if_false</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>condition</strong>：这是一个布尔表达式，计算结果要么是 <code>true</code>，要么是 <code>false</code>。</li>\n<li><strong>value_if_true</strong>：如果 <code>condition</code> 为 <code>true</code>，则返回这个值。</li>\n<li><strong>value_if_false</strong>：如果 <code>condition</code> 为 <code>false</code>，则返回这个值。</li>\n</ul>\n<h2 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h2><p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif\" alt=\"209.长度最小的子数组\"></p>\n<p>所谓滑动窗口，<strong>就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果</strong>。</p>\n<p>在本题中实现滑动窗口，主要确定如下三点：</p>\n<ul>\n<li><p>窗口内是什么？</p>\n<ul>\n<li>窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。</li>\n</ul>\n</li>\n<li><p>如何移动窗口的起始位置？</p>\n<ul>\n<li><p>窗口的起始位置如何移动：如果当前窗口的值大于等于s了，窗口就要向前移动了（也就是该缩小了）。</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/20210312160441942.png\" alt=\"leetcode_209\"></p>\n</li>\n</ul>\n</li>\n<li><p>如何移动窗口的结束位置？</p>\n<ul>\n<li>窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minSubArrayLen</span><span class=\"params\">(<span class=\"type\">int</span> s, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> result = INT32_MAX;</span><br><span class=\"line\">        <span class=\"type\">int</span> sum = <span class=\"number\">0</span>; <span class=\"comment\">// 滑动窗口数值之和</span></span><br><span class=\"line\">        <span class=\"type\">int</span> i = <span class=\"number\">0</span>; <span class=\"comment\">// 滑动窗口起始位置</span></span><br><span class=\"line\">        <span class=\"type\">int</span> subLength = <span class=\"number\">0</span>; <span class=\"comment\">// 滑动窗口的长度</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; nums.<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">            sum += nums[j];</span><br><span class=\"line\">            <span class=\"comment\">// 注意这里使用while，每次更新 i（起始位置），并不断比较子序列是否符合条件</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (sum &gt;= s) &#123;</span><br><span class=\"line\">                subLength = (j - i + <span class=\"number\">1</span>); <span class=\"comment\">// 取子序列的长度</span></span><br><span class=\"line\">                result = result &lt; subLength ? result : subLength;</span><br><span class=\"line\">                sum -= nums[i++]; <span class=\"comment\">// 这里体现出滑动窗口的精髓之处，不断变更i（子序列的起始位置）</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果result没有被赋值的话，就返回0，说明没有符合条件的子序列</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> result == INT32_MAX ? <span class=\"number\">0</span> : result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"59-螺旋矩阵II【中等】\"><a href=\"#59-螺旋矩阵II【中等】\" class=\"headerlink\" title=\"59. 螺旋矩阵II【中等】\"></a>59. 螺旋矩阵II【中等】</h1><p><a href=\"https://www.bilibili.com/video/BV1SL4y1N7mV/?vd_source=f30eba35d0a8915376778596dfd73224\">视频讲解</a></p>\n<p>这题……毫无思路，可见我对多维矩阵的理解极弱。</p>\n<p>题解也看不懂，感觉就是硬套啊，这就是<strong>模拟</strong>的精髓吗？</p>\n<p>据说这还是<strong>高频考题</strong>？看来得背下来了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">generateMatrix</span>(<span class=\"type\">int</span> n) &#123;</span><br><span class=\"line\">        vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">res</span>(n, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n, <span class=\"number\">0</span>)); <span class=\"comment\">// 使用vector定义一个二维数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span> startx = <span class=\"number\">0</span>, starty = <span class=\"number\">0</span>; <span class=\"comment\">// 定义每循环一个圈的起始位置</span></span><br><span class=\"line\">        <span class=\"type\">int</span> loop = n / <span class=\"number\">2</span>; <span class=\"comment\">// 每个圈循环几次，例如n为奇数3，那么loop = 1 只是循环一圈，矩阵中间的值需要单独处理</span></span><br><span class=\"line\">        <span class=\"type\">int</span> mid = n / <span class=\"number\">2</span>; <span class=\"comment\">// 矩阵中间的位置，例如：n为3， 中间的位置就是(1，1)，n为5，中间位置为(2, 2)</span></span><br><span class=\"line\">        <span class=\"type\">int</span> count = <span class=\"number\">1</span>; <span class=\"comment\">// 用来给矩阵中每一个空格赋值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> offset = <span class=\"number\">1</span>; <span class=\"comment\">// 需要控制每一条边遍历的长度，每次循环右边界收缩一位</span></span><br><span class=\"line\">        <span class=\"type\">int</span> i,j;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (loop --) &#123;</span><br><span class=\"line\">            i = startx;</span><br><span class=\"line\">            j = starty;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 下面开始的四个for就是模拟转了一圈</span></span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充上行从左到右(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j; j &lt; n - offset; j++) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充右列从上到下(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i; i &lt; n - offset; i++) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充下行从右到左(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; j &gt; starty; j--) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充左列从下到上(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; i &gt; startx; i--) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 第二圈开始的时候，起始位置要各自加1， 例如：第一圈起始位置是(0, 0)，第二圈起始位置是(1, 1)</span></span><br><span class=\"line\">            startx++;</span><br><span class=\"line\">            starty++;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// offset 控制每一圈里每一条边遍历的长度</span></span><br><span class=\"line\">            offset += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果n为奇数的话，需要单独给矩阵最中间的位置赋值</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            res[mid][mid] = count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h1 id=\"977-有序数组平方【简单】\"><a href=\"#977-有序数组平方【简单】\" class=\"headerlink\" title=\"977. 有序数组平方【简单】\"></a>977. 有序数组平方【简单】</h1><p><a href=\"https://leetcode.cn/problems/squares-of-a-sorted-array/solutions/447736/you-xu-shu-zu-de-ping-fang-by-leetcode-solution/\">LeetCode 官方题解</a></p>\n<h2 id=\"暴力排序\"><a href=\"#暴力排序\" class=\"headerlink\" title=\"暴力排序\"></a>暴力排序</h2><p>思路：先平方，再排序</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">sortedSquares</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            nums[i] *= nums[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><a href=\"https://zhuanlan.zhihu.com/p/309291783\">【C++】sort函数使用方法</a> : sort 函数是快排的改良版，结合了堆排序等排序方法。</p>\n<h2 id=\"双指针\"><a href=\"#双指针\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><ul>\n<li>思路<ul>\n<li>个人理解：<ul>\n<li>定义两个指针：<strong>队首指针、队尾指针</strong></li>\n<li>定义一个与原数组<strong>相同大小</strong>的空数组</li>\n<li>队首指针遍历，同时与队尾指针比较平方后大小，大的那一个放到空数组的队尾<ul>\n<li>放到队尾这里也需要定义一个指针用于记录位置信息，如下面代码的 right_result <del>（所以为啥不叫三指针法）</del></li>\n</ul>\n</li>\n<li>指针重合即停止 (这个判断条件有误，应该是 left &lt;&#x3D; right，否则会进入死循环)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">sortedSquares</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> left = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> right = nums.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> right_result = right;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">result</span><span class=\"params\">(nums.size(), <span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt;= right) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> left_square = nums[left] * nums[left];</span><br><span class=\"line\">            <span class=\"type\">int</span> right_square = nums[right] * nums[right];</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left_square &gt; right_square) &#123;</span><br><span class=\"line\">                result[right_result] = left_square;</span><br><span class=\"line\">                left++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                result[right_result] = right_square;</span><br><span class=\"line\">                right--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            right_result--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"C-vector容器简析\"><a href=\"#C-vector容器简析\" class=\"headerlink\" title=\"C++ vector容器简析\"></a><a href=\"https://www.runoob.com/w3cnote/cpp-vector-container-analysis.html\">C++ vector容器简析</a></h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">result</span><span class=\"params\">(nums.size(), <span class=\"number\">0</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码：创建并初始化了一个名为 result 的 vector<int> 类型的对象，vector<int> 是一个构造函数，可以接受两个参数：</p>\n<ul>\n<li>size：表示vector的大小</li>\n<li>value：表示vector中每个元素的初始大小</li>\n</ul>\n<p>下面详细解释上述代码的含义：</p>\n<ul>\n<li>vector<int>：<code>vector&lt;int&gt;</code> 是 C++ 标准库中的一个模板类，用于表示一个动态数组。<code>vector</code> 是一个模板类，<code>&lt;int&gt;</code> 表示这个 <code>vector</code> 将存储 <code>int</code> 类型的元素。</li>\n<li>result：<code>result</code> 是这个 <code>vector&lt;int&gt;</code> 对象的名称。它是一个变量名，表示我们将使用这个名称来引用这个 <code>vector</code> 对象</li>\n<li>nums.size()：<code>nums</code> 是一个 <code>vector&lt;int&gt;</code> 类型的对象。<code>nums.size()</code> 返回 <code>nums</code> 中元素的个数，即 <code>nums</code> 的大小。这个大小是一个无符号整数类型（通常是 <code>size_t</code>）。</li>\n</ul>\n<h1 id=\"209-长度最小的子数组【中等】\"><a href=\"#209-长度最小的子数组【中等】\" class=\"headerlink\" title=\"209. 长度最小的子数组【中等】\"></a>209. 长度最小的子数组【中等】</h1><p><a href=\"https://programmercarl.com/0209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE\">代码随想录</a></p>\n<h2 id=\"个人思路（暴力解）\"><a href=\"#个人思路（暴力解）\" class=\"headerlink\" title=\"个人思路（暴力解）\"></a>个人思路（暴力解）</h2><p>我的思路应该就是暴力解……</p>\n<ol>\n<li>定义外循环用于遍历整个数组</li>\n<li>内循环用于把 i 与后面的元素想加，直到出现 &gt;&#x3D; target的情况，或者遍历完</li>\n<li>定义一个 int 类型变量 result &#x3D; 0，用于记录最小连续子数组的长度</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minSubArrayLen</span><span class=\"params\">(<span class=\"type\">int</span> target, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt; nums.<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">                sum += nums[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sum == target) &#123; <span class=\"comment\">// 判断条件有误</span></span><br><span class=\"line\">                    result = j - i + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>; <span class=\"comment\">// 这里应该修改为 break</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>很遗憾，我的代码错了，GPT给出的问题如下：</p>\n<ol>\n<li><strong>条件判断错误</strong>：你在内部循环中检查 <code>sum == target</code>，但题目要求的是总和大于等于 <code>target</code>。</li>\n<li><strong>结果更新错误</strong>：你没有正确更新 <code>result</code>。你需要在找到满足条件的子数组时更新 <code>result</code>，并且应该保留最小的长度。</li>\n<li><strong>效率问题</strong>：你的算法是一个 O(n2)<em>O</em>(<em>n</em>2) 的暴力解法，对于较大的输入数组会导致超时。</li>\n</ol>\n<p>修改后的代码如下，</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minSubArrayLen</span><span class=\"params\">(<span class=\"type\">int</span> target, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> result = INT_MAX; <span class=\"comment\">// 用于存储最小长度，初始值设为一个很大的数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt; nums.<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">                sum += nums[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sum &gt;= target) &#123;</span><br><span class=\"line\">                    result = <span class=\"built_in\">min</span>(result, j - i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>; <span class=\"comment\">// 找到一个符合条件的子数组，跳出内层循环</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result == INT_MAX ? <span class=\"number\">0</span> : result; <span class=\"comment\">// 如果result没有被更新过，返回0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>修改说明：</strong></p>\n<ol>\n<li><strong>条件判断修正</strong>：<ul>\n<li>将 <code>if (sum == target)</code> 修改为 <code>if (sum &gt;= target)</code>，以满足题目要求。</li>\n</ul>\n</li>\n<li><strong>更新结果</strong>：<ul>\n<li>在找到符合条件的子数组时，使用 <code>result = min(result, j - i + 1)</code> 来更新最小长度。</li>\n</ul>\n</li>\n<li><strong>跳出内层循环</strong>：<ul>\n<li>一旦找到一个符合条件的子数组，立即跳出内层循环，因为在当前起点 <code>i</code> 继续寻找更长的子数组是没有意义的。</li>\n</ul>\n</li>\n<li><strong>返回结果</strong>：<ul>\n<li>如果 <code>result</code> 没有被更新，说明没有找到符合条件的子数组，返回 0。</li>\n<li>否则返回 <code>result</code>。</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>思路应该是没什么问题了，很不幸，超时了，leetcode给了一个超级离谱的测试样例。</p>\n</blockquote>\n<h3 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">condition ? value_if_true : value_if_false</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>condition</strong>：这是一个布尔表达式，计算结果要么是 <code>true</code>，要么是 <code>false</code>。</li>\n<li><strong>value_if_true</strong>：如果 <code>condition</code> 为 <code>true</code>，则返回这个值。</li>\n<li><strong>value_if_false</strong>：如果 <code>condition</code> 为 <code>false</code>，则返回这个值。</li>\n</ul>\n<h2 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h2><p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif\" alt=\"209.长度最小的子数组\"></p>\n<p>所谓滑动窗口，<strong>就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果</strong>。</p>\n<p>在本题中实现滑动窗口，主要确定如下三点：</p>\n<ul>\n<li><p>窗口内是什么？</p>\n<ul>\n<li>窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。</li>\n</ul>\n</li>\n<li><p>如何移动窗口的起始位置？</p>\n<ul>\n<li><p>窗口的起始位置如何移动：如果当前窗口的值大于等于s了，窗口就要向前移动了（也就是该缩小了）。</p>\n<p><img src=\"https://blog-imges-1313931661.cos.ap-nanjing.myqcloud.com/20210312160441942.png\" alt=\"leetcode_209\"></p>\n</li>\n</ul>\n</li>\n<li><p>如何移动窗口的结束位置？</p>\n<ul>\n<li>窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minSubArrayLen</span><span class=\"params\">(<span class=\"type\">int</span> s, vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> result = INT32_MAX;</span><br><span class=\"line\">        <span class=\"type\">int</span> sum = <span class=\"number\">0</span>; <span class=\"comment\">// 滑动窗口数值之和</span></span><br><span class=\"line\">        <span class=\"type\">int</span> i = <span class=\"number\">0</span>; <span class=\"comment\">// 滑动窗口起始位置</span></span><br><span class=\"line\">        <span class=\"type\">int</span> subLength = <span class=\"number\">0</span>; <span class=\"comment\">// 滑动窗口的长度</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; nums.<span class=\"built_in\">size</span>(); j++) &#123;</span><br><span class=\"line\">            sum += nums[j];</span><br><span class=\"line\">            <span class=\"comment\">// 注意这里使用while，每次更新 i（起始位置），并不断比较子序列是否符合条件</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (sum &gt;= s) &#123;</span><br><span class=\"line\">                subLength = (j - i + <span class=\"number\">1</span>); <span class=\"comment\">// 取子序列的长度</span></span><br><span class=\"line\">                result = result &lt; subLength ? result : subLength;</span><br><span class=\"line\">                sum -= nums[i++]; <span class=\"comment\">// 这里体现出滑动窗口的精髓之处，不断变更i（子序列的起始位置）</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果result没有被赋值的话，就返回0，说明没有符合条件的子序列</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> result == INT32_MAX ? <span class=\"number\">0</span> : result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"59-螺旋矩阵II【中等】\"><a href=\"#59-螺旋矩阵II【中等】\" class=\"headerlink\" title=\"59. 螺旋矩阵II【中等】\"></a>59. 螺旋矩阵II【中等】</h1><p><a href=\"https://www.bilibili.com/video/BV1SL4y1N7mV/?vd_source=f30eba35d0a8915376778596dfd73224\">视频讲解</a></p>\n<p>这题……毫无思路，可见我对多维矩阵的理解极弱。</p>\n<p>题解也看不懂，感觉就是硬套啊，这就是<strong>模拟</strong>的精髓吗？</p>\n<p>据说这还是<strong>高频考题</strong>？看来得背下来了。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">generateMatrix</span>(<span class=\"type\">int</span> n) &#123;</span><br><span class=\"line\">        vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">res</span>(n, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n, <span class=\"number\">0</span>)); <span class=\"comment\">// 使用vector定义一个二维数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span> startx = <span class=\"number\">0</span>, starty = <span class=\"number\">0</span>; <span class=\"comment\">// 定义每循环一个圈的起始位置</span></span><br><span class=\"line\">        <span class=\"type\">int</span> loop = n / <span class=\"number\">2</span>; <span class=\"comment\">// 每个圈循环几次，例如n为奇数3，那么loop = 1 只是循环一圈，矩阵中间的值需要单独处理</span></span><br><span class=\"line\">        <span class=\"type\">int</span> mid = n / <span class=\"number\">2</span>; <span class=\"comment\">// 矩阵中间的位置，例如：n为3， 中间的位置就是(1，1)，n为5，中间位置为(2, 2)</span></span><br><span class=\"line\">        <span class=\"type\">int</span> count = <span class=\"number\">1</span>; <span class=\"comment\">// 用来给矩阵中每一个空格赋值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> offset = <span class=\"number\">1</span>; <span class=\"comment\">// 需要控制每一条边遍历的长度，每次循环右边界收缩一位</span></span><br><span class=\"line\">        <span class=\"type\">int</span> i,j;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (loop --) &#123;</span><br><span class=\"line\">            i = startx;</span><br><span class=\"line\">            j = starty;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 下面开始的四个for就是模拟转了一圈</span></span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充上行从左到右(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j; j &lt; n - offset; j++) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充右列从上到下(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i; i &lt; n - offset; i++) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充下行从右到左(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; j &gt; starty; j--) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 模拟填充左列从下到上(左闭右开)</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; i &gt; startx; i--) &#123;</span><br><span class=\"line\">                res[i][j] = count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 第二圈开始的时候，起始位置要各自加1， 例如：第一圈起始位置是(0, 0)，第二圈起始位置是(1, 1)</span></span><br><span class=\"line\">            startx++;</span><br><span class=\"line\">            starty++;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// offset 控制每一圈里每一条边遍历的长度</span></span><br><span class=\"line\">            offset += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果n为奇数的话，需要单独给矩阵最中间的位置赋值</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n % <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            res[mid][mid] = count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clvwk77pj0000083a3e9i5t0u","category_id":"clvwlele10001e73a0sx54w5w","_id":"clvwlele60004e73a5w3t2r8c"},{"post_id":"clvxxa3ik0001y33a7vc9grf1","category_id":"clvxxf3ek0004y33a306eefes","_id":"clvxxf3em0005y33a61m44f1i"},{"post_id":"clvyy06x50007y33a4rdk2p2l","category_id":"clvyy1p2g0008y33a4q8m8nv1","_id":"clvyy1p2i000by33a85t0boex"},{"post_id":"clw4qzoga00003q3agx46417l","category_id":"clvyy1p2g0008y33a4q8m8nv1","_id":"clw4qzogf00033q3a81ew8qbg"},{"post_id":"clwqglb0u0000xs3aexs1ayue","category_id":"clvyy1p2g0008y33a4q8m8nv1","_id":"clwqglb100008xs3agqdcf6ko"},{"post_id":"clwqglb0u0000xs3aexs1ayue","category_id":"clwqglb0x0004xs3afmks99il","_id":"clwqglb10000axs3a9cg9f0oq"},{"post_id":"clwqglb0w0001xs3a4rtvebko","category_id":"clvyy1p2g0008y33a4q8m8nv1","_id":"clwqglb10000bxs3af0jn078x"},{"post_id":"clwqglb0w0001xs3a4rtvebko","category_id":"clwqglb0x0004xs3afmks99il","_id":"clwqglb11000dxs3a42uof2q2"},{"post_id":"clwqglb0x0003xs3a7vi0dijo","category_id":"clvyy1p2g0008y33a4q8m8nv1","_id":"clwqglb11000fxs3acyl23ljp"},{"post_id":"clwqglb0x0003xs3a7vi0dijo","category_id":"clwqglb0x0004xs3afmks99il","_id":"clwqglb11000ixs3aema7doe3"}],"PostTag":[{"post_id":"clvwk77pj0000083a3e9i5t0u","tag_id":"clvwlele40002e73ah8la9ruu","_id":"clvwlele60003e73abgy52jqo"},{"post_id":"clvxxa3ik0001y33a7vc9grf1","tag_id":"clvwlele40002e73ah8la9ruu","_id":"clvxxbt2c0002y33agfvr8igk"},{"post_id":"clvyy06x50007y33a4rdk2p2l","tag_id":"clvyy1p2h0009y33a6zddadqo","_id":"clvyy1p2j000cy33a1p90bh1s"},{"post_id":"clvyy06x50007y33a4rdk2p2l","tag_id":"clvyy1p2i000ay33a8f6bb59d","_id":"clvyy1p2k000dy33ahhrx46ro"},{"post_id":"clw4qzoga00003q3agx46417l","tag_id":"clvyy1p2h0009y33a6zddadqo","_id":"clw4qzogf00013q3a99f2atfm"},{"post_id":"clw4qzoga00003q3agx46417l","tag_id":"clvyy1p2i000ay33a8f6bb59d","_id":"clw4qzogf00023q3afib4fp71"},{"post_id":"clwqglb0u0000xs3aexs1ayue","tag_id":"clvyy1p2h0009y33a6zddadqo","_id":"clwqglb11000exs3agvtj8a71"},{"post_id":"clwqglb0u0000xs3aexs1ayue","tag_id":"clvyy1p2i000ay33a8f6bb59d","_id":"clwqglb11000gxs3afftdgvao"},{"post_id":"clwqglb0u0000xs3aexs1ayue","tag_id":"clwqglb0w0002xs3a77j27ood","_id":"clwqglb11000jxs3a8dm49rll"},{"post_id":"clwqglb0u0000xs3aexs1ayue","tag_id":"clwqglb0y0005xs3a3i0qfm7d","_id":"clwqglb11000kxs3a956tciop"},{"post_id":"clwqglb0u0000xs3aexs1ayue","tag_id":"clwqglb100009xs3afg4u6frh","_id":"clwqglb11000mxs3acjrk44no"},{"post_id":"clwqglb0w0001xs3a4rtvebko","tag_id":"clvyy1p2h0009y33a6zddadqo","_id":"clwqglb11000oxs3aegsz9h6p"},{"post_id":"clwqglb0w0001xs3a4rtvebko","tag_id":"clvyy1p2i000ay33a8f6bb59d","_id":"clwqglb11000pxs3a2jsiapn4"},{"post_id":"clwqglb0w0001xs3a4rtvebko","tag_id":"clwqglb0w0002xs3a77j27ood","_id":"clwqglb11000rxs3abv0k8cur"},{"post_id":"clwqglb0w0001xs3a4rtvebko","tag_id":"clwqglb0y0005xs3a3i0qfm7d","_id":"clwqglb11000sxs3aeabn19ya"},{"post_id":"clwqglb0w0001xs3a4rtvebko","tag_id":"clwqglb100009xs3afg4u6frh","_id":"clwqglb11000uxs3a2umn5of9"},{"post_id":"clwqglb0x0003xs3a7vi0dijo","tag_id":"clvyy1p2h0009y33a6zddadqo","_id":"clwqglb11000vxs3aeq7vf3dg"},{"post_id":"clwqglb0x0003xs3a7vi0dijo","tag_id":"clvyy1p2i000ay33a8f6bb59d","_id":"clwqglb11000wxs3a3tjp7fhv"},{"post_id":"clwqglb0x0003xs3a7vi0dijo","tag_id":"clwqglb0w0002xs3a77j27ood","_id":"clwqglb11000xxs3agy6a1v8q"},{"post_id":"clwqglb0x0003xs3a7vi0dijo","tag_id":"clwqglb0y0005xs3a3i0qfm7d","_id":"clwqglb11000yxs3aakfn1r8b"},{"post_id":"clwqglb0x0003xs3a7vi0dijo","tag_id":"clwqglb100009xs3afg4u6frh","_id":"clwqglb11000zxs3a348t4rud"}],"Tag":[{"name":"Blog","_id":"clvwlele40002e73ah8la9ruu"},{"name":"cpp","_id":"clvyy1p2h0009y33a6zddadqo"},{"name":"计算机","_id":"clvyy1p2i000ay33a8f6bb59d"},{"name":"leetcode","_id":"clwqglb0w0002xs3a77j27ood"},{"name":"秋招","_id":"clwqglb0y0005xs3a3i0qfm7d"},{"name":"算法","_id":"clwqglb100009xs3afg4u6frh"}]}}